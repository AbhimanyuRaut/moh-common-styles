var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractForm.html",[0,0.009,1,2.905]],["body/classes/AbstractForm.html",[0,0.01,1,4.208,2,1.571,3,0.284,4,0.31,5,0.139,6,6.242,7,3.587,8,0.284,9,0.847,10,3.145,11,2.3,12,5.812,13,0.993,14,4.993,15,3.405,16,5.011,17,2.895,18,6.51,19,4.208,20,1.29,21,3.587,22,5.427,23,0.88,24,5.486,25,1.273,26,0.019,27,0.592,28,0.546,29,0.943,30,1.774,31,4.173,32,5.486,33,2.218,34,2.414,35,5.486,36,2.306,37,2.683,38,5.486,39,4.173,40,3.829,41,4.208,42,3.059,43,0.795,44,0.795,45,1.618,46,4.173,47,2.551,48,4.208,49,5.486,50,1.781,51,3.829,52,2.218,53,2.113,54,4.173,55,5.486,56,4.544,57,1.224,58,4.716,59,1.87,60,4.716,61,5.486,62,5.486,63,4.208,64,1.663,65,1.495,66,4.173,67,3.526,68,2.87,69,5.486,70,5.486,71,0.798,72,4.173,73,5.486,74,3.829,75,3.275,76,4.208,77,2.697,78,2.183,79,0.343,80,2.056,81,0.645,82,1.291,83,2.327,84,0.259,85,2.491,86,4.173,87,1.173,88,3.587,89,0.645,90,2.056,91,4.173,92,4.173,93,4.173,94,1.231,95,4.173,96,4.173,97,4.173,98,4.173,99,0.01,100,0.013,101,0.01]],["title/classes/AbstractHttpService.html",[0,0.009,102,1.981]],["body/classes/AbstractHttpService.html",[0,0.014,2,1.383,3,0.25,4,0.273,5,0.122,8,0.25,9,0.778,13,1.119,15,3.745,17,3.143,20,0.774,23,0.855,25,1.619,26,0.019,27,0.699,28,0.578,29,1.113,30,1.287,43,0.7,44,0.7,45,1.485,57,1.173,68,2.635,78,3.583,79,0.322,84,0.228,85,2.193,89,0.955,99,0.009,100,0.012,101,0.009,102,2.635,103,6.083,104,2.952,105,3.158,106,1.416,107,3.486,108,3.234,109,3.43,110,4.408,111,3.694,112,4.089,113,3.863,114,3.863,115,4.968,116,2.818,117,3.447,118,5.036,119,3.974,120,3.674,121,4.3,122,3.515,123,3.863,124,3.863,125,4.968,126,4.521,127,3.674,128,4.408,129,3.863,130,3.889,131,4.315,132,1.485,133,3.237,134,3.863,135,3.515,136,2.216,137,2.049,138,3.672,139,3.006,140,3.974,141,3.674,142,3.863,143,4.408,144,3.866,145,3.515,146,3.006,147,2.412,148,3.863,149,3.515,150,1.895,151,3.863,152,3.863,153,3.863,154,4.521,155,3.674,156,3.863,157,3.674,158,3.158,159,3.674,160,2.808,161,4.329,162,2.342,163,2.818,164,1.922,165,1.533,166,2.818,167,3.674,168,2.049,169,1.617,170,3.158,171,2.565,172,3.674,173,1.334,174,5.036,175,5.036,176,3.674,177,3.158,178,3.674,179,5.036,180,5.036,181,1.922,182,3.674,183,2.193,184,2.362,185,3.674,186,3.674,187,2.049,188,3.158,189,3.158,190,3.674,191,1.994,192,4.329,193,2.818,194,2.565,195,2.818]],["title/classes/AbstractTestPage.html",[0,0.009,196,2.644]],["body/classes/AbstractTestPage.html",[0,0.011,2,0.979,3,0.177,4,0.193,5,0.157,8,0.177,9,0.606,11,1.215,13,0.711,15,2.756,16,3.677,19,3.012,23,0.861,25,1.433,26,0.019,27,0.782,28,0.551,29,1.061,34,2.616,43,1.004,44,1.176,53,1.71,56,3.677,57,1.291,64,1.624,65,1.405,71,0.98,76,3.012,78,2.756,79,0.146,84,0.161,89,0.918,99,0.006,100,0.01,101,0.006,106,1.671,136,1.728,150,1.477,169,2.796,173,0.604,191,2.086,196,3.677,197,6.089,198,6.167,199,2.236,200,3.375,201,1.338,202,3.012,203,4.528,204,3.324,205,1.412,206,2.054,207,2.054,208,2.318,209,5.945,210,5.268,211,3.012,212,3.926,213,6.627,214,1.133,215,4.729,216,4.729,217,3.926,218,3.926,219,5.268,220,5.268,221,5.268,222,4.56,223,5.945,224,5.268,225,3.926,226,3.926,227,3.926,228,5.654,229,3.926,230,1.71,231,2.601,232,3.926,233,3.012,234,3.375,235,2.756,236,2.524,237,2.756,238,3.926,239,2.595,240,2.601,241,3.375,242,3.926,243,3.926,244,3.375,245,3.926,246,3.926,247,3.926,248,2.601,249,6.172,250,3.926,251,2.601,252,2.601,253,2.601,254,2.601,255,2.601,256,2.601,257,3.926,258,2.601,259,3.926,260,5.461,261,4.56,262,3.513,263,2.74,264,3.926,265,2.189,266,1.886,267,0.684,268,2.197,269,4.041,270,3.947,271,5.268,272,3.926,273,5.268,274,3.926,275,2.601,276,3.012,277,4.041,278,2.601,279,3.375,280,3.012,281,2.524,282,3.012,283,2.343,284,3.926,285,1.638,286,3.926,287,3.926,288,3.375,289,3.926,290,5.268,291,1.728,292,2.74,293,2.189,294,3.375,295,3.926,296,2.054,297,3.375,298,3.926,299,3.012,300,2.601,301,2.601,302,2.74,303,2.189,304,3.926,305,5.268,306,2.601,307,4.729,308,2.524,309,3.386,310,1.638,311,1.158,312,3.375,313,2.343,314,2.189,315,2.343,316,1.638,317,3.144,318,1.728,319,2.524,320,3.375,321,3.012,322,3.926,323,3.926,324,3.375,325,3.926,326,2.74,327,2.756,328,2.7,329,3.012,330,4.528,331,5.268,332,3.947,333,3.677,334,3.926,335,2.601,336,1.477,337,3.926,338,0.868,339,3.926,340,3.375,341,2.189,342,3.012,343,3.926,344,3.926,345,2.601,346,3.947,347,1.38,348,1.361,349,0.931,350,3.926,351,2.601,352,2.601,353,2.601,354,2.601,355,2.601,356,2.601,357,2.601,358,2.601,359,2.601,360,2.601,361,2.601,362,2.601,363,2.601,364,2.601,365,1.995,366,3.926,367,3.926,368,3.926,369,3.012,370,2.601,371,2.601,372,1.815,373,2.601,374,2.601,375,2.236,376,1.553,377,3.926,378,3.375,379,2.601,380,2.601,381,2.601,382,2.601]],["title/classes/Address.html",[0,0.009,383,1.981]],["body/classes/Address.html",[0,0.016,2,1.659,3,0.3,4,0.328,5,0.147,8,0.3,9,1.027,13,1.03,23,0.89,25,1.024,26,0.019,27,0.476,28,0.569,29,0.758,30,1.453,40,3.969,57,1.14,65,0.975,71,0.97,84,0.273,89,0.878,99,0.011,100,0.014,101,0.011,106,1.24,160,3.997,184,3.655,191,1.746,200,4.887,214,1.446,233,4.361,236,3.655,313,3.756,314,3.509,316,2.372,341,3.17,383,3.898,384,3.79,385,2.307,386,2.834,387,2.834,388,4.827,389,2.253,390,4.827,391,3.509,392,6.648,393,7.046,394,4.409,395,4.409,396,4.409,397,4.409,398,4.409,399,4.887,400,4.409,401,4.409,402,3.292,403,5.686,404,2.266,405,5.686,406,4.409,407,4.887,408,4.361,409,4.887,410,5.686,411,5.686,412,3.655,413,5.686,414,5.686,415,3.655,416,4.887,417,5.686,418,5.686,419,5.686,420,3.655,421,5.686,422,4.409,423,6.293,424,6.293,425,2.307,426,5.686,427,5.686,428,5.686,429,2.458,430,4.409,431,4.409,432,4.409,433,4.409,434,4.409]],["title/classes/Base.html",[0,0.009,435,1.172]],["body/classes/Base.html",[0,0.018,2,2.028,3,0.367,4,0.401,5,0.179,8,0.367,9,0.995,20,1.451,23,0.789,26,0.019,28,0.435,43,1.027,44,1.027,71,0.839,79,0.302,84,0.334,99,0.013,100,0.016,101,0.013,106,1.515,160,3.592,214,1.313,338,1.578,387,4.141,435,2.208,436,4.633,437,6.442,438,3.173,439,3.37,440,2.687,441,2.687,442,3.394,443,6.442,444,3.37,445,2.996,446,2.687,447,2.996,448,3.37,449,3.37,450,2.655]],["title/injectables/CaptchaDataService.html",[451,1.58,452,2.261]],["body/injectables/CaptchaDataService.html",[0,0.013,3,0.283,4,0.309,5,0.138,8,0.283,13,0.991,20,0.875,23,0.796,25,1.509,26,0.019,27,0.701,28,0.524,29,1.117,42,4.116,57,1.107,71,1.018,79,0.364,81,0.642,84,0.339,89,1.071,99,0.01,100,0.013,101,0.01,107,3.012,112,3.65,117,3.866,137,2.317,138,3.533,146,2.48,164,2.174,165,1.733,173,0.965,214,1.383,451,2.551,452,3.265,453,2.48,454,5.18,455,3.188,456,5.471,457,5.471,458,5.471,459,4.156,460,4.156,461,5.257,462,5.804,463,4.156,464,5.318,465,5.257,466,5.822,467,4.156,468,5.257,469,6.165,470,5.959,471,4.156,472,3.572,473,3.201,474,3.188,475,5.257,476,2.901,477,2.901,478,3.931,479,3.572,480,2.671,481,1.488,482,5.257,483,5.257,484,4.702,485,3.572,486,4.702,487,5.257]],["title/modules/CaptchaModule.html",[488,1.981,489,2.261]],["body/modules/CaptchaModule.html",[0,0.011,3,0.316,4,0.345,5,0.155,13,0.841,23,0.569,26,0.019,57,0.841,79,0.415,81,0.717,82,1.437,84,0.288,89,0.717,99,0.011,100,0.014,101,0.011,108,3.075,164,2.43,201,1.238,205,1.576,206,3.075,208,2.044,267,0.535,280,4.509,291,2.044,348,2.43,404,1.583,440,1.938,449,2.43,452,4.33,464,3.564,466,3.564,478,4.146,488,3.374,489,4.542,490,2.59,491,1.583,492,4.495,493,2.288,494,3.143,495,4.947,496,3.993,497,3.993,498,3.993,499,3.993,500,2.572,501,4.103,502,3.243,503,2.288,504,4.646,505,4.103,506,6.449,507,4.646,508,6.449,509,5.053,510,4.88,511,4.501,512,3.993,513,4.646,514,1.748,515,3.993,516,4.646,517,3.993,518,4.646,519,3.564,520,4.646,521,3.993,522,5.879,523,5.053,524,4.646,525,3.993,526,5.053,527,3.564]],["title/classes/CommonImage.html",[0,0.009,528,1.866]],["body/classes/CommonImage.html",[0,0.015,2,1.612,3,0.292,4,0.318,5,0.219,8,0.292,9,0.862,17,1.787,20,1.307,23,0.919,26,0.019,27,0.669,28,0.602,29,0.959,43,0.816,44,0.816,59,1.902,71,0.985,79,0.24,84,0.422,89,0.662,94,1.645,99,0.01,100,0.014,101,0.01,106,1.204,147,2.324,204,2.241,214,0.816,285,1.787,449,3.567,450,2.11,528,3.239,529,2.557,530,3.247,531,3.587,532,4.332,533,4.332,534,4.332,535,3.46,536,4.332,537,4.332,538,2.336,539,4.332,540,4.332,541,5.58,542,2.251,543,4.283,544,4.283,545,3.666,546,4.283,547,4.283,548,4.283,549,4.283,550,4.283,551,4.283,552,4.283,553,4.283,554,4.283,555,1.885,556,2.557,557,3.111,558,2.11,559,2.99,560,2.557,561,2.753,562,2.753,563,2.753,564,2.753,565,2.557,566,2.753,567,2.753,568,2.753,569,2.388,570,2.99,571,2.99,572,2.753,573,2.99,574,2.99,575,2.99,576,2.11,577,1.992,578,2.753,579,2.388,580,2.388,581,2.99,582,2.557,583,2.99,584,2.99,585,2.99,586,2.753,587,2.99,588,2.99,589,2.753,590,2.99,591,2.99,592,0.736,593,3.666,594,3.895,595,3.895,596,3.895,597,2.919,598,0.994,599,2.99,600,3.895,601,3.895,602,2.99,603,3.895,604,0.816,605,3.587]],["title/classes/CommonImageProcessingError.html",[0,0.009,569,2.112]],["body/classes/CommonImageProcessingError.html",[0,0.015,2,1.674,3,0.303,4,0.331,5,0.23,8,0.303,9,0.883,17,1.856,20,1.204,23,0.865,25,1.033,26,0.019,27,0.617,28,0.57,29,1.264,59,1.516,71,0.971,79,0.249,84,0.427,89,0.687,94,1.312,99,0.011,100,0.014,101,0.011,137,2.481,147,2.154,204,2.328,214,1.315,285,1.856,449,3.306,450,2.192,528,3.479,529,2.656,530,2.992,531,2.86,532,3.106,533,3.106,534,3.106,535,2.481,536,3.106,537,3.106,538,1.674,539,3.106,540,3.106,542,2.241,545,3.938,555,1.958,556,2.656,557,3.189,558,2.192,559,3.106,560,2.656,561,2.86,562,2.86,563,2.86,564,2.86,565,2.656,566,2.86,567,2.86,568,2.86,569,3.189,570,4.411,571,4.411,572,2.86,573,3.106,574,3.106,575,3.106,576,2.192,577,2.069,578,2.86,579,2.481,580,2.481,581,3.106,582,2.656,583,3.106,584,3.106,585,4.656,586,4.436,587,3.106,588,3.106,589,2.86,590,3.106,591,3.106,592,0.765,593,3.719,594,3.992,595,3.992,596,3.992,597,2.992,598,1.033,599,3.106,600,3.992,601,3.992,602,3.106,603,3.992,604,0.848,605,3.676,606,4.45,607,5.719,608,4.45,609,5.719,610,4.45]],["title/interfaces/CommonImageScaleFactors.html",[592,0.651,593,2.112]],["body/interfaces/CommonImageScaleFactors.html",[0,0.016,3,0.314,4,0.343,5,0.225,8,0.314,9,0.905,13,1.06,17,1.926,20,0.972,23,0.566,25,1.072,26,0.019,27,0.632,28,0.519,29,0.794,57,0.836,59,1.574,71,0.954,79,0.258,84,0.432,89,0.713,94,1.362,99,0.011,100,0.014,101,0.011,147,2.192,204,2.416,214,0.88,285,1.926,449,3.365,450,2.275,528,3.168,529,2.757,530,3.064,531,2.969,532,3.223,533,3.223,534,3.223,535,2.575,536,3.223,537,3.223,538,1.738,539,3.223,540,3.223,542,2.276,545,3.586,555,2.032,556,2.757,557,3.265,558,2.275,559,3.223,560,2.757,561,2.969,562,2.969,563,2.969,564,2.969,565,2.757,566,2.969,567,2.969,568,2.969,569,2.575,570,3.223,571,3.223,572,2.969,573,3.223,574,3.223,575,3.223,576,2.275,577,2.148,578,2.969,579,2.575,580,2.575,581,3.223,582,2.757,583,3.223,584,3.223,585,3.223,586,2.969,587,3.223,588,3.223,589,2.969,590,3.223,591,3.223,592,0.794,593,3.976,594,4.872,595,4.872,596,4.489,597,3.064,598,1.072,599,3.223,600,4.088,601,4.088,602,3.223,603,4.088,604,0.88,605,4.134,611,1.829,612,5.034,613,4.618]],["title/classes/CommonImageScaleFactorsImpl.html",[0,0.009,597,1.981]],["body/classes/CommonImageScaleFactorsImpl.html",[0,0.015,2,1.702,3,0.308,4,0.336,5,0.223,8,0.308,9,0.892,13,1.046,17,1.886,20,1.217,23,0.822,25,1.341,26,0.019,27,0.687,28,0.542,29,0.993,57,0.819,59,1.541,71,0.95,79,0.253,84,0.43,89,0.698,94,1.333,99,0.011,100,0.014,101,0.011,147,2.17,204,2.366,214,0.862,285,1.886,449,3.332,450,2.227,528,3.137,529,2.699,530,3.023,531,2.907,532,3.156,533,3.156,534,3.156,535,2.521,536,3.156,537,3.156,538,1.702,539,3.156,540,3.156,542,2.28,545,3.551,555,1.99,556,2.699,557,3.222,558,2.227,559,3.156,560,2.699,561,2.907,562,2.907,563,2.907,564,2.907,565,2.699,566,2.907,567,2.907,568,2.907,569,2.521,570,3.156,571,3.156,572,2.907,573,3.156,574,3.156,575,3.156,576,2.227,577,2.103,578,2.907,579,2.521,580,2.521,581,3.156,582,2.699,583,3.156,584,3.156,585,3.156,586,2.907,587,3.156,588,3.156,589,2.907,590,3.156,591,3.156,592,0.777,593,3.955,594,4.684,595,4.684,596,4.445,597,3.332,598,1.341,599,4.033,600,4.684,601,4.033,602,4.033,603,4.033,604,0.862,605,4.094,612,4.967,614,5.778,615,4.522,616,4.522]],["title/interfaces/CommonLogMessage.html",[592,0.651,617,2.644]],["body/interfaces/CommonLogMessage.html",[0,0.008,3,0.371,4,0.247,5,0.111,8,0.226,9,0.726,15,1.74,17,2.606,23,0.408,26,0.019,27,0.588,28,0.478,29,0.572,50,2.028,71,0.924,75,1.985,78,2.458,79,0.35,81,0.514,84,0.291,85,1.985,89,1.069,99,0.008,100,0.011,101,0.008,102,2.458,104,1.388,107,2.684,108,2.458,109,1.985,111,2.138,112,2.805,115,3.605,117,2.62,119,3.503,121,3.806,122,3.803,130,2.62,132,1.386,139,1.985,140,3.503,144,1.985,146,1.985,147,2.391,149,2.322,150,1.252,154,3.28,160,3.038,164,1.74,165,1.388,169,2.068,173,1.265,184,2.138,191,1.861,195,4.973,208,1.464,214,1.038,236,2.138,266,1.191,283,1.985,291,1.464,310,1.96,316,1.388,327,1.74,328,1.768,333,2.322,347,0.772,376,2.805,385,1.74,402,1.74,404,1.134,408,3.605,412,2.138,415,2.138,441,1.96,451,1.96,473,2.917,476,3.28,481,2.236,514,2.508,535,2.62,556,1.985,557,1.855,582,3.253,592,0.808,604,0.895,611,1.317,617,4.652,618,2.322,619,3.712,620,3.326,621,3.326,622,3.605,623,4.039,624,2.322,625,2.458,626,2.322,627,2.322,628,2.138,629,1.08,630,2.552,631,1.388,632,3.605,633,2.859,634,2.754,635,5.369,636,2.859,637,4.039,638,4.039,639,5.09,640,4.039,641,2.068,642,2.322,643,4.039,644,4.039,645,4.039,646,2.859,647,4.039,648,2.859,649,3.503,650,4.131,651,2.859,652,2.859,653,4.039,654,4.039,655,2.322,656,4.18,657,3.605,658,4.18,659,2.138,660,4.039,661,2.322,662,2.859,663,2.859,664,2.859,665,2.458,666,2.859,667,2.859,668,2.859,669,2.859,670,2.859,671,2.859,672,2.859,673,2.859,674,1.74,675,2.859,676,2.805,677,2.859,678,2.859,679,2.859,680,2.859,681,2.859,682,2.859,683,2.859,684,2.859,685,2.859,686,2.552,687,2.552,688,2.552,689,1.74,690,4.039,691,1.985,692,2.859,693,2.859,694,2.859,695,2.859,696,2.859,697,2.859,698,2.859,699,2.859,700,2.859,701,2.859,702,3.021,703,1.985,704,2.322,705,2.859,706,2.322,707,2.138,708,2.859,709,2.859,710,2.859,711,2.859,712,4.039,713,2.322,714,2.859,715,2.552,716,4.039,717,2.859,718,2.859,719,2.859,720,2.859,721,2.859,722,2.859,723,2.859,724,1.547,725,4.039,726,1.855,727,2.552,728,2.859,729,2.552,730,1.985,731,2.859,732,2.859,733,2.859,734,2.859,735,2.859,736,2.859,737,3.605,738,2.859,739,2.859,740,2.322,741,2.859,742,2.859,743,2.859,744,2.859,745,2.859,746,2.859,747,2.552,748,2.859,749,2.859,750,2.859]],["title/injectables/CommonLogger.html",[451,1.58,628,2.435]],["body/injectables/CommonLogger.html",[0,0.006,3,0.297,4,0.169,5,0.076,8,0.155,9,0.548,13,0.789,15,2.787,17,3.034,20,0.48,23,0.891,25,1.651,26,0.019,27,0.771,28,0.589,29,1.215,30,0.583,43,0.83,44,0.83,45,0.672,50,2.077,57,1.272,65,1.347,71,0.908,75,2.118,78,3.187,79,0.298,81,0.352,84,0.22,85,1.361,89,0.966,99,0.006,100,0.009,101,0.006,102,3.274,104,0.951,106,1.225,107,2.902,108,2.28,109,3.18,110,2.722,111,3.425,112,3.516,113,2.722,114,2.722,115,4.087,116,1.749,117,2.742,119,3.627,121,3.916,122,3.938,123,1.749,124,1.749,125,2.722,126,2.477,128,3.343,129,1.749,130,2.971,131,2.477,132,1.571,133,1.466,134,1.749,135,1.592,136,1.003,137,1.271,138,2.779,139,2.601,140,4.023,142,1.749,143,1.749,144,2.601,145,1.592,146,2.601,147,2.376,148,1.749,149,2.477,150,1.64,151,1.749,152,1.749,153,1.749,154,3.432,156,1.749,158,1.96,160,3.146,164,1.193,165,0.951,169,1.562,173,1.011,184,2.281,191,1.947,195,4.328,208,1.562,214,1.192,236,2.281,266,0.816,283,2.118,291,1.562,310,2.051,316,1.48,327,1.193,328,1.64,333,1.592,347,0.824,376,1.361,385,1.857,402,1.857,404,1.21,408,3.772,412,2.281,415,2.281,441,1.48,451,1.48,453,1.361,473,2.779,476,2.477,481,2.454,514,2.452,535,2.43,556,2.118,557,1.271,582,3.368,592,0.61,604,0.937,617,4.62,618,1.592,619,3.409,622,1.749,623,1.96,624,1.592,625,1.857,626,1.592,627,1.592,628,2.281,629,1.152,630,2.722,631,1.48,632,3.343,633,3.051,634,2.624,635,5.236,636,3.051,637,4.227,638,4.227,639,5.236,640,4.227,641,1.918,642,1.592,643,3.051,644,3.051,645,4.227,646,3.051,647,3.051,648,3.051,649,3.787,650,4.051,651,1.96,652,3.746,653,4.227,654,3.051,655,2.477,656,4.087,657,3.772,658,3.772,659,2.281,660,4.227,661,2.477,662,3.051,663,3.051,664,3.051,665,2.573,666,3.051,667,3.051,668,3.051,669,1.96,670,1.96,671,3.051,672,1.96,673,1.96,674,1.857,675,3.051,676,2.601,677,3.051,678,3.051,679,3.051,680,1.96,681,1.96,682,1.96,683,1.96,684,1.96,685,3.051,686,2.722,687,2.722,688,2.722,689,1.857,690,4.227,691,2.118,692,3.051,693,3.051,694,1.96,695,1.96,696,1.96,697,1.96,698,3.746,699,1.96,700,1.96,701,1.96,702,2.281,703,1.361,704,1.592,705,1.96,706,1.592,707,1.466,708,1.96,709,1.96,710,1.96,711,1.96,712,3.051,713,1.592,714,1.96,715,1.749,716,3.051,717,1.96,718,1.96,719,1.96,720,1.96,721,1.96,722,1.96,723,1.96,724,2.833,725,3.746,726,1.979,727,2.722,728,3.051,729,2.722,730,2.118,731,3.051,732,3.051,733,4.227,734,1.96,735,1.96,736,3.051,737,3.772,738,1.96,739,3.051,740,2.477,741,3.051,742,3.051,743,3.051,744,3.051,745,1.96,746,1.96,747,1.749,748,1.96,749,1.96,750,1.96,751,3.549,752,3.549,753,3.549,754,3.549,755,3.549,756,3.549,757,3.549,758,2.28,759,2.28,760,2.28,761,2.28,762,2.28,763,2.28,764,2.28,765,2.28,766,2.28,767,2.28,768,2.28,769,2.28,770,2.28,771,1.96,772,1.96,773,1.96,774,1.96,775,2.28,776,1.96,777,1.96,778,2.28,779,2.28,780,2.28,781,2.28,782,2.28,783,2.28,784,2.28,785,2.28,786,2.28]],["title/classes/Container.html",[0,0.009,787,1.866]],["body/classes/Container.html",[0,0.012,2,1.8,3,0.48,4,0.355,5,0.159,8,0.325,9,0.925,13,1.084,17,2.726,23,0.801,25,1.39,26,0.019,27,0.646,28,0.527,29,1.029,57,1.084,59,2.04,65,1.324,71,0.969,74,5.233,79,0.268,83,2.666,84,0.371,89,0.925,99,0.012,100,0.015,101,0.012,106,1.344,150,2.253,162,2.784,202,4.592,261,4.592,296,3.132,435,1.852,592,1.029,787,3.374,788,3.668,789,2.371,790,5.146,791,5.146,792,5.013,793,5.987,794,5.618,795,3.901,796,4.782,797,4.201,798,5.146,799,5.146,800,4.782,801,5.146,802,5.146,803,4.403,804,5.888,805,4.782,806,4.782,807,4.782,808,5.146,809,4.111,810,4.111,811,4.111,812,4.111,813,1.712,814,1.552,815,4.111,816,4.111,817,5.146,818,4.111,819,3.338,820,2.502]],["title/components/CoreBreadcrumbComponent.html",[267,0.436,821,1.23]],["body/components/CoreBreadcrumbComponent.html",[0,0.009,3,0.263,4,0.287,5,0.173,8,0.263,11,1.612,13,0.944,20,1.242,23,0.639,26,0.019,27,0.636,29,0.896,34,1.7,41,3.997,52,1.317,53,1.254,57,0.7,59,1.776,64,1.332,65,0.854,77,2.293,79,0.292,81,0.597,84,0.323,99,0.009,100,0.013,101,0.009,106,1.086,201,1.59,205,1.397,208,2.595,230,1.254,239,2.905,267,0.679,283,3.11,309,3.35,311,1.139,316,2.174,317,3.11,318,2.293,324,4.479,329,3.997,338,1.152,349,2.26,387,3.35,389,1.383,435,1.953,491,1.317,500,1.317,503,1.903,598,1.21,631,1.612,691,3.11,789,1.53,813,1.383,814,1.254,820,2.021,821,2.049,822,1.454,823,2.359,824,1.454,825,1.454,826,5.069,827,4.523,828,3.321,829,7.151,830,6.312,831,5.211,832,5.211,833,3.35,834,2.905,835,4.479,836,5.211,837,5.211,838,3.35,839,4.479,840,5.211,841,5.211,842,5.211,843,5.211,844,5.211,845,1.824,846,1.254,847,2.041,848,2.527,849,1.612,850,5.069,851,1.612,852,5.211,853,1.953,854,3.863,855,3.863,856,2.306,857,2.306,858,1.797,859,2.483,860,2.483,861,3.863,862,3.11,863,2.306,864,2.697,865,2.483,866,2.021,867,2.964,868,3.085,869,2.905,870,5.211,871,5.069,872,5.426,873,4.479,874,3.321,875,3.321,876,3.863,877,3.863,878,3.791,879,5.897,880,3.321,881,2.964,882,3.863,883,2.154,884,2.697,885,3.863,886,2.964,887,3.863,888,2.154,889,2.306,890,3.321,891,2.063,892,1.036,893,2.499,894,1.53,895,1.139,896,1.53,897,1.53,898,1.53,899,1.195,900,1.53,901,1.254,902,1.53,903,1.53,904,1.195,905,1.53,906,1.254,907,2.063,908,1.254,909,1.254,910,1.53,911,1.254,912,1.53,913,1.139,914,1.53,915,1.195,916,1.53,917,1.254,918,1.53,919,1.195,920,1.53,921,1.254,922,1.195,923,1.195,924,1.53,925,1.195,926,1.53,927,1.195,928,1.454,929,1.53]],["title/interfaces/CountryList.html",[592,0.651,930,2.644]],["body/interfaces/CountryList.html",[0,0.007,3,0.189,4,0.207,5,0.093,8,0.189,9,0.637,10,1.293,26,0.019,27,0.3,28,0.333,30,1.487,34,1.816,36,1.852,43,0.787,44,1.161,45,1.217,47,1.293,51,1.941,59,1.407,63,2.133,65,1.204,71,0.96,79,0.363,80,1.37,81,0.43,82,0.86,84,0.305,87,0.782,89,1.056,90,1.37,99,0.013,100,0.01,101,0.012,104,1.16,106,1.714,107,1.37,130,2.744,132,1.217,138,2.424,165,1.16,166,2.133,168,1.551,169,1.816,173,1.143,183,2.464,191,1.634,201,0.586,204,1.455,205,0.745,214,1.235,222,2.133,266,1.478,267,0.627,268,1.16,281,1.788,296,1.455,313,3.766,314,2.744,316,1.16,319,1.788,326,1.941,327,1.455,328,1.852,332,2.881,336,1.047,341,1.551,342,2.133,346,2.881,347,1.537,383,3.391,391,1.551,404,0.948,420,3.501,425,1.455,429,1.551,435,1.277,446,1.16,473,1.37,480,1.788,481,1.95,493,1.37,494,1.224,503,1.37,514,2.439,579,1.551,592,0.936,598,0.646,604,1.038,611,1.101,629,0.903,634,1.293,641,2.397,649,1.788,674,1.455,676,1.66,689,1.455,726,1.551,740,3.435,819,1.941,820,1.455,845,1.277,847,0.745,849,0.86,851,0.86,853,0.86,856,1.66,857,1.66,895,1.217,930,3.801,931,2.133,932,3.548,933,4.681,934,1.478,935,1.762,936,1.949,937,3.473,938,2.464,939,1.722,940,2.881,941,2.653,942,2.39,943,4.231,944,2.39,945,3.548,946,2.39,947,3.166,948,1.455,949,1.37,950,3.037,951,2.301,952,2.39,953,3.801,954,2.39,955,2.39,956,2.39,957,1.16,958,1.293,959,1.634,960,1.455,961,1.101,962,1.16,963,1.478,964,1.553,965,1.66,966,1.66,967,2.39,968,2.39,969,1.224,970,2.39,971,1.941,972,2.39,973,2.39,974,1.455,975,2.653,976,1.66,977,1.66,978,2.39,979,2.39,980,2.39,981,2.39,982,2.39,983,2.39,984,2.39,985,2.39,986,1.941,987,1.941,988,2.39,989,2.39,990,2.39,991,2.39,992,2.39,993,4.681,994,3.435,995,3.776,996,3.548,997,2.133,998,2.133,999,2.39,1000,3.548,1001,1.224,1002,2.39,1003,2.39,1004,2.39,1005,2.39,1006,2.39,1007,2.39,1008,2.39,1009,2.39,1010,2.39,1011,1.788,1012,2.39,1013,5.424,1014,2.39,1015,5.691,1016,4.231,1017,5.239,1018,5.239,1019,5.424,1020,2.39,1021,2.39,1022,3.548,1023,2.39,1024,3.548,1025,2.133,1026,3.548,1027,2.464,1028,2.39,1029,1.941,1030,2.39,1031,2.39,1032,2.39,1033,4.231,1034,2.39,1035,2.39,1036,3.548,1037,1.66,1038,2.39,1039,2.39,1040,3.435,1041,2.39,1042,3.548,1043,2.39,1044,2.39,1045,3.166,1046,2.39,1047,2.39,1048,2.39,1049,2.133,1050,2.39,1051,4.231,1052,2.39,1053,2.39,1054,2.39,1055,2.39,1056,2.39,1057,2.39,1058,2.39,1059,3.548,1060,2.39,1061,3.548,1062,2.39,1063,3.548,1064,3.548,1065,2.39,1066,2.39,1067,1.941,1068,1.788,1069,2.39,1070,2.39,1071,3.548,1072,2.39,1073,2.39,1074,2.39,1075,2.881,1076,2.39,1077,2.133,1078,1.788,1079,2.39,1080,2.39,1081,1.941,1082,2.653,1083,1.941,1084,2.39,1085,2.39,1086,2.39,1087,1.941,1088,1.788,1089,2.39,1090,2.39,1091,2.133,1092,3.548,1093,1.941,1094,1.788,1095,2.39,1096,2.39,1097,2.39,1098,1.941,1099,2.39,1100,2.39,1101,2.39,1102,1.941,1103,2.39,1104,2.39,1105,2.39,1106,2.39,1107,2.39,1108,3.548,1109,2.39,1110,2.39,1111,2.133,1112,1.941,1113,2.39,1114,2.881,1115,1.941]],["title/components/DateComponent.html",[267,0.436,899,1.172]],["body/components/DateComponent.html",[0,0.006,3,0.156,4,0.17,5,0.118,8,0.156,9,0.549,10,2.03,11,1.523,13,0.644,20,0.749,23,0.872,25,1.238,26,0.019,27,0.658,28,0.567,29,0.917,30,1.443,33,1.212,34,1.006,36,2.219,37,2.805,42,1.274,43,1.162,44,1.363,45,1.452,47,1.063,50,1.833,52,0.779,53,0.742,56,2.482,57,1.023,59,1.212,64,0.909,65,1.348,67,1.469,68,1.196,71,0.95,79,0.316,80,2.425,81,0.353,82,0.707,84,0.22,87,1,89,0.353,90,1.126,94,1.048,99,0.006,100,0.009,101,0.006,132,0.674,147,0.779,150,1.338,173,1.238,181,2.576,183,1.364,201,1.479,205,0.953,214,1.016,230,0.742,235,1.86,239,1.126,262,2.627,266,0.818,267,0.614,268,1.82,281,1.469,309,1.469,310,1.483,311,0.674,318,1.565,336,0.86,338,0.965,347,1.486,349,1.273,389,0.818,402,1.86,404,1.212,435,1.523,438,1.126,439,1.196,440,0.953,441,1.82,442,1.751,444,1.196,445,1.063,446,1.483,447,1.063,448,1.196,481,2.182,491,1.212,500,0.779,503,1.126,514,2.294,538,0.86,542,1.048,555,2.485,576,1.126,577,2.481,592,0.393,598,0.825,604,0.436,625,1.86,629,1.154,641,2.347,665,3.411,674,1.196,689,1.196,724,1.063,787,1.126,789,0.905,813,0.818,814,0.742,821,0.742,822,0.86,823,0.818,824,0.86,825,0.86,845,1.35,846,0.742,847,1.917,848,0.818,849,1.1,851,1.1,853,1.523,856,1.364,857,1.364,858,1.063,862,2.605,863,2.122,864,1.595,865,1.469,866,1.196,867,1.753,869,1.274,878,2.805,883,2.433,891,1.408,892,0.613,893,1.95,894,0.905,895,0.674,896,0.905,897,0.905,898,0.905,899,1.523,900,0.905,901,0.742,902,0.905,903,0.905,904,0.707,905,0.905,906,0.742,907,1.408,908,0.742,909,0.742,910,0.905,911,0.742,912,0.905,913,0.674,914,0.905,915,0.707,916,0.905,917,0.742,918,0.905,919,0.707,920,0.905,921,0.742,922,1.35,923,0.707,924,0.905,925,0.707,926,0.905,927,0.707,928,0.86,929,0.905,934,1.273,935,1.763,936,1.728,937,1.364,939,1.82,949,1.126,957,0.953,958,1.063,959,0.905,960,1.196,961,0.905,962,1.483,963,1.273,964,1.338,969,1.006,975,1.469,976,1.364,977,1.364,1001,1.006,1027,2.122,1088,2.286,1116,1.753,1117,3.751,1118,3.056,1119,4.585,1120,3.751,1121,4.585,1122,4.585,1123,3.751,1124,3.751,1125,3.751,1126,3.751,1127,4.232,1128,2.605,1129,3.751,1130,3.751,1131,1.654,1132,3.348,1133,2.286,1134,2.805,1135,3.437,1136,2.286,1137,2.433,1138,2.286,1139,2.286,1140,2.805,1141,2.286,1142,2.286,1143,2.286,1144,3.942,1145,4.332,1146,2.286,1147,2.727,1148,2.286,1149,2.286,1150,2.286,1151,2.286,1152,2.286,1153,2.482,1154,2.286,1155,2.286,1156,2.286,1157,3.492,1158,4.332,1159,4.855,1160,2.286,1161,2.286,1162,3.569,1163,2.286,1164,2.286,1165,3.056,1166,2.286,1167,2.122,1168,2.482,1169,2.939,1170,2.286,1171,3.056,1172,2.482,1173,2.482,1174,2.482,1175,3.056,1176,5.068,1177,2.286,1178,2.286,1179,3.056,1180,3.056,1181,3.056,1182,3.056,1183,3.056,1184,3.056,1185,3.056,1186,3.056,1187,3.056,1188,3.056,1189,3.056,1190,2.286,1191,2.286,1192,2.286,1193,2.286,1194,2.286,1195,1.274,1196,1.965,1197,1.753,1198,2.727,1199,2.482,1200,2.482,1201,1.965,1202,2.482,1203,2.482,1204,2.286,1205,3.942,1206,1.965,1207,1.753,1208,3.056,1209,1.965,1210,3.056,1211,1.965,1212,3.056,1213,1.965,1214,3.751,1215,1.965,1216,4.332,1217,3.056,1218,3.751,1219,1.965,1220,2.745,1221,1.965,1222,1.965,1223,1.595,1224,1.196,1225,1.965,1226,1.965,1227,1.965,1228,1.965,1229,1.753,1230,3.751,1231,1.595,1232,0.953,1233,1.595,1234,3.056,1235,3.056,1236,3.056,1237,3.056,1238,3.056,1239,3.056,1240,3.056,1241,2.122,1242,1.965,1243,1.595,1244,1.595,1245,1.965,1246,2.286,1247,3.046,1248,2.15,1249,1.469,1250,4.364,1251,2.433,1252,1.982,1253,2.286,1254,2.727,1255,2.286,1256,1.753,1257,1.469,1258,2.286,1259,3.556,1260,2.286,1261,3.556,1262,2.286,1263,4.364,1264,2.805,1265,2.286,1266,2.286,1267,1.595]],["title/interfaces/DateErrorMsg.html",[592,0.651,1140,2.435]],["body/interfaces/DateErrorMsg.html",[0,0.008,3,0.219,4,0.239,5,0.107,8,0.219,9,0.71,10,1.498,11,0.997,20,0.678,26,0.019,28,0.533,29,1.224,30,1.368,34,1.418,36,2.197,42,1.796,43,0.614,44,1.309,45,1.355,47,1.498,50,2.144,59,1.098,65,1.184,67,2.071,68,1.686,71,0.989,79,0.345,80,2.875,81,0.498,82,0.997,84,0.285,87,0.906,89,0.498,90,1.587,94,0.95,99,0.008,100,0.011,101,0.008,106,0.906,132,0.95,150,1.212,173,1.433,181,3.054,183,1.923,201,0.678,205,1.231,214,0.614,235,1.686,262,1.587,266,1.153,267,0.71,268,1.916,281,2.071,310,1.344,336,1.212,347,1.595,402,1.686,404,1.098,435,1.421,438,2.263,439,2.403,440,1.916,441,2.435,446,1.344,481,2.09,503,1.587,514,2.322,542,0.95,555,2.356,576,1.587,577,2.87,592,0.554,598,0.748,604,0.614,611,1.276,625,2.403,629,1.046,641,2.356,665,3.228,674,1.686,689,1.686,845,1.421,847,0.864,849,0.997,851,0.997,853,0.997,856,1.923,857,1.923,863,1.923,899,0.997,922,0.997,934,1.645,935,1.917,936,1.819,937,1.923,939,1.916,949,1.587,957,1.344,958,1.498,959,1.276,960,1.686,961,1.276,962,1.344,963,1.153,964,1.212,975,2.071,976,1.923,977,1.923,1001,1.418,1027,1.923,1088,2.071,1116,2.471,1117,2.77,1118,2.77,1119,4.603,1120,2.77,1121,4.603,1122,4.603,1123,2.77,1124,2.77,1125,2.77,1126,2.77,1127,2.77,1128,1.923,1129,2.77,1130,2.77,1132,2.471,1134,2.071,1135,3.207,1137,2.562,1140,3.442,1144,3.737,1145,4.107,1147,2.471,1152,2.071,1153,2.249,1157,3.441,1158,4.107,1159,4.603,1162,3.255,1165,2.77,1167,1.923,1168,2.249,1169,1.923,1170,2.071,1171,2.77,1172,2.249,1173,2.249,1174,2.249,1175,2.77,1176,5.018,1179,2.77,1180,2.77,1181,2.77,1182,2.77,1183,2.77,1184,2.77,1185,2.77,1186,2.77,1187,2.77,1188,2.77,1189,2.77,1196,2.77,1197,2.471,1198,4.734,1199,4.307,1200,4.307,1201,5.018,1202,4.307,1203,4.307,1204,2.953,1205,4.478,1206,2.77,1207,2.471,1208,3.949,1209,2.77,1210,3.949,1211,2.77,1212,3.949,1213,2.77,1214,4.603,1215,2.77,1216,4.922,1217,3.949,1218,4.603,1219,2.77,1220,2.562,1221,2.77,1222,2.77,1223,2.249,1224,1.686,1225,2.77,1226,2.77,1227,2.77,1228,2.77,1229,2.471,1230,4.603,1231,2.249,1232,1.344,1233,2.249]],["title/directives/DateFieldFormatDirective.html",[892,1.015,923,1.172]],["body/directives/DateFieldFormatDirective.html",[0,0.013,3,0.357,4,0.389,5,0.174,8,0.357,23,0.776,26,0.019,28,0.423,79,0.293,81,0.809,84,0.324,94,1.545,99,0.013,100,0.015,101,0.013,173,1.47,347,1.58,542,1.545,604,0.998,619,3.56,846,1.7,847,1.697,892,1.697,922,1.62,923,1.959,934,2.267,935,2.436,966,4.062,1081,4.42,1131,2.945,1268,5.85,1269,4.503,1270,6.332,1271,6.806,1272,5.443,1273,5.238,1274,4.503,1275,5.238,1276,5.238,1277,4.018,1278,5.238,1279,5.238,1280,5.238,1281,5.238,1282,5.238,1283,4.07,1284,5.238,1285,5.238,1286,7.239,1287,5.238,1288,5.238,1289,6.332,1290,5.238,1291,5.238,1292,5.238]],["title/components/DatepickerComponent.html",[267,0.436,901,1.23]],["body/components/DatepickerComponent.html",[0,0.005,3,0.213,4,0.145,5,0.104,8,0.213,9,0.484,10,1.83,11,0.97,13,0.568,20,0.828,23,0.889,25,1.339,26,0.019,27,0.673,28,0.569,29,0.991,30,1.348,33,1.069,34,0.858,36,1.696,37,1.254,42,1.088,43,1.264,44,1.099,45,1.329,47,0.907,50,1.712,51,1.362,52,0.665,53,0.633,56,3.447,57,1.13,59,1.069,64,0.802,65,1.38,71,0.643,75,1.164,77,0.858,79,0.295,80,0.961,81,0.301,82,0.603,84,0.194,87,1.106,88,3.874,89,0.815,90,0.961,94,1.7,99,0.005,100,0.008,101,0.005,106,0.548,132,0.575,133,2.897,136,2.321,161,2.696,162,2.096,171,1.362,173,0.728,177,3.382,183,1.164,187,1.088,191,0.772,201,1.437,205,1.324,214,1.099,230,0.633,235,2.058,262,1.545,266,0.698,267,0.732,268,0.814,270,2.189,285,1.308,291,1.38,292,1.362,302,1.362,303,1.749,311,0.575,316,0.814,318,1.38,332,3.146,333,2.189,336,1.858,338,0.87,347,1.571,349,1.888,375,1.677,389,0.698,425,1.02,435,1.394,441,1.308,442,1.545,444,1.02,445,0.907,446,1.308,447,0.907,448,1.02,491,0.665,494,1.38,500,0.665,503,0.961,514,1.18,538,2.087,555,0.858,557,1.749,577,2.297,592,0.539,598,0.728,604,0.75,619,1.02,622,1.496,625,1.641,629,1.018,631,1.308,641,2.537,665,3.782,703,1.164,704,1.362,707,1.254,724,0.907,730,1.872,789,1.558,813,0.698,814,0.633,820,2.76,821,0.633,822,0.734,823,0.698,824,0.734,825,0.734,845,1.217,846,0.633,847,1.869,848,0.698,849,0.97,851,0.97,853,1.394,856,1.164,857,1.164,862,2.348,863,1.164,864,1.362,866,1.641,888,1.749,889,1.872,891,1.558,892,0.523,893,1.785,894,0.772,895,0.575,896,0.772,897,0.772,898,0.772,899,0.603,900,0.772,901,1.712,902,0.772,903,0.772,904,0.603,905,0.772,906,0.633,907,1.242,908,0.633,909,0.633,910,0.772,911,0.633,912,0.772,913,0.575,914,0.772,915,0.603,916,0.772,917,0.633,918,0.772,919,0.603,920,0.772,921,0.633,922,0.603,923,0.603,924,0.772,925,0.603,926,0.772,927,0.603,928,0.734,929,0.772,934,1.123,935,1.408,936,1.955,938,2.348,939,1.641,940,2.746,941,2.529,948,3.507,949,0.961,957,0.814,958,2.096,959,1.785,960,1.02,961,0.772,962,1.308,963,1.613,964,1.696,965,1.872,976,1.872,1001,0.858,1037,1.872,1049,1.496,1067,2.189,1112,2.189,1114,3.146,1115,2.189,1128,2.348,1131,1.459,1132,3.018,1140,2.529,1147,1.496,1152,2.897,1157,1.749,1162,1.749,1195,1.088,1198,1.496,1199,1.362,1200,1.362,1202,1.362,1203,1.362,1204,2.016,1216,3.457,1220,1.749,1224,1.641,1234,2.696,1235,2.696,1236,2.696,1237,2.696,1238,2.696,1239,2.696,1240,2.696,1245,1.677,1251,1.088,1256,1.496,1264,2.897,1293,1.496,1294,5.631,1295,3.137,1296,3.137,1297,5.631,1298,3.137,1299,3.137,1300,3.137,1301,2.69,1302,2.016,1303,1.872,1304,3.934,1305,3.137,1306,3.382,1307,3.382,1308,3.934,1309,5.366,1310,4.253,1311,3.934,1312,4.507,1313,3.137,1314,3.137,1315,3.137,1316,2.696,1317,3.934,1318,2.696,1319,2.696,1320,2.696,1321,3.934,1322,4.507,1323,4.938,1324,4.938,1325,4.938,1326,3.934,1327,3.137,1328,6.108,1329,5.275,1330,1.951,1331,2.016,1332,3.137,1333,3.874,1334,4.245,1335,4.507,1336,2.696,1337,3.137,1338,1.951,1339,2.696,1340,1.951,1341,2.406,1342,1.951,1343,1.951,1344,3.874,1345,4.507,1346,4.507,1347,6.108,1348,1.951,1349,1.951,1350,1.951,1351,1.951,1352,3.137,1353,2.696,1354,3.137,1355,3.137,1356,1.951,1357,3.137,1358,1.951,1359,3.137,1360,2.189,1361,1.951,1362,1.951,1363,3.137,1364,1.951,1365,3.137,1366,1.951,1367,3.137,1368,1.951,1369,3.874,1370,1.951,1371,1.254,1372,1.951,1373,3.137,1374,1.951,1375,1.951,1376,1.951,1377,3.137,1378,1.951,1379,2.189,1380,1.951,1381,3.934,1382,1.951,1383,3.137,1384,1.951,1385,1.951,1386,3.137,1387,3.934,1388,3.137,1389,1.951,1390,1.496,1391,1.951,1392,1.951,1393,1.951,1394,1.677,1395,1.951,1396,1.951,1397,1.459,1398,1.951,1399,1.951,1400,1.677,1401,1.951,1402,1.496,1403,1.677,1404,1.951,1405,5.275,1406,1.951,1407,1.951,1408,1.951,1409,1.951,1410,1.951,1411,1.951,1412,1.951,1413,1.951,1414,1.951,1415,1.951,1416,1.951,1417,1.951,1418,1.951,1419,1.951,1420,3.137,1421,1.951,1422,3.137,1423,1.951,1424,1.951,1425,2.406,1426,3.934,1427,1.951,1428,1.951,1429,3.382,1430,1.677,1431,1.951,1432,1.951,1433,1.951,1434,1.677,1435,1.496,1436,0.858,1437,1.951,1438,1.951,1439,1.677,1440,1.951,1441,1.677,1442,1.677,1443,1.951,1444,1.951,1445,3.382,1446,3.137,1447,2.696,1448,1.951,1449,1.951,1450,1.951,1451,1.951,1452,1.951,1453,1.951,1454,1.677,1455,1.496,1456,1.496,1457,3.018,1458,1.951,1459,3.934,1460,4.507,1461,1.951,1462,1.951,1463,0.961,1464,1.677,1465,1.254,1466,1.254,1467,1.951,1468,1.951,1469,1.951,1470,1.951,1471,1.254,1472,1.951,1473,1.951,1474,1.951,1475,1.951,1476,1.951,1477,1.951,1478,1.951,1479,1.362,1480,2.696,1481,1.951,1482,1.677,1483,1.951,1484,1.951]],["title/directives/DayValidationDirective.html",[892,1.015,925,1.172]],["body/directives/DayValidationDirective.html",[0,0.011,3,0.318,4,0.347,5,0.155,8,0.318,13,1.068,23,0.572,25,1.084,26,0.019,27,0.504,28,0.476,29,0.802,44,1.124,57,0.845,71,0.608,79,0.362,81,0.721,82,1.444,84,0.289,87,1.658,89,0.721,99,0.011,100,0.014,101,0.011,163,3.581,173,1.576,181,3.381,376,2.786,409,4.012,425,2.442,441,2.46,494,2.595,542,1.739,598,1.369,625,3.085,641,2.844,665,3.085,846,1.515,847,1.58,892,1.58,922,1.444,925,2.1,936,2.559,958,2.171,963,2.111,964,2.219,965,3.52,977,4.053,1153,3.258,1157,3.987,1162,2.603,1173,4.116,1174,3.258,1231,3.258,1232,1.947,1233,4.739,1331,3.79,1390,5.208,1400,5.068,1402,4.523,1485,5.068,1486,4.012,1487,5.556,1488,5.556,1489,5.896,1490,4.012,1491,4.668,1492,4.012,1493,5.068,1494,4.012,1495,6.463,1496,7.002,1497,4.668,1498,4.668,1499,4.668,1500,4.668]],["title/components/DropdownComponent.html",[267,0.436,311,1.117]],["body/components/DropdownComponent.html",[0,0.009,3,0.252,4,0.275,5,0.168,8,0.252,9,0.781,11,1.565,13,0.916,20,1.214,23,0.91,25,1.338,26,0.019,27,0.723,28,0.578,29,0.991,30,1.584,33,1.724,34,1.628,43,1.331,44,1.331,45,1.492,50,1.872,52,1.26,53,1.201,57,1.122,64,1.293,65,1.517,71,0.909,79,0.283,81,0.571,82,1.144,84,0.229,87,1.422,99,0.009,100,0.012,101,0.009,187,2.821,201,1.583,214,1.35,230,1.201,237,1.935,262,3.198,267,0.664,311,1.976,338,1.119,347,1.622,349,1.811,369,3.881,389,1.324,491,1.26,494,2.226,500,1.26,598,1.174,797,3.706,813,1.324,814,1.201,821,1.201,822,1.392,823,1.324,824,1.392,825,1.392,845,1.784,846,1.201,847,2.032,848,1.324,849,1.565,851,1.565,853,1.918,891,2.003,892,0.991,893,2.455,894,1.465,895,1.091,896,1.465,897,1.465,898,1.465,899,1.144,900,1.465,901,1.201,902,1.465,903,1.465,904,1.144,905,1.465,906,1.201,907,2.003,908,1.201,909,1.201,910,1.465,911,1.201,912,1.465,913,1.091,914,1.465,915,1.144,916,1.465,917,1.201,918,1.465,919,1.144,920,1.465,921,1.201,922,1.144,923,1.144,924,1.465,925,1.144,926,1.465,927,1.144,928,1.392,929,1.465,936,2.283,940,4.025,941,3.706,963,1.811,964,1.904,965,3.02,1112,3.531,1114,4.327,1115,3.531,1306,4.956,1307,4.956,1310,4.423,1318,4.349,1319,4.349,1320,4.349,1394,3.179,1429,3.179,1445,3.179,1454,3.179,1501,3.179,1502,5.766,1503,5.059,1504,5.766,1505,5.766,1506,5.766,1507,4.025,1508,5.059,1509,3.699,1510,3.699,1511,3.699,1512,3.699,1513,3.699,1514,3.699,1515,3.699,1516,3.699,1517,3.699,1518,3.699,1519,5.059,1520,3.699,1521,3.699,1522,3.699,1523,3.699]],["title/interfaces/FileUploaderMsg.html",[592,0.651,1524,2.905]],["body/interfaces/FileUploaderMsg.html",[0,0.003,3,0.215,4,0.106,5,0.226,8,0.283,9,0.643,11,0.749,12,3.577,20,0.3,22,2.419,26,0.019,27,0.449,28,0.3,29,0.245,30,1.063,34,1.635,36,1.187,40,2.201,45,1.497,50,1.717,58,1.225,59,1.644,60,1.225,64,0.364,65,1,71,0.689,79,0.36,80,0.702,81,0.22,82,0.441,83,0.795,84,0.15,87,1.625,89,1.066,94,1.742,99,0.006,100,0.006,101,0.003,104,0.595,108,1.649,121,1.555,132,0.714,136,0.627,138,1.192,139,0.851,145,1.689,147,2.254,150,0.536,165,1.315,168,0.795,169,0.627,170,3.577,171,0.995,173,1.636,184,0.916,187,0.795,188,2.08,189,1.225,191,0.958,192,1.225,201,0.509,207,1.649,233,1.093,234,1.225,237,0.746,260,1.225,263,0.995,265,0.795,267,0.363,268,1.887,276,1.093,279,1.225,285,1.315,291,0.627,293,0.795,294,2.08,296,0.746,299,2.419,302,3.366,315,0.851,316,1.009,317,0.851,327,0.746,341,0.795,346,0.995,347,1.271,348,0.746,349,1.49,385,0.746,391,1.758,402,0.746,429,2.689,435,0.749,441,1.009,445,0.663,447,1.466,449,0.746,473,1.192,481,1.894,493,0.702,502,1.689,505,0.995,519,1.093,525,1.225,528,2.909,530,3.781,531,2.027,535,1.349,538,2.122,542,1.334,545,1.349,555,1.831,558,1.192,560,0.851,565,0.851,569,2.522,572,0.916,577,0.663,578,0.916,586,1.555,589,2.389,592,0.245,593,1.349,597,0.746,598,0.331,604,1.166,605,0.916,611,0.564,619,2.865,629,0.463,634,0.663,649,3.1,657,1.856,658,1.856,659,2.389,674,2.367,702,1.555,703,1.882,704,1.689,706,0.995,707,0.916,713,0.995,730,0.851,789,0.958,820,0.746,822,0.536,824,0.536,845,0.749,846,1.024,847,0.382,849,0.441,851,0.441,853,0.441,875,1.225,883,2.522,886,1.093,904,0.441,934,1.129,935,1.49,936,0.958,937,3.029,938,1.882,939,1.55,948,0.746,949,0.702,957,0.595,958,0.663,961,0.958,962,0.595,963,0.51,964,0.536,969,0.627,974,1.266,976,0.851,994,0.995,997,1.093,1001,0.627,1037,0.851,1067,0.995,1068,0.916,1081,0.995,1082,2.027,1088,1.555,1091,1.856,1093,0.995,1094,0.916,1098,2.201,1102,0.995,1128,0.851,1134,0.916,1135,1.689,1152,1.555,1158,1.856,1168,2.201,1172,1.689,1223,0.995,1224,0.746,1232,0.595,1247,2.905,1248,2.228,1249,2.389,1257,1.555,1303,0.851,1331,0.916,1360,0.995,1369,2.08,1397,2.547,1425,1.093,1436,0.627,1456,2.419,1465,0.916,1466,0.916,1524,2.419,1525,1.225,1526,1.093,1527,2.42,1528,1.425,1529,2.42,1530,1.425,1531,1.225,1532,3.153,1533,2.85,1534,2.201,1535,1.425,1536,3.153,1537,2.027,1538,2.42,1539,2.42,1540,1.425,1541,2.42,1542,1.425,1543,2.42,1544,1.425,1545,2.42,1546,1.425,1547,1.425,1548,1.425,1549,1.425,1550,1.425,1551,1.425,1552,0.916,1553,1.425,1554,2.42,1555,1.425,1556,1.425,1557,2.71,1558,1.425,1559,3.577,1560,2.419,1561,1.425,1562,2.42,1563,2.08,1564,2.42,1565,1.425,1566,2.42,1567,1.425,1568,1.425,1569,0.995,1570,1.093,1571,1.425,1572,1.425,1573,1.425,1574,1.425,1575,1.425,1576,3.153,1577,1.425,1578,1.425,1579,1.425,1580,1.425,1581,1.425,1582,1.425,1583,1.425,1584,1.425,1585,1.425,1586,1.425,1587,1.425,1588,1.425,1589,3.194,1590,1.425,1591,1.425,1592,1.425,1593,1.425,1594,1.225,1595,3.153,1596,1.425,1597,1.425,1598,5.906,1599,1.425,1600,1.425,1601,1.425,1602,1.425,1603,1.425,1604,1.425,1605,1.225,1606,1.856,1607,1.425,1608,1.425,1609,3.153,1610,1.425,1611,1.425,1612,1.225,1613,1.425,1614,1.425,1615,1.425,1616,1.425,1617,2.42,1618,1.425,1619,1.425,1620,1.425,1621,1.425,1622,1.425,1623,2.42,1624,1.425,1625,1.425,1626,3.153,1627,3.153,1628,1.425,1629,2.42,1630,1.425,1631,1.425,1632,1.425,1633,1.425,1634,1.425,1635,1.425,1636,1.425,1637,1.425,1638,3.153,1639,2.42,1640,2.42,1641,1.425,1642,3.153,1643,1.425,1644,1.425,1645,1.225,1646,2.08,1647,2.42,1648,2.42,1649,1.425,1650,1.425,1651,1.425,1652,2.42,1653,1.425,1654,1.425,1655,1.425,1656,2.419,1657,1.425,1658,0.995,1659,2.42,1660,1.425,1661,2.71,1662,0.995,1663,3.577,1664,2.71,1665,1.425,1666,1.225,1667,1.425,1668,1.093,1669,1.425,1670,3.716,1671,1.093,1672,2.42,1673,2.42,1674,1.425,1675,1.425,1676,3.153,1677,3.716,1678,1.425,1679,1.425,1680,1.225,1681,1.425,1682,1.425,1683,1.425,1684,1.093,1685,1.425,1686,1.425,1687,2.42,1688,1.425,1689,1.425,1690,1.425,1691,1.425,1692,2.42,1693,1.425,1694,1.425,1695,1.425,1696,1.425,1697,1.425,1698,3.153,1699,2.42,1700,1.225,1701,1.225,1702,4.823,1703,1.425,1704,1.425,1705,1.425,1706,1.425,1707,0.995,1708,1.425,1709,1.425,1710,1.093,1711,1.425,1712,1.856,1713,1.425,1714,1.425,1715,1.425,1716,2.71,1717,1.425,1718,1.425,1719,1.425,1720,1.425,1721,1.093,1722,1.425,1723,1.425,1724,1.425,1725,1.425,1726,1.425,1727,1.425,1728,1.225,1729,1.425,1730,2.42,1731,3.153,1732,1.425,1733,1.425,1734,1.425,1735,1.425,1736,1.425,1737,1.425,1738,1.425,1739,1.425,1740,3.153,1741,1.425,1742,1.425,1743,1.425,1744,1.425,1745,1.425,1746,1.425,1747,1.425,1748,1.425,1749,1.425,1750,1.425,1751,1.689,1752,2.42,1753,2.42,1754,1.425,1755,1.425,1756,6.12,1757,4.524,1758,2.42,1759,3.153,1760,2.42,1761,4.162,1762,1.425,1763,1.425,1764,1.425,1765,1.425,1766,2.42,1767,3.153,1768,1.425,1769,1.425,1770,1.425,1771,3.716,1772,4.162,1773,1.425,1774,2.08,1775,4.823,1776,1.093,1777,1.093,1778,1.689,1779,1.425,1780,3.716,1781,1.425,1782,1.425,1783,4.162,1784,1.425,1785,1.425,1786,1.425,1787,1.425,1788,1.425,1789,1.425,1790,1.425,1791,1.425,1792,2.42,1793,1.425,1794,1.425,1795,1.425,1796,2.42,1797,2.42,1798,3.153,1799,1.425,1800,2.42,1801,1.425,1802,1.425,1803,2.42,1804,1.225,1805,1.425,1806,1.425,1807,1.425,1808,1.425,1809,1.425,1810,1.425,1811,1.425,1812,1.425,1813,3.716,1814,1.425,1815,2.42,1816,1.425,1817,1.225,1818,1.225,1819,1.425,1820,2.42,1821,1.425,1822,1.425,1823,3.716,1824,1.425,1825,1.425,1826,3.153,1827,5.29,1828,1.425,1829,1.425,1830,2.42,1831,2.42,1832,1.425,1833,1.425,1834,3.153,1835,1.425,1836,4.162,1837,3.153,1838,3.153,1839,4.162,1840,1.425,1841,2.42,1842,2.08,1843,1.425,1844,1.425,1845,1.225,1846,1.425,1847,1.425,1848,0.995,1849,1.425,1850,1.425,1851,1.425,1852,2.42,1853,3.716,1854,3.716,1855,1.425,1856,4.524,1857,1.425,1858,1.425,1859,1.225,1860,1.225,1861,1.425,1862,1.425,1863,2.42,1864,1.425,1865,2.42,1866,1.425,1867,1.425,1868,1.425,1869,2.42,1870,2.42,1871,1.425,1872,1.425,1873,1.425,1874,1.425,1875,1.425,1876,1.425,1877,1.425,1878,1.425,1879,1.425,1880,3.716,1881,1.425,1882,1.093,1883,1.425,1884,3.716,1885,2.42,1886,3.153,1887,3.716,1888,1.425,1889,1.425,1890,1.425,1891,1.425,1892,1.425,1893,1.425,1894,1.425,1895,1.425,1896,1.425,1897,1.425,1898,1.425,1899,2.42,1900,3.153,1901,2.42,1902,1.425,1903,2.42,1904,1.425,1905,1.425,1906,1.425,1907,1.425,1908,1.425,1909,1.425,1910,3.153,1911,1.225,1912,1.425,1913,1.425,1914,1.425,1915,1.425,1916,1.093,1917,3.716,1918,1.425,1919,1.425,1920,2.08,1921,1.425,1922,1.425,1923,1.425,1924,1.425,1925,1.425,1926,1.425,1927,1.425,1928,1.425,1929,1.425,1930,1.425,1931,1.425,1932,1.425,1933,1.425,1934,1.425,1935,1.425,1936,1.425,1937,1.425,1938,1.425,1939,2.42,1940,1.425,1941,1.425,1942,1.425,1943,1.425,1944,2.42,1945,2.42,1946,3.716,1947,4.162,1948,1.225,1949,1.225,1950,1.425,1951,1.425,1952,1.425,1953,1.225,1954,2.42,1955,1.425,1956,1.425,1957,1.425,1958,1.425,1959,1.425,1960,1.425,1961,1.425,1962,1.425,1963,1.425,1964,1.425,1965,3.153,1966,2.42,1967,1.425,1968,2.42,1969,1.425,1970,1.425,1971,1.425,1972,2.42,1973,1.425,1974,1.425,1975,1.425,1976,3.716,1977,1.425,1978,1.425,1979,1.425,1980,2.42,1981,1.425,1982,1.425,1983,1.425,1984,1.425,1985,1.425,1986,1.425,1987,1.425,1988,1.425,1989,1.093,1990,1.425,1991,1.425,1992,1.425,1993,1.425,1994,2.42,1995,1.425,1996,1.425,1997,1.425,1998,1.425,1999,1.425,2000,1.425,2001,1.425,2002,1.425,2003,1.425,2004,1.425,2005,1.425,2006,2.42,2007,2.42,2008,2.42,2009,1.425,2010,1.425,2011,2.42,2012,1.425,2013,1.425,2014,1.425,2015,1.425,2016,1.425,2017,1.425,2018,1.425,2019,1.425,2020,1.225,2021,1.425,2022,1.425,2023,1.425,2024,1.425,2025,1.425,2026,1.425,2027,1.425,2028,1.425,2029,1.425,2030,1.425,2031,1.425,2032,1.425,2033,1.425,2034,1.425,2035,2.42,2036,2.42,2037,1.425,2038,1.425,2039,1.425,2040,1.425,2041,1.425,2042,1.425,2043,1.425,2044,1.425,2045,1.425,2046,1.425,2047,1.425,2048,1.425,2049,1.425]],["title/components/FormActionBarComponent.html",[267,0.436,906,1.23]],["body/components/FormActionBarComponent.html",[0,0.008,3,0.235,4,0.256,5,0.16,8,0.328,10,1.603,11,2.187,13,0.872,14,4.261,16,3.363,20,1.17,23,0.842,25,0.8,26,0.019,27,0.649,28,0.511,29,0.593,30,1.72,33,1.642,36,2.091,43,1.206,44,1.146,45,1.638,52,2.6,53,2.055,57,0.872,64,1.42,65,0.762,71,0.627,79,0.311,81,0.532,82,1.066,84,0.214,87,1.691,89,0.532,94,1.638,99,0.008,100,0.012,101,0.008,201,1.57,205,0.924,230,1.564,239,1.698,267,0.639,292,2.406,303,1.922,311,1.016,318,2.445,338,1.065,347,1.469,348,1.803,349,1.725,389,1.234,491,1.175,500,1.175,505,2.406,538,2.264,598,1.118,604,0.657,619,1.803,631,2.317,689,1.803,787,3.118,789,1.365,813,1.234,814,1.119,821,1.119,822,1.297,823,1.234,824,1.297,825,1.297,834,3.097,845,1.719,846,1.119,847,2.018,848,1.234,849,1.491,851,1.491,853,1.861,858,1.603,859,3.571,860,3.571,862,2.876,863,2.057,865,2.216,868,2.906,869,3.097,878,2.216,891,1.908,892,0.924,893,2.382,894,1.365,895,1.016,896,1.365,897,1.365,898,1.365,899,1.066,900,1.365,901,1.119,902,1.365,903,1.365,904,1.066,905,1.365,906,1.953,907,1.908,908,1.119,909,1.119,910,1.365,911,1.119,912,1.365,913,1.016,914,1.365,915,1.066,916,1.365,917,1.119,918,1.365,919,1.066,920,1.365,921,1.119,922,1.066,923,1.066,924,1.365,925,1.066,926,1.365,927,1.066,928,1.297,929,1.365,934,1.725,935,2.153,936,2.2,939,2.317,962,2.01,963,1.725,964,1.813,969,1.517,1131,2.241,1169,2.057,1232,2.01,1248,2.373,1252,1.922,1397,2.241,1436,2.12,1455,2.644,1457,2.644,1463,1.698,1479,2.406,1776,2.644,2050,5.353,2051,4.87,2052,2.406,2053,4.261,2054,3.696,2055,4.818,2056,4.775,2057,4.775,2058,5.441,2059,4.775,2060,4.818,2061,3.447,2062,3.447,2063,3.447,2064,3.447,2065,2.963,2066,4.818,2067,2.963,2068,3.447,2069,3.447,2070,3.447,2071,3.447,2072,2.644,2073,4.142,2074,4.142,2075,2.644,2076,2.644,2077,2.406,2078,2.963,2079,4.775,2080,2.963,2081,2.963,2082,2.963,2083,2.406,2084,3.696,2085,3.877,2086,2.644,2087,2.963,2088,2.963,2089,2.644,2090,2.963,2091,2.963,2092,5.17,2093,2.963,2094,4.142,2095,3.363,2096,2.963,2097,2.216,2098,2.963,2099,4.142]],["title/components/FormSubmitBarComponent.html",[267,0.436,908,1.23]],["body/components/FormSubmitBarComponent.html",[0,0.008,2,1.717,3,0.217,4,0.237,5,0.152,8,0.31,10,1.484,11,2.262,13,0.826,14,4.085,16,3.184,20,1.121,23,0.825,26,0.019,27,0.574,28,0.543,30,1.721,33,1.555,36,2.004,43,1.219,44,1.172,45,1.714,52,1.555,53,1.996,57,0.578,64,1.682,65,0.705,71,0.594,79,0.298,81,0.493,82,0.987,84,0.198,87,1.634,94,1.57,99,0.008,100,0.011,101,0.008,106,0.897,136,2.007,162,2.122,187,2.544,201,1.555,205,0.855,230,2.46,239,1.571,267,0.708,292,2.227,293,2.544,303,1.779,311,0.941,316,1.903,317,2.723,318,2.343,338,1.009,347,1.484,348,1.669,349,1.633,387,2.933,389,1.142,404,1.555,491,1.087,500,1.087,505,2.227,538,2.187,598,1.059,604,0.608,631,2.221,689,1.669,787,3.028,789,1.263,813,1.142,814,1.036,821,1.036,822,1.201,823,1.142,824,1.201,825,1.201,834,2.969,838,2.933,839,4.995,845,1.647,846,1.036,847,2.001,848,1.142,849,1.411,851,1.411,853,1.798,858,1.484,859,3.423,860,3.423,862,2.723,863,1.904,865,2.051,866,2.387,868,2.786,869,2.969,878,2.051,891,1.806,892,0.855,893,2.301,894,1.263,895,0.941,896,1.263,897,1.263,898,1.263,899,0.987,900,1.263,901,1.036,902,1.263,903,1.263,904,0.987,905,1.263,906,1.036,907,1.806,908,1.886,909,1.036,910,1.263,911,1.036,912,1.263,913,0.941,914,1.263,915,0.987,916,1.263,917,1.036,918,1.263,919,0.987,920,1.263,921,1.036,922,0.987,923,0.987,924,1.263,925,0.987,926,1.263,927,0.987,928,1.201,929,1.263,934,1.633,935,2.08,936,2.109,939,2.221,962,1.903,963,1.633,964,1.717,969,1.404,1011,2.933,1083,3.184,1131,2.122,1169,1.904,1232,1.903,1248,2.862,1252,1.779,1301,2.723,1397,2.122,1436,2.007,1455,2.447,1457,2.447,1463,1.571,1479,2.227,1776,2.447,2050,5.257,2051,4.784,2052,2.227,2053,4.085,2054,3.499,2056,4.577,2057,4.577,2058,5.285,2059,4.577,2065,2.742,2072,2.447,2073,3.921,2074,3.921,2075,2.447,2076,2.447,2077,2.227,2078,2.742,2079,4.577,2080,2.742,2081,2.742,2082,2.742,2083,2.227,2084,3.499,2085,3.717,2086,2.447,2087,2.742,2088,2.742,2089,2.447,2090,2.742,2091,2.742,2092,4.995,2093,2.742,2094,3.921,2095,3.184,2096,2.742,2097,2.051,2098,2.742,2099,3.921,2100,5.811,2101,4.562,2102,4.562,2103,4.562,2104,4.562,2105,4.562,2106,5.325,2107,4.562,2108,3.19,2109,3.19,2110,3.921,2111,3.184,2112,3.499,2113,4.056,2114,5.811,2115,4.562,2116,3.921,2117,4.562,2118,3.921,2119,4.562,2120,3.19,2121,3.19,2122,3.19]],["title/interfaces/GeoAddressResult.html",[592,0.651,951,2.112]],["body/interfaces/GeoAddressResult.html",[0,0.01,3,0.284,4,0.31,5,0.139,8,0.284,9,0.847,15,2.183,17,2.288,26,0.019,27,0.45,28,0.546,43,1.045,45,1.618,71,0.998,79,0.378,81,0.645,84,0.34,85,2.491,87,1.173,89,1.005,99,0.01,100,0.013,101,0.01,102,2.87,104,2.821,107,2.056,108,2.87,109,2.491,117,3.059,119,3.939,126,3.829,138,2.702,139,2.491,140,3.526,144,2.491,147,2.218,164,2.183,165,1.741,168,2.327,169,1.836,173,1.57,194,2.913,214,1.045,293,2.327,310,2.288,313,4.223,314,3.945,315,2.491,317,2.491,336,1.571,383,2.87,388,5.666,390,5.623,402,2.183,404,1.422,420,2.683,451,2.288,473,3.019,481,2.194,514,2.064,592,0.717,604,1.045,611,1.653,624,2.913,626,2.913,627,2.913,629,1.355,642,2.913,661,2.913,676,2.491,797,2.683,950,2.327,951,3.417,959,1.653,987,2.913,1040,3.829,1075,2.913,1078,3.526,1224,2.183,1232,1.741,1249,2.683,1379,2.913,1537,2.683,2123,3.201,2124,5.812,2125,3.587,2126,3.587,2127,5.268,2128,3.587,2129,3.587,2130,3.201,2131,3.201,2132,3.587,2133,3.587,2134,3.587,2135,3.587,2136,3.587,2137,3.587,2138,3.587,2139,3.587,2140,3.587,2141,3.587,2142,3.587,2143,3.587,2144,3.587,2145,3.587,2146,3.587,2147,3.587,2148,4.716,2149,3.587,2150,3.587,2151,3.587,2152,3.587,2153,3.587,2154,3.587,2155,3.587,2156,3.587,2157,3.201,2158,3.587,2159,4.716,2160,3.587,2161,3.587,2162,3.587,2163,3.587,2164,3.587,2165,3.587]],["title/injectables/GeocoderService.html",[451,1.58,950,2.112]],["body/injectables/GeocoderService.html",[0,0.008,3,0.222,4,0.243,5,0.109,8,0.222,9,0.717,13,0.977,15,3.246,17,3.089,20,0.688,23,0.894,25,1.641,26,0.019,27,0.744,28,0.589,29,1.165,30,0.835,43,1.291,44,1.228,45,1.591,57,1.201,71,0.95,78,3.073,79,0.347,81,0.505,84,0.287,85,1.951,87,0.919,89,0.907,99,0.008,100,0.011,101,0.008,102,3.606,104,2.588,106,1.305,107,2.658,108,2.823,109,3.704,110,3.56,111,3.776,112,3.221,113,3.56,116,2.507,117,3.275,119,4.144,121,2.983,122,2.281,123,2.507,124,2.507,125,3.56,126,4.1,128,4.139,129,2.507,130,2.587,131,3.239,132,0.964,133,2.101,134,2.507,135,2.281,136,1.438,137,1.822,138,3.395,139,3.221,140,4.144,142,2.507,143,2.507,144,3.221,145,2.281,146,1.951,147,2.349,148,2.507,149,2.281,150,1.23,151,2.507,152,2.507,153,2.507,154,3.239,156,2.507,164,1.71,165,1.363,168,1.822,169,1.438,173,1.44,194,2.281,214,1.228,293,1.822,310,1.363,313,3.221,314,3.009,315,1.951,317,2.77,326,3.239,336,1.746,383,2.823,388,5.086,390,4.945,402,2.428,404,1.582,420,2.101,451,1.936,453,1.951,473,3.056,481,2.468,514,2.031,592,0.562,604,1.028,624,2.281,626,2.281,627,2.281,629,1.506,642,2.281,661,2.281,676,1.951,724,2.998,771,2.809,772,2.809,773,2.809,774,2.809,776,2.809,777,2.809,797,2.983,950,2.587,951,3.009,959,1.294,987,3.767,1040,3.767,1075,2.281,1078,3.469,1224,1.71,1232,1.363,1249,2.101,1379,3.239,1537,2.101,2123,2.507,2124,3.989,2125,4.639,2126,3.989,2127,5.699,2128,3.989,2129,4.639,2130,3.56,2131,3.56,2132,2.809,2133,3.989,2134,2.809,2135,2.809,2136,2.809,2137,2.809,2138,2.809,2139,2.809,2140,2.809,2141,2.809,2142,2.809,2143,2.809,2144,2.809,2145,2.809,2146,2.809,2147,3.989,2148,4.639,2149,3.989,2150,3.989,2151,3.989,2152,2.809,2153,2.809,2154,2.809,2155,2.809,2156,2.809,2157,2.507,2158,2.809,2159,3.989,2160,2.809,2161,2.809,2162,2.809,2163,2.809,2164,2.809,2165,2.809,2166,4.641,2167,4.641,2168,3.268,2169,3.268,2170,3.268,2171,3.268,2172,3.268,2173,3.268,2174,3.268]],["title/classes/MaskModel.html",[0,0.009,2175,2.644]],["body/classes/MaskModel.html",[0,0.011,2,1.686,3,0.305,4,0.333,5,0.149,8,0.305,9,0.887,10,2.949,13,1.04,20,1.335,23,0.909,25,1.333,26,0.019,27,0.62,28,0.594,29,0.988,30,1.709,33,1.958,43,1.208,44,1.431,45,1.694,50,2.058,57,1.04,65,0.991,71,0.982,79,0.322,81,0.692,84,0.414,87,1.615,89,0.692,99,0.011,100,0.014,101,0.011,173,1.472,214,1.388,296,2.344,327,2.344,328,1.686,338,0.991,347,1.552,435,2.139,442,2.83,444,2.344,445,2.084,446,1.869,447,2.084,448,2.344,542,1.321,604,0.854,629,1.865,703,2.674,724,2.084,726,3.203,866,2.344,934,2.056,935,2.394,1001,1.971,1029,4.01,1087,3.127,1131,2.671,1170,3.693,1195,2.498,1447,3.851,1507,4.426,1804,3.851,1920,3.851,2175,4.01,2176,3.851,2177,4.076,2178,5.45,2179,4.938,2180,5.45,2181,5.744,2182,4.48,2183,3.851,2184,4.48,2185,4.938,2186,4.48,2187,4.938,2188,4.48,2189,4.48,2190,4.48,2191,4.48,2192,3.437,2193,4.48,2194,4.48,2195,4.48,2196,4.48,2197,4.48,2198,4.48]],["title/components/PageFrameworkComponent.html",[267,0.436,909,1.23]],["body/components/PageFrameworkComponent.html",[0,0.01,3,0.36,4,0.293,5,0.176,8,0.269,11,1.635,13,0.957,23,0.648,26,0.019,27,0.643,28,0.318,33,1.801,43,1.265,44,0.752,52,1.345,53,1.281,57,0.714,64,1.884,65,0.872,77,2.623,79,0.296,81,0.609,84,0.327,94,1.163,99,0.01,100,0.013,101,0.01,106,1.109,162,2.961,201,1.598,205,1.058,208,2.326,230,1.281,267,0.686,283,3.8,303,2.2,311,1.163,338,1.408,347,1.227,349,1.892,389,1.412,491,1.345,500,1.345,538,1.989,598,1.227,631,1.646,688,4.054,706,3.689,715,4.054,789,1.562,803,2.536,813,1.412,814,1.281,821,1.281,822,2.243,823,1.412,824,1.485,825,1.485,845,1.844,846,1.281,847,2.045,848,1.412,849,1.635,851,1.635,853,1.969,858,1.835,859,2.536,860,2.536,868,2.765,884,2.754,888,2.2,889,2.355,891,2.093,892,1.058,893,2.521,894,1.562,895,1.163,896,1.562,897,1.562,898,1.562,899,1.221,900,1.562,901,1.281,902,1.562,903,1.562,904,1.221,905,1.562,906,1.281,907,2.093,908,1.281,909,2.067,910,1.562,911,1.281,912,1.562,913,1.163,914,1.562,915,1.221,916,1.562,917,1.281,918,1.562,919,1.221,920,1.562,921,1.281,922,1.221,923,1.221,924,1.562,925,1.221,926,1.562,927,1.221,928,1.485,929,1.562,1011,3.397,1241,3.557,1243,2.754,1244,2.754,1248,2.603,1251,3.323,1252,2.2,1267,2.754,1463,1.943,2097,2.536,2112,4.054,2113,4.633,2118,5.705,2199,4.572,2200,4.572,2201,3.391,2202,5.285,2203,5.472,2204,5.285,2205,5.285,2206,4.543,2207,4.054,2208,6.366,2209,4.543,2210,4.543,2211,4.543,2212,5.96,2213,5.285,2214,5.285,2215,4.054,2216,3.945,2217,3.945,2218,3.391,2219,3.391,2220,3.391,2221,3.391,2222,3.391,2223,5.123,2224,4.543,2225,3.391,2226,3.026,2227,4.543,2228,3.391,2229,3.391,2230,3.026,2231,3.391]],["title/components/PageSectionComponent.html",[267,0.436,911,1.23]],["body/components/PageSectionComponent.html",[0,0.01,3,0.37,4,0.306,5,0.181,8,0.281,11,1.684,13,0.986,20,1.283,23,0.747,26,0.019,27,0.657,28,0.439,33,1.855,43,0.786,44,0.786,52,1.406,53,1.339,57,0.747,64,1.869,65,0.912,77,2.681,79,0.305,81,0.637,84,0.256,94,1.216,99,0.01,100,0.013,101,0.01,201,1.606,205,1.106,230,1.339,239,2.032,267,0.701,303,2.3,311,1.216,328,1.552,338,1.204,347,1.264,349,1.949,389,1.477,491,1.406,500,1.406,538,2.049,598,1.264,631,1.721,789,1.633,803,2.652,813,1.477,814,1.339,821,1.339,822,1.552,823,1.477,824,1.552,825,1.552,834,2.3,845,1.885,846,1.339,847,2.053,848,1.477,849,1.684,851,1.684,853,2.005,858,1.918,859,2.652,860,2.652,868,2.158,884,3.8,888,2.3,889,2.462,891,2.156,892,1.106,893,2.566,894,1.633,895,1.216,896,1.633,897,1.633,898,1.633,899,1.276,900,1.633,901,1.339,902,1.633,903,1.633,904,1.276,905,1.633,906,1.339,907,2.156,908,1.339,909,1.339,910,1.633,911,2.103,912,1.633,913,1.216,914,1.633,915,1.276,916,1.633,917,1.339,918,1.633,919,1.276,920,1.633,921,1.339,922,1.276,923,1.276,924,1.633,925,1.276,926,1.633,927,1.276,928,1.552,929,1.633,994,2.879,1241,3.637,1243,2.879,1244,2.879,1251,3.397,1252,2.3,1264,2.652,1267,2.879,1463,2.681,2113,4.253,2199,4.97,2209,5.57,2210,4.679,2211,4.679,2215,4.176,2218,3.546,2219,3.546,2220,3.546,2221,3.546,2222,3.546,2223,5.238,2224,4.679,2225,3.546,2226,3.164,2227,4.679,2228,3.546,2229,3.546,2230,3.164,2231,3.546,2232,4.97,2233,3.546,2234,4.674,2235,6.093,2236,5.444,2237,5.444,2238,5.444,2239,4.125,2240,4.125,2241,4.125,2242,3.546,2243,4.125,2244,4.125]],["title/components/PasswordComponent.html",[267,0.436,913,1.117]],["body/components/PasswordComponent.html",[0,0.005,3,0.144,4,0.157,5,0.111,8,0.282,9,0.517,11,1.035,13,0.606,20,0.874,23,0.892,25,1.095,26,0.019,27,0.618,28,0.573,29,0.811,30,1.397,33,1.608,36,1.776,43,1.31,44,1.321,45,1.516,47,1.556,48,1.622,50,1.774,52,0.721,53,1.859,57,0.931,59,0.721,64,0.855,65,1.043,71,0.953,75,1.262,77,1.826,79,0.288,81,0.327,82,0.654,84,0.257,87,1.326,89,0.517,90,1.042,94,1.516,99,0.005,100,0.008,101,0.005,106,0.94,132,0.624,147,0.721,169,0.931,173,0.777,181,1.106,191,0.837,193,3.619,201,1.459,205,0.567,208,1.826,214,1.272,230,0.686,237,1.106,239,2.044,262,2.692,263,1.476,266,0.757,267,0.683,268,0.882,282,2.566,285,1.395,291,1.472,310,1.395,311,0.624,318,2.262,328,2.48,336,0.796,338,0.918,347,1.549,349,1.198,365,3.619,372,1.476,389,0.757,435,1.46,442,2.532,444,1.106,445,0.983,446,1.395,447,0.983,448,1.106,450,1.042,481,2.416,491,0.721,500,0.721,514,0.796,542,1.516,558,2.044,576,2.044,577,1.556,580,4.142,592,0.575,598,0.777,604,0.637,619,2.86,629,1.086,650,1.262,724,0.983,730,1.262,789,0.837,813,0.757,814,1.086,821,0.686,822,0.796,823,0.757,824,0.796,825,0.796,833,3.033,834,1.865,845,1.284,846,0.686,847,1.894,848,0.757,849,1.035,851,1.035,853,1.46,858,0.983,881,1.622,883,1.179,891,1.325,892,0.897,893,1.868,894,0.837,895,0.624,896,0.837,897,0.837,898,0.837,899,0.654,900,0.837,901,0.686,902,0.837,903,0.837,904,0.654,905,0.837,906,0.686,907,1.325,908,0.686,909,0.686,910,0.837,911,0.686,912,0.837,913,1.612,914,0.837,915,0.654,916,0.837,917,0.686,918,0.837,919,0.654,920,0.837,921,0.686,922,0.654,923,0.654,924,0.837,925,0.654,926,0.837,927,0.654,928,0.796,929,0.837,934,1.689,935,1.957,936,1.643,938,2.477,939,1.731,949,1.042,957,0.882,958,0.983,959,0.837,960,1.106,961,0.837,962,1.395,963,1.198,964,1.259,966,1.997,969,1.472,986,2.897,1001,0.931,1037,1.997,1128,2.816,1131,1.556,1195,1.179,1204,1.359,1205,2.897,1247,1.476,1248,2.044,1251,3.192,1252,1.179,1257,1.359,1264,1.359,1272,2.875,1274,1.818,1277,2.566,1283,2.668,1316,2.875,1333,1.818,1371,1.359,1397,0.983,1436,1.472,1463,1.042,1465,1.359,1479,2.335,1480,2.875,1569,3.293,1606,1.622,1658,3.293,1662,1.476,1671,2.566,1721,2.566,1989,2.566,2083,2.335,2085,2.335,2095,1.476,2207,1.622,2245,1.622,2246,5.381,2247,2.875,2248,2.875,2249,2.566,2250,2.875,2251,2.875,2252,2.566,2253,2.875,2254,2.875,2255,4.418,2256,3.568,2257,2.875,2258,3.568,2259,3.568,2260,3.568,2261,3.568,2262,3.568,2263,4.921,2264,3.568,2265,3.568,2266,3.568,2267,3.345,2268,3.568,2269,3.568,2270,3.568,2271,3.568,2272,3.568,2273,3.568,2274,3.568,2275,3.345,2276,3.588,2277,2.115,2278,2.115,2279,2.115,2280,2.115,2281,2.566,2282,2.115,2283,2.115,2284,2.875,2285,2.875,2286,2.115,2287,2.115,2288,2.566,2289,2.115,2290,2.115,2291,2.115,2292,2.115,2293,2.115,2294,2.115,2295,2.115,2296,2.115,2297,2.875,2298,2.875,2299,2.875,2300,2.875,2301,2.875,2302,2.115,2303,2.115,2304,2.875,2305,2.115,2306,2.115,2307,2.115,2308,2.875,2309,4.056,2310,2.875,2311,4.418,2312,2.115,2313,2.115,2314,2.115,2315,2.115,2316,2.115,2317,2.115,2318,2.115,2319,2.875,2320,3.184,2321,1.818,2322,1.359,2323,1.818,2324,1.818,2325,1.818,2326,1.818,2327,1.818,2328,3.568,2329,3.568,2330,2.875,2331,4.056,2332,1.818,2333,1.818,2334,1.818,2335,3.568,2336,1.818,2337,1.818,2338,1.818,2339,1.818,2340,1.818,2341,1.818,2342,2.875,2343,1.818,2344,2.875,2345,1.818,2346,2.875,2347,1.818,2348,1.818,2349,2.875,2350,2.875,2351,1.818,2352,1.818,2353,1.818,2354,1.818,2355,1.818,2356,1.818,2357,1.818,2358,2.566,2359,1.818,2360,1.622,2361,1.818,2362,1.818,2363,5.466,2364,4.718,2365,3.345,2366,2.115,2367,3.345,2368,3.345,2369,4.718,2370,3.345,2371,3.345,2372,3.345,2373,3.345,2374,3.345,2375,2.115,2376,2.115,2377,2.115,2378,2.115,2379,3.345,2380,3.345,2381,2.875,2382,2.115,2383,1.818,2384,2.875,2385,2.115,2386,1.818,2387,2.115,2388,2.115,2389,2.115,2390,1.818,2391,1.622,2392,3.345,2393,3.345,2394,2.115,2395,2.115]],["title/interfaces/PasswordErrorMsg.html",[592,0.651,2276,2.644]],["body/interfaces/PasswordErrorMsg.html",[0,0.008,3,0.223,4,0.244,5,0.109,8,0.223,9,0.718,20,0.69,26,0.019,28,0.436,29,1.109,30,1.382,33,1.117,36,2.035,43,1.03,44,0.886,45,1.594,47,2.163,48,2.515,50,2.271,53,1.064,59,1.117,71,0.975,79,0.329,81,0.506,82,1.014,84,0.335,87,1.308,89,0.718,90,1.615,94,1.372,99,0.008,100,0.011,101,0.008,106,0.922,132,0.967,147,1.585,169,1.443,173,1.08,181,1.715,191,1.298,201,0.69,205,0.879,208,2.379,214,1.121,237,1.715,262,1.615,266,1.174,267,0.743,268,1.368,282,2.515,285,1.368,291,1.443,310,1.368,328,1.751,336,1.234,347,1.659,372,2.289,435,1.439,442,1.615,446,1.368,450,1.615,481,2.224,514,1.234,542,1.372,558,2.291,576,2.898,577,1.525,580,4.131,592,0.929,598,0.761,604,0.886,611,1.298,619,3.078,629,1.064,650,1.957,730,1.957,845,1.439,847,0.879,849,1.014,851,1.014,853,1.014,892,0.879,913,1.372,934,2.106,935,2.106,936,1.842,938,2.777,939,1.94,949,1.615,957,1.368,958,1.525,959,1.298,960,1.715,961,1.298,962,1.368,963,1.174,964,1.234,969,1.443,986,2.289,1001,1.443,1037,1.957,1128,3.227,1204,2.108,1205,3.774,1277,3.568,1283,2.108,1397,1.525,1465,2.108,1569,3.247,1606,2.515,1662,2.289,1671,2.515,1721,2.515,1989,2.515,2083,2.289,2245,2.515,2246,5.057,2247,2.818,2248,2.818,2249,2.515,2250,2.818,2251,2.818,2252,2.515,2253,2.818,2254,2.818,2255,3.999,2256,2.818,2257,2.818,2258,2.818,2259,2.818,2260,2.818,2261,2.818,2262,2.818,2263,2.818,2264,2.818,2265,2.818,2266,2.818,2268,2.818,2269,2.818,2270,2.818,2271,2.818,2272,2.818,2273,2.818,2274,2.818,2276,4.107,2281,2.515,2284,2.818,2285,2.818,2288,2.515,2297,2.818,2298,2.818,2299,2.818,2300,2.818,2301,2.818,2304,2.818,2308,2.818,2309,3.999,2310,2.818,2311,5.057,2319,3.999,2320,4.147,2321,2.818,2322,2.108,2323,2.818,2324,2.818,2325,2.818,2326,2.818,2327,3.999,2328,5.547,2329,5.705,2330,4.647,2331,5.93,2332,3.999,2333,2.818,2334,2.818,2335,2.818,2336,2.818,2337,2.818,2338,2.818,2339,2.818,2340,2.818,2341,2.818,2342,3.999,2343,2.818,2344,3.999,2345,2.818,2346,3.999,2347,2.818,2348,2.818,2349,3.999,2350,3.999,2351,2.818,2352,2.818,2353,2.818,2354,2.818,2355,2.818,2356,2.818,2357,2.818,2358,2.515,2359,2.818,2360,2.515,2361,2.818,2362,2.818]],["title/classes/Person.html",[0,0.009,1552,2.435]],["body/classes/Person.html",[0,0.013,2,1.239,3,0.224,4,0.245,5,0.11,8,0.224,9,0.721,13,0.845,23,0.883,25,1.083,26,0.019,27,0.764,28,0.548,29,0.802,30,1.192,43,1.186,44,1.033,57,1.282,65,1.032,71,0.961,79,0.303,84,0.204,87,0.926,89,0.961,99,0.008,100,0.011,101,0.008,104,1.946,106,0.926,114,3.579,160,2.601,162,2.17,173,1.258,191,1.847,204,2.441,214,1.407,265,3.287,285,1.946,338,0.728,376,1.965,385,2.441,386,2.999,387,2.999,391,3.287,399,2.83,404,1.122,425,2.441,429,1.836,435,1.925,438,2.298,439,2.441,440,1.946,441,2.772,442,2.298,444,1.723,445,1.531,446,1.373,447,1.531,448,1.723,514,1.239,542,1.376,604,0.627,625,2.441,629,1.515,641,3.039,665,3.255,724,1.531,789,2.334,820,2.441,833,2.999,975,2.999,1027,2.785,1082,2.999,1137,3.021,1157,3.287,1162,3.287,1195,1.836,1197,2.526,1220,3.469,1339,5.067,1341,4.957,1397,2.17,1436,1.449,1442,2.83,1537,2.117,1552,4.552,1569,2.298,1859,4.658,2112,3.579,2207,3.579,2396,2.83,2397,5.419,2398,6.223,2399,5.419,2400,5.419,2401,5.419,2402,5.895,2403,5.895,2404,5.419,2405,5.419,2406,3.293,2407,3.293,2408,4.666,2409,3.293,2410,3.293,2411,3.293,2412,3.293,2413,3.293,2414,4.666,2415,4.666,2416,5.895,2417,3.293,2418,4.666,2419,4.01,2420,3.293,2421,3.293,2422,6.223,2423,5.419,2424,3.293,2425,3.293,2426,4.666,2427,3.293,2428,3.293,2429,4.666,2430,5.895,2431,4.666,2432,3.293,2433,3.293,2434,2.785,2435,4.666,2436,4.666,2437,2.83,2438,3.293,2439,3.293,2440,3.293,2441,4.666,2442,5.895,2443,5.895,2444,5.895,2445,3.293,2446,3.293,2447,3.293,2448,3.293,2449,3.293,2450,6.223,2451,5.895,2452,6.462,2453,3.293,2454,3.293,2455,3.293,2456,4.666,2457,4.666,2458,4.666,2459,3.293,2460,4.666,2461,3.293,2462,2.83,2463,3.293,2464,3.293,2465,3.293,2466,3.293,2467,3.293,2468,3.293]],["title/components/PostalCodeComponent.html",[267,0.436,915,1.172]],["body/components/PostalCodeComponent.html",[0,0.008,3,0.232,4,0.253,5,0.159,8,0.232,9,0.738,10,2.222,11,1.478,13,0.865,20,1.162,23,0.904,25,1.109,26,0.019,27,0.68,28,0.589,29,0.821,30,1.529,33,1.628,36,2.251,43,1.305,44,1.371,45,1.004,47,1.583,50,2.121,52,1.16,53,1.105,57,0.999,64,1.221,65,1.056,71,0.95,79,0.309,81,0.526,82,1.053,84,0.211,87,1.551,90,1.677,99,0.008,100,0.012,101,0.008,132,1.004,201,1.567,205,0.913,214,1.326,230,1.105,262,3.304,266,1.219,267,0.689,268,1.42,311,1.004,328,1.281,336,1.281,338,1.22,347,1.463,349,1.71,389,2.575,435,1.053,442,2.353,444,1.781,445,1.583,446,1.993,447,1.583,448,1.781,491,1.16,500,1.16,542,1.764,598,1.109,629,1.551,634,3.038,724,3.236,726,1.898,813,1.219,814,1.105,821,1.105,822,1.281,823,1.219,824,1.281,825,1.281,845,1.707,846,1.105,847,2.015,848,1.219,849,1.478,851,1.478,853,1.851,866,2.499,891,1.892,892,0.913,893,2.369,894,1.348,895,1.004,896,1.348,897,1.348,898,1.348,899,1.053,900,1.348,901,1.105,902,1.348,903,1.348,904,1.053,905,1.348,906,1.105,907,1.892,908,1.105,909,1.105,910,1.348,911,1.105,912,1.348,913,1.004,914,1.348,915,1.851,916,1.348,917,1.105,918,1.348,919,1.053,920,1.348,921,1.105,922,1.053,923,1.053,924,1.348,925,1.053,926,1.348,927,1.053,928,1.281,929,1.348,935,1.219,939,2.302,957,1.42,958,1.583,959,1.348,960,1.781,961,1.348,962,1.993,963,1.71,964,1.798,971,3.334,1001,1.498,1029,2.376,1094,3.071,1131,2.222,1170,2.189,1195,1.898,1283,3.547,1341,3.664,1507,4.682,2175,4.975,2177,3.071,2178,4.106,2179,4.106,2180,4.106,2183,2.927,2185,2.927,2187,2.927,2192,4.589,2288,3.664,2469,5.885,2470,5.252,2471,2.927,2472,5.519,2473,4.777,2474,5.519,2475,5.519,2476,4.777,2477,3.405,2478,3.405,2479,3.405,2480,4.777,2481,4.777,2482,3.405,2483,3.405,2484,3.405,2485,3.405,2486,3.405,2487,3.405,2488,3.405,2489,3.405,2490,6.532,2491,5.983,2492,5.983,2493,4.777,2494,3.405,2495,3.405,2496,3.405,2497,3.405]],["title/interfaces/ProvinceList.html",[592,0.651,953,2.644]],["body/interfaces/ProvinceList.html",[0,0.007,3,0.189,4,0.206,5,0.092,8,0.189,9,0.636,10,1.29,26,0.019,27,0.299,28,0.397,30,1.485,34,1.812,36,1.849,43,0.785,44,1.16,45,1.215,47,1.29,51,1.936,59,1.404,63,2.127,65,1.203,71,0.966,79,0.362,80,1.366,81,0.428,82,0.858,84,0.304,87,0.78,89,1.055,90,1.366,99,0.013,100,0.01,101,0.012,104,1.157,106,1.634,107,1.366,130,2.74,132,1.215,138,2.42,165,1.157,166,2.127,168,1.546,169,1.812,173,1.141,183,2.459,191,1.631,201,0.584,204,1.451,205,0.743,214,1.234,222,2.127,266,1.474,267,0.626,268,1.157,281,1.783,296,1.451,313,4.019,314,2.74,316,1.157,319,1.783,326,1.936,327,1.451,328,1.849,332,2.875,336,1.044,341,1.546,342,2.127,346,2.875,347,1.536,383,3.388,391,1.546,404,0.945,420,3.496,425,1.451,429,1.546,435,1.274,446,1.157,473,1.366,480,1.783,481,1.947,493,1.366,494,1.22,503,1.366,514,2.437,579,1.546,592,0.845,598,0.644,604,1.036,611,1.098,629,0.9,634,1.29,641,2.393,649,1.783,674,1.451,676,1.655,689,1.451,726,1.546,740,3.43,819,1.936,820,1.451,845,1.274,847,0.743,849,0.858,851,0.858,853,0.858,856,1.655,857,1.655,895,1.215,930,3.43,931,2.127,932,2.384,933,2.384,934,1.474,935,1.759,936,1.946,937,3.468,938,2.459,939,1.718,940,2.875,941,2.648,942,2.384,943,4.224,944,2.384,945,3.54,946,2.384,947,3.159,948,1.451,949,1.366,950,3.032,951,2.296,952,2.384,953,4.056,954,4.675,955,2.384,956,2.384,957,1.157,958,1.29,959,1.631,960,1.451,961,1.098,962,1.157,963,1.474,964,1.55,965,1.655,966,1.655,967,2.384,968,2.384,969,1.22,970,2.384,971,1.936,972,2.384,973,2.384,974,1.451,975,2.648,976,1.655,977,1.655,978,2.384,979,2.384,980,2.384,981,2.384,982,2.384,983,2.384,984,2.384,985,2.384,986,1.936,987,1.936,988,2.384,989,2.384,990,2.384,991,2.384,992,2.384,993,4.675,994,3.43,995,3.769,996,3.54,997,2.127,998,2.127,999,2.384,1000,3.54,1001,1.22,1002,2.384,1003,2.384,1004,2.384,1005,2.384,1006,2.384,1007,2.384,1008,2.384,1009,2.384,1010,2.384,1011,1.783,1012,2.384,1013,5.419,1014,2.384,1015,5.687,1016,4.224,1017,5.234,1018,5.234,1019,5.419,1020,2.384,1021,2.384,1022,3.54,1023,2.384,1024,3.54,1025,2.127,1026,3.54,1027,2.459,1028,2.384,1029,1.936,1030,2.384,1031,2.384,1032,2.384,1033,4.224,1034,2.384,1035,2.384,1036,3.54,1037,1.655,1038,2.384,1039,2.384,1040,3.43,1041,2.384,1042,3.54,1043,2.384,1044,2.384,1045,3.159,1046,2.384,1047,2.384,1048,2.384,1049,2.127,1050,2.384,1051,4.224,1052,2.384,1053,2.384,1054,2.384,1055,2.384,1056,2.384,1057,2.384,1058,2.384,1059,3.54,1060,2.384,1061,3.54,1062,2.384,1063,3.54,1064,3.54,1065,2.384,1066,2.384,1067,1.936,1068,1.783,1069,2.384,1070,2.384,1071,3.54,1072,2.384,1073,2.384,1074,2.384,1075,2.875,1076,2.384,1077,2.127,1078,1.783,1079,2.384,1080,2.384,1081,1.936,1082,2.648,1083,1.936,1084,2.384,1085,2.384,1086,2.384,1087,1.936,1088,1.783,1089,2.384,1090,2.384,1091,2.127,1092,3.54,1093,1.936,1094,1.783,1095,2.384,1096,2.384,1097,2.384,1098,1.936,1099,2.384,1100,2.384,1101,2.384,1102,1.936,1103,2.384,1104,2.384,1105,2.384,1106,2.384,1107,2.384,1108,3.54,1109,2.384,1110,2.384,1111,2.127,1112,1.936,1113,2.384,1114,2.875,1115,1.936]],["title/injectables/ServerPayload.html",[451,1.58,477,2.644]],["body/injectables/ServerPayload.html",[0,0.014,3,0.303,4,0.331,5,0.148,8,0.303,9,0.883,23,0.817,26,0.019,28,0.538,42,4.16,71,1.009,79,0.373,81,0.687,84,0.354,89,1.091,99,0.011,100,0.014,101,0.011,107,3.113,112,3.773,117,3.524,138,3.479,146,2.656,164,2.328,165,1.856,173,1.033,214,1.204,451,2.636,452,2.656,453,2.656,454,5.293,455,3.413,461,4.916,462,5.433,464,4.848,465,4.916,466,5.828,468,4.916,469,6.071,470,5.734,472,3.825,473,3.286,474,3.413,475,5.433,476,3.106,477,3.992,478,4.436,479,5.433,480,2.86,481,1.593,482,5.433,483,5.433,484,4.916,485,3.825,486,4.916,487,5.433,2498,4.45,2499,4.45,2500,4.45,2501,4.45]],["title/modules/SharedCoreModule.html",[488,1.981,2502,2.261]],["body/modules/SharedCoreModule.html",[0,0.008,3,0.231,4,0.253,5,0.113,26,0.019,36,1.796,52,1.626,79,0.426,81,0.525,82,1.051,83,1.895,84,0.211,99,0.008,100,0.012,101,0.008,230,1.549,308,2.185,309,2.185,311,2.12,328,1.279,404,1.158,440,1.418,450,1.674,488,1.778,490,1.895,491,1.158,492,3.544,493,2.35,494,2.1,495,4.229,501,3.33,502,2.372,510,3.33,511,2.372,523,4.101,526,4.101,527,2.607,814,1.549,821,2.334,827,2.607,895,2.12,899,2.225,901,2.334,904,2.225,906,2.334,908,2.334,909,2.334,911,2.334,913,2.12,915,2.225,917,2.334,919,2.225,921,2.334,923,2.225,925,2.225,927,2.225,947,2.607,948,2.496,966,2.029,1297,2.922,1526,2.607,2051,3.33,2177,2.185,2200,2.607,2232,2.607,2470,2.607,2502,4.668,2503,2.922,2504,2.922,2505,2.922,2506,3.399,2507,3.399,2508,3.399,2509,3.399,2510,4.771,2511,5.513,2512,4.771,2513,3.399,2514,3.399,2515,3.399,2516,2.607,2517,3.399,2518,3.399,2519,3.399,2520,4.771,2521,3.399,2522,3.399,2523,3.399,2524,3.399,2525,3.399,2526,3.399,2527,3.399,2528,3.399,2529,3.399,2530,3.399,2531,3.399,2532,3.399,2533,4.771,2534,3.399,2535,3.399,2536,3.399,2537,3.399,2538,4.771,2539,2.922,2540,3.399,2541,3.399,2542,3.399,2543,3.399,2544,3.399,2545,3.399]],["title/interfaces/SimpleDate.html",[592,0.651,1137,2.112]],["body/interfaces/SimpleDate.html",[3,0.385,4,0.42,5,0.188,8,0.385,9,1.024,26,0.018,28,0.567,84,0.35,99,0.014,100,0.016,101,0.014,106,1.59,162,2.63,542,2.256,592,1.139,611,2.24,1137,3.695,1157,4.043,1162,4.043,1220,4.043,2546,4.862,2547,4.862,2548,4.862,2549,5.656,2550,5.656,2551,4.862,2552,5.656]],["title/components/ThumbnailComponent.html",[267,0.436,917,1.23]],["body/components/ThumbnailComponent.html",[0,0.008,3,0.236,4,0.258,5,0.161,8,0.236,9,0.748,11,1.498,13,0.877,20,0.731,23,0.877,25,1.124,26,0.019,27,0.685,28,0.555,29,0.832,30,1.237,33,1.65,37,2.232,43,0.923,44,0.923,45,1.428,52,1.9,53,1.127,57,1.093,64,1.237,65,1.334,71,0.452,79,0.338,80,1.71,81,0.536,84,0.215,94,1.871,99,0.008,100,0.012,101,0.008,173,0.806,201,1.571,214,1.063,230,1.127,267,0.642,302,2.423,311,1.024,318,1.528,328,1.822,338,1.071,347,1.294,349,1.734,365,2.663,389,1.243,481,1.996,491,1.183,493,1.71,500,1.183,501,3.38,528,2.747,530,3.157,538,1.306,542,1.428,598,1.124,604,0.661,787,1.71,813,1.243,814,1.127,821,1.127,822,1.306,823,1.243,824,1.306,825,1.306,845,1.725,846,1.127,847,2.019,848,1.243,849,1.498,851,1.498,853,1.867,858,1.614,868,1.816,869,2.7,878,2.232,883,3.364,884,4.429,888,2.7,889,2.89,890,4.162,891,1.917,892,0.93,893,2.389,894,1.375,895,1.024,896,1.375,897,1.375,898,1.375,899,1.074,900,1.375,901,1.127,902,1.375,903,1.375,904,1.074,905,1.375,906,1.127,907,1.917,908,1.127,909,1.127,910,1.375,911,1.127,912,1.375,913,1.024,914,1.375,915,1.074,916,1.375,917,1.959,918,1.375,919,1.074,920,1.375,921,1.127,922,1.074,923,1.074,924,1.375,925,1.074,926,1.375,927,1.074,928,1.306,929,1.375,934,1.734,935,2.16,948,1.816,961,1.917,969,2.131,971,4.211,1131,2.252,1232,1.448,1241,2.072,1247,4.211,1248,3.322,1251,1.936,1257,3.113,1264,2.232,1463,2.385,1482,5.455,1531,4.793,1656,2.663,1712,2.663,1728,5.798,1774,2.984,1911,2.984,2020,4.162,2075,3.714,2076,3.714,2230,2.663,2358,2.663,2384,2.984,2553,2.984,2554,5.576,2555,4.842,2556,5.576,2557,5.576,2558,7.154,2559,5.576,2560,5.576,2561,5.576,2562,5.576,2563,5.576,2564,4.842,2565,4.842,2566,3.471,2567,3.471,2568,3.471,2569,3.471,2570,3.471,2571,3.471,2572,3.471,2573,3.471,2574,4.842,2575,3.471,2576,6.034,2577,3.471,2578,3.471,2579,3.471,2580,4.842,2581,3.471,2582,3.471,2583,3.471,2584,4.842,2585,6.034,2586,3.471,2587,4.842,2588,4.842,2589,4.162,2590,3.471,2591,4.162,2592,6.346,2593,4.842,2594,4.162,2595,3.471,2596,3.471,2597,3.471,2598,3.471,2599,3.471,2600,3.471,2601,4.842,2602,3.471,2603,3.471,2604,2.984,2605,3.471,2606,3.471]],["title/components/ToggleComponent.html",[267,0.436,919,1.172]],["body/components/ToggleComponent.html",[0,0.009,3,0.251,4,0.274,5,0.168,8,0.251,9,0.78,11,1.563,13,0.915,20,1.213,23,0.821,26,0.019,27,0.621,28,0.5,30,1.291,33,1.722,43,0.703,44,0.703,52,1.258,53,1.198,57,0.668,64,1.291,65,0.816,71,0.75,77,2.855,78,1.931,79,0.322,81,0.57,84,0.229,99,0.009,100,0.012,101,0.009,132,1.089,137,2.817,191,2.281,201,1.582,214,0.963,230,1.198,244,3.173,262,3.3,267,0.663,311,1.089,318,1.624,338,1.274,340,6.349,347,1.337,349,1.809,389,1.322,435,1.916,442,2.489,444,1.931,445,1.717,446,1.54,447,1.717,448,1.931,491,1.722,500,1.258,530,1.931,538,1.389,598,1.173,604,0.703,629,1.64,724,1.717,813,1.322,814,1.198,821,1.198,822,1.389,823,1.322,824,1.389,825,1.389,834,3.735,845,1.782,846,1.198,847,2.032,848,1.322,849,1.563,851,1.563,853,1.916,858,1.717,868,3.24,869,4.066,883,3.617,888,3.617,891,2.001,892,0.989,893,2.453,894,1.462,895,1.089,896,1.462,897,1.462,898,1.462,899,1.142,900,1.462,901,1.198,902,1.462,903,1.462,904,1.142,905,1.462,906,1.198,907,2.001,908,1.198,909,1.198,910,1.462,911,1.198,912,1.462,913,1.089,914,1.462,915,1.142,916,1.462,917,1.198,918,1.462,919,1.916,920,1.462,921,1.198,922,1.142,923,1.142,924,1.462,925,1.142,926,1.462,927,1.142,928,1.389,929,1.462,934,1.809,935,2.217,949,1.818,1001,1.624,1131,2.35,1169,2.203,1195,2.058,1241,3.016,1242,3.173,1243,2.577,1244,2.577,1248,3.3,1331,4.651,1463,2.489,2097,3.982,2226,2.832,2242,3.173,2594,3.173,2607,3.173,2608,7.425,2609,5.76,2610,5.052,2611,5.76,2612,5.052,2613,3.692,2614,3.692,2615,3.692,2616,5.052,2617,5.052,2618,5.76,2619,3.692,2620,3.692,2621,5.76,2622,6.194,2623,3.692,2624,3.173,2625,3.692,2626,5.052,2627,5.76,2628,4.343,2629,3.692,2630,3.692,2631,3.173,2632,3.692,2633,3.692,2634,3.692,2635,3.692,2636,3.692,2637,5.052,2638,3.692,2639,3.692,2640,3.692,2641,3.692]],["title/components/WizardProgressBarComponent.html",[267,0.436,921,1.23]],["body/components/WizardProgressBarComponent.html",[0,0.007,3,0.187,4,0.205,5,0.136,8,0.187,9,0.633,11,1.267,13,0.742,20,0.58,21,2.367,22,4.658,23,0.836,25,0.951,26,0.019,27,0.625,28,0.49,29,0.704,33,1.396,37,2.634,41,2.112,43,0.525,44,0.525,52,0.938,53,1.881,57,1.049,64,1.047,65,1.082,68,2.56,74,2.86,76,3.143,77,1.212,78,1.44,79,0.34,80,1.356,81,0.425,83,1.535,84,0.171,89,0.756,94,1.708,99,0.007,100,0.01,101,0.007,106,0.774,132,0.812,135,1.922,147,1.396,165,2.041,168,1.535,173,1.345,201,1.524,205,0.738,214,0.932,230,0.894,239,2.018,241,2.367,265,1.535,266,0.986,267,0.563,285,1.709,303,1.535,311,0.812,318,1.212,328,2.04,338,0.906,347,0.951,348,2.143,349,1.467,389,0.986,404,1.396,407,3.522,429,2.284,438,2.018,440,1.709,480,1.77,481,2.252,491,0.938,493,2.018,500,0.938,514,1.036,538,1.036,542,1.791,555,1.212,598,0.951,659,1.77,702,2.634,703,1.644,713,1.922,727,2.112,729,2.112,787,2.41,789,1.09,792,3.753,795,2.921,813,2.314,814,2.46,821,0.894,822,1.036,823,0.986,824,1.036,825,1.036,834,1.535,835,2.367,845,1.514,846,0.894,847,1.966,848,1.467,849,1.267,850,2.367,851,1.267,853,1.677,858,1.281,862,2.446,864,1.922,865,1.77,866,3.381,867,2.112,868,3.031,869,2.728,871,2.367,872,2.367,873,2.367,880,2.367,881,2.112,883,2.728,888,2.284,889,1.644,891,1.622,892,0.738,893,2.146,894,1.09,895,0.812,896,1.09,897,1.09,898,1.09,899,0.852,900,1.09,901,0.894,902,1.09,903,1.09,904,0.852,905,1.09,906,0.894,907,1.622,908,0.894,909,0.894,910,1.09,911,0.894,912,1.09,913,0.812,914,1.09,915,0.852,916,1.09,917,0.894,918,1.09,919,0.852,920,1.09,921,1.759,922,0.852,923,0.852,924,1.09,925,0.852,926,1.09,927,0.852,928,1.036,929,1.09,937,2.921,948,2.143,959,1.09,961,1.09,969,2.549,1082,1.77,1134,3.145,1135,3.783,1167,1.644,1223,1.922,1224,1.44,1229,2.112,1241,1.644,1248,2.67,1251,2.284,1252,1.535,1267,2.86,1371,2.634,1397,2.52,1435,3.143,1436,2.153,1463,1.356,1464,2.367,1471,1.77,1537,1.77,1645,4.98,1661,3.522,1712,2.112,1777,4.658,2052,1.922,2053,3.753,2054,3.143,2067,2.367,2077,1.922,2084,2.112,2085,3.783,2095,2.86,2097,2.634,2113,1.922,2381,2.367,2391,2.112,2516,5.297,2551,3.522,2589,3.522,2604,3.522,2624,2.367,2628,2.367,2631,2.367,2642,5.936,2643,4.893,2644,4.893,2645,4.097,2646,4.893,2647,4.893,2648,4.893,2649,5.42,2650,4.097,2651,5.42,2652,5.42,2653,4.097,2654,2.753,2655,4.097,2656,2.753,2657,2.753,2658,2.753,2659,2.753,2660,4.097,2661,4.097,2662,4.097,2663,4.206,2664,3.522,2665,4.097,2666,4.097,2667,3.143,2668,2.753,2669,4.893,2670,4.097,2671,2.753,2672,4.893,2673,4.097,2674,2.753,2675,2.753,2676,2.753,2677,4.893,2678,2.753,2679,2.753,2680,2.753,2681,2.753,2682,2.753,2683,2.753,2684,2.753,2685,2.753,2686,2.753,2687,2.753,2688,2.753,2689,2.753,2690,4.893,2691,2.753,2692,2.753,2693,2.753,2694,2.753,2695,2.753,2696,2.753,2697,5.794,2698,2.753,2699,4.097,2700,2.753,2701,2.753,2702,4.097,2703,4.893,2704,2.753,2705,2.753,2706,4.097,2707,2.753,2708,2.753,2709,2.753,2710,2.753,2711,2.753,2712,2.753,2713,2.753,2714,2.753,2715,4.097,2716,2.753,2717,2.753,2718,2.753,2719,2.753,2720,2.753,2721,2.753,2722,2.753,2723,2.753,2724,4.097,2725,2.367,2726,2.753,2727,2.753,2728,2.753,2729,2.753,2730,2.753,2731,5.42,2732,4.097,2733,2.753,2734,4.206,2735,2.753,2736,2.753,2737,2.753,2738,2.753,2739,2.753,2740,2.753,2741,2.753,2742,2.367,2743,2.753,2744,2.753,2745,2.367]],["title/interfaces/WizardProgressItem.html",[592,0.651,795,2.261]],["body/interfaces/WizardProgressItem.html",[0,0.012,3,0.459,4,0.381,5,0.17,8,0.349,9,0.965,17,2.136,26,0.019,28,0.504,59,1.745,65,1.132,71,0.98,74,5.257,79,0.287,83,2.855,84,0.387,89,0.965,99,0.012,100,0.015,101,0.012,150,1.927,162,2.382,202,3.928,261,3.928,296,2.679,435,1.584,592,1.074,611,2.028,787,3.076,788,3.928,789,2.028,790,4.402,791,4.402,792,3.928,794,4.402,795,4.022,797,4.015,798,4.402,799,4.402,801,4.402,802,4.402,803,4.703,804,5.369,808,4.402,809,4.402,810,4.402,811,4.402,812,4.402,813,1.833,814,1.663,815,4.402,816,4.402,817,5.369,818,4.402,819,3.575,820,2.679]],["title/directives/YearValidateDirective.html",[892,1.015,927,1.172]],["body/directives/YearValidateDirective.html",[0,0.01,3,0.289,4,0.316,5,0.141,8,0.289,13,1.005,23,0.68,25,0.987,26,0.019,27,0.459,28,0.499,29,0.731,33,1.892,34,1.871,44,1.058,57,0.77,71,0.805,79,0.346,81,0.657,82,1.315,84,0.263,87,1.998,89,1.077,99,0.01,100,0.013,101,0.01,147,1.449,163,3.261,173,1.579,181,2.224,268,1.773,299,3.261,347,1.289,376,2.537,425,2.224,441,2.735,488,2.224,494,2.443,542,1.253,558,2.094,576,2.094,579,2.37,580,2.37,598,1.289,625,2.905,641,2.885,650,2.537,665,3.235,846,1.38,847,1.488,874,3.654,892,1.488,922,1.315,927,2.028,928,2.56,936,2.448,963,1.988,964,2.089,965,3.314,974,2.224,977,4.06,1083,2.967,1144,2.967,1145,4.743,1153,2.967,1157,2.37,1162,2.37,1173,2.967,1199,2.967,1200,2.967,1202,2.967,1203,2.967,1207,3.261,1220,3.962,1231,2.967,1232,1.773,1233,4.316,1331,3.569,1344,4.773,1390,5.029,1397,2.582,1402,4.259,1403,4.773,1487,5.315,1488,5.315,1490,3.654,1492,3.654,1493,5.315,1494,3.654,2252,3.261,2419,3.654,2462,5.635,2746,5.315,2747,3.654,2748,4.251,2749,4.251,2750,6.183,2751,4.251,2752,5.552,2753,6.183,2754,4.251,2755,4.251,2756,4.251,2757,4.251,2758,4.251]],["title/changelog.html",[2759,1.771,2760,1.771,2761,2.73]],["body/changelog.html",[0,0.008,5,0.162,11,1.506,23,0.429,26,0.012,27,0.377,42,1.951,43,0.667,50,1.136,53,1.136,64,0.894,79,0.196,84,0.347,89,0.54,99,0.008,100,0.012,101,0.008,104,2.031,132,1.032,162,1.627,171,2.443,187,3.674,196,2.443,201,1.578,203,3.008,206,3.921,207,3.875,211,2.684,214,0.928,237,1.831,263,2.443,265,1.951,266,2.359,267,0.758,269,2.684,270,2.443,291,1.54,310,1.46,311,1.032,319,3.6,320,3.008,321,2.684,329,2.684,336,1.833,338,1.077,341,1.951,369,2.684,372,2.443,389,1.743,438,3.135,439,1.831,447,2.265,449,1.831,478,3.892,488,1.831,489,2.907,503,2.399,515,4.186,519,3.735,555,1.54,604,0.667,611,1.386,628,3.6,630,2.684,631,1.46,634,2.265,655,2.443,656,2.684,795,2.089,838,2.25,895,1.785,904,1.083,913,1.436,915,1.083,919,1.506,941,3.6,957,1.46,961,1.928,974,3.536,995,2.684,1025,2.684,1027,2.089,1098,2.443,1137,2.715,1167,2.089,1232,2.031,1254,2.684,1257,2.25,1283,2.25,1294,5.205,1302,3.13,1439,4.186,1465,4.558,1466,3.13,1507,2.443,1534,2.443,1570,2.684,1589,3.008,1684,2.684,1707,3.909,1710,2.684,1751,2.443,1817,3.008,1842,3.008,1848,2.443,1860,3.008,1882,2.684,1949,4.186,2086,3.735,2089,2.684,2111,3.399,2177,2.25,2203,3.008,2234,2.684,2322,4.558,2434,2.089,2734,3.008,2742,3.008,2759,1.951,2760,1.951,2761,5.664,2762,3.499,2763,6.335,2764,3.499,2765,3.499,2766,7.002,2767,4.186,2768,3.499,2769,7.09,2770,2.684,2771,3.499,2772,3.499,2773,3.499,2774,3.499,2775,3.499,2776,3.499,2777,3.499,2778,7.165,2779,3.499,2780,3.499,2781,3.499,2782,3.499,2783,3.499,2784,3.499,2785,3.499,2786,3.499,2787,3.499,2788,3.499,2789,3.499,2790,3.499,2791,3.499,2792,3.499,2793,3.499,2794,3.499,2795,3.499,2796,3.008,2797,3.499,2798,3.499,2799,3.008,2800,3.499,2801,3.499,2802,3.499,2803,3.008,2804,3.499,2805,3.499,2806,3.499,2807,3.008,2808,4.186,2809,3.499,2810,3.499,2811,3.499,2812,4.296,2813,5.6,2814,6.055,2815,3.499,2816,4.186,2817,3.499,2818,3.499,2819,2.443,2820,6.894,2821,3.499,2822,3.6,2823,3.499,2824,3.499,2825,3.499,2826,3.499,2827,3.499,2828,3.499,2829,3.499,2830,3.499,2831,3.008,2832,3.008,2833,3.499,2834,4.87,2835,3.499,2836,3.499,2837,3.499,2838,2.684,2839,3.499,2840,3.008,2841,3.499,2842,3.499,2843,3.008,2844,2.443,2845,3.499,2846,3.499,2847,4.814,2848,5.6,2849,3.499,2850,3.499,2851,3.499,2852,3.499,2853,3.499,2854,3.499,2855,3.499,2856,3.499,2857,3.499,2858,3.499,2859,3.499,2860,3.499,2861,3.499,2862,3.499,2863,3.008,2864,3.499,2865,3.499,2866,3.499,2867,3.499,2868,2.25,2869,3.008,2870,3.008,2871,3.499,2872,3.008,2873,3.499,2874,3.499,2875,3.499,2876,3.499,2877,4.87,2878,3.499,2879,3.499,2880,3.499,2881,3.499,2882,3.499,2883,3.499,2884,4.186,2885,3.499,2886,3.499,2887,3.499,2888,3.499,2889,2.443,2890,3.499,2891,3.499,2892,3.499,2893,3.499,2894,3.499,2895,2.684,2896,3.499,2897,3.499,2898,2.684,2899,3.499,2900,3.499,2901,3.008,2902,3.499,2903,3.008,2904,3.499,2905,3.499,2906,3.499,2907,3.499,2908,3.499,2909,3.499,2910,3.499]],["title/coverage.html",[2911,4.42]],["body/coverage.html",[0,0.017,1,2.353,5,0.102,6,2.637,7,2.637,26,0.019,28,0.248,52,1.511,94,2.286,99,0.007,100,0.011,101,0.007,102,1.605,103,2.637,104,1.279,105,2.637,193,2.353,196,2.141,197,2.637,198,2.637,199,2.637,230,1.44,267,0.837,311,0.905,383,1.605,384,2.637,429,4.076,435,0.949,436,2.637,441,2.632,445,1.427,451,2.381,452,1.831,454,3.402,455,3.402,477,2.141,500,1.045,528,1.511,529,3.407,542,0.905,560,3.614,569,1.71,592,1.185,593,1.71,597,1.605,604,0.585,617,2.141,618,3.636,628,1.972,650,1.831,787,1.511,788,3.402,795,1.831,814,1.44,821,0.996,826,2.637,827,2.353,828,2.637,866,1.605,892,1.396,895,0.905,899,0.949,901,0.996,904,0.949,906,0.996,908,0.996,909,0.996,911,0.996,913,0.905,915,0.949,917,0.996,919,0.949,921,0.996,923,0.949,925,0.949,927,0.949,930,2.141,931,3.996,950,1.71,951,1.71,953,2.141,966,1.831,969,3.105,1045,5.826,1093,2.141,1094,1.972,1116,3.996,1137,1.71,1140,1.972,1174,2.141,1220,1.71,1249,3.348,1254,3.402,1268,2.637,1269,2.637,1293,3.402,1485,3.812,1486,3.812,1501,2.637,1524,2.353,1525,5.204,1526,4.644,1533,2.353,1552,1.972,1557,2.637,1560,2.353,1668,2.353,1684,2.353,1700,2.637,1707,3.096,1710,2.353,2050,3.402,2051,3.096,2052,3.636,2123,3.402,2175,2.141,2176,4.906,2192,2.353,2199,3.402,2200,2.353,2201,2.637,2206,2.637,2232,2.353,2233,2.637,2245,3.996,2276,2.141,2281,2.353,2320,2.353,2383,2.637,2396,3.812,2469,2.637,2470,2.353,2471,2.637,2516,2.353,2546,2.637,2547,2.637,2553,2.637,2607,2.637,2642,2.637,2745,5.204,2746,3.812,2747,3.812,2822,1.972,2911,2.637,2912,3.067,2913,5.209,2914,2.637,2915,3.067,2916,3.067,2917,3.067,2918,3.067,2919,3.067,2920,5.209,2921,3.067,2922,3.067,2923,5.209,2924,5.209,2925,3.067,2926,3.067,2927,7.651,2928,4.435,2929,3.067,2930,3.067,2931,3.067,2932,3.067,2933,3.067,2934,3.067,2935,3.067,2936,3.067,2937,4.435,2938,3.067,2939,3.067,2940,3.067,2941,3.067,2942,3.067,2943,3.067,2944,3.067,2945,3.067,2946,3.067,2947,3.067,2948,3.067,2949,3.067,2950,3.067,2951,4.478,2952,4.478,2953,2.637,2954,7.057,2955,2.141,2956,3.812,2957,2.637,2958,3.812,2959,6.284,2960,3.067,2961,3.067,2962,4.435,2963,3.067,2964,3.067,2965,3.067,2966,3.067,2967,3.067,2968,3.067,2969,3.067,2970,3.067,2971,3.067,2972,3.067,2973,3.067,2974,3.067,2975,5.424,2976,2.637,2977,2.637,2978,2.637,2979,2.637,2980,2.637,2981,2.637,2982,4.478,2983,4.478,2984,2.637,2985,2.637,2986,5.926,2987,6.054,2988,3.067,2989,3.067,2990,3.067,2991,5.204,2992,2.637,2993,2.637,2994,2.637,2995,2.637,2996,2.637,2997,3.067,2998,3.067,2999,3.067,3000,3.067,3001,3.067,3002,3.067,3003,4.435,3004,3.067,3005,3.067,3006,3.067]],["title/dependencies.html",[439,1.662,440,1.897]],["body/dependencies.html",[26,0.019,81,0.841,82,1.684,83,3.035,99,0.013,100,0.016,101,0.013,165,2.27,308,3.499,309,3.499,328,2.048,348,3.39,440,2.27,441,2.27,450,2.681,474,4.175,493,3.191,521,5.569,527,4.175,530,2.847,848,1.949,948,2.847,1533,4.175,1534,4.522,1559,4.679,1560,4.175,1563,4.679,2177,3.499,2539,4.679,3007,5.443,3008,7.605,3009,5.443,3010,5.443,3011,5.443,3012,5.443,3013,5.443,3014,5.443,3015,5.443,3016,5.443,3017,4.679,3018,5.443,3019,5.443,3020,5.443,3021,5.443,3022,5.443,3023,5.443,3024,5.443,3025,5.443]],["title/miscellaneous/enumerations.html",[3026,2.217,3027,3.909]],["body/miscellaneous/enumerations.html",[3,0.441,8,0.371,26,0.019,43,1.236,44,1.457,99,0.013,100,0.016,101,0.013,147,2.21,235,2.851,277,4.181,280,4.181,529,3.253,545,3.615,561,3.504,562,3.504,563,3.504,564,3.504,565,3.253,566,3.504,567,3.504,568,3.504,618,3.804,632,4.181,737,4.974,833,3.504,1293,4.181,1309,5.574,1334,5.574,1397,2.535,1436,2.398,1658,3.804,1662,3.804,1666,4.685,1668,4.181,2914,4.685,3026,3.804,3027,4.685,3028,6.485,3029,5.451,3030,5.451,3031,5.451,3032,5.451,3033,5.451,3034,5.451,3035,5.451,3036,5.451,3037,5.451,3038,5.451,3039,5.451,3040,5.451,3041,5.451,3042,5.451]],["title/miscellaneous/functions.html",[2667,3.488,3026,2.217]],["body/miscellaneous/functions.html",[5,0.215,8,0.279,25,1.753,26,0.019,27,0.82,28,0.557,29,1.299,30,1.386,50,1.332,57,1.323,71,0.706,77,1.806,79,0.23,99,0.01,100,0.013,101,0.01,131,2.864,133,3.487,136,1.806,137,2.288,150,1.544,160,3.025,181,2.147,201,0.864,205,1.1,206,2.147,207,2.147,236,3.487,239,3.312,266,1.469,277,4.96,386,2.638,391,2.288,404,1.398,439,2.838,641,1.806,691,2.449,726,2.288,825,2.772,998,3.147,1102,3.786,1301,2.449,1302,4.157,1379,3.786,1436,1.806,1664,4.663,1845,3.527,2111,2.864,2157,3.147,2391,3.147,2667,3.147,2725,6.057,2770,3.147,2819,4.242,2901,4.663,2951,3.527,2952,3.527,2953,4.663,2955,3.786,2956,3.527,2957,4.663,2958,5.558,2959,4.663,2975,3.527,2976,4.663,2977,5.224,2978,4.663,2979,4.663,2980,4.663,2981,4.663,2982,3.527,2983,5.558,2984,4.663,2985,4.663,2986,3.527,2991,3.527,2992,4.663,2993,4.663,2994,4.663,2995,4.663,2996,4.663,3026,2.864,3043,7.415,3044,6.077,3045,5.425,3046,4.103,3047,5.425,3048,4.103,3049,7.153,3050,4.103,3051,4.103,3052,4.103,3053,4.103,3054,4.103,3055,4.103,3056,4.103,3057,4.103,3058,4.103,3059,6.725,3060,4.103,3061,5.425,3062,5.425,3063,4.103,3064,5.425,3065,5.425,3066,5.425,3067,4.103,3068,4.103,3069,3.527,3070,4.103,3071,4.103,3072,5.425,3073,4.103,3074,6.466,3075,4.103,3076,4.103,3077,4.103,3078,4.103,3079,4.103,3080,4.103,3081,4.103,3082,4.103,3083,3.527,3084,4.103,3085,4.103,3086,5.425]],["title/index.html",[8,0.216,2759,1.771,2760,1.771]],["body/index.html",[26,0.019,79,0.3,99,0.013,100,0.016,101,0.013,132,1.581,144,3.2,201,1.5,206,3.596,207,2.804,230,1.74,293,2.989,321,4.112,338,1.42,412,3.446,438,3.163,492,3.446,494,2.359,510,3.742,511,3.742,823,1.919,1068,3.446,1303,3.832,1466,3.446,1552,3.446,1594,4.608,1656,4.112,1663,4.608,1778,3.742,1848,3.742,2249,4.112,2360,4.112,2502,3.832,2664,4.608,2759,2.989,2760,2.989,2822,4.58,2844,3.742,3087,5.361,3088,5.361,3089,5.361,3090,5.361,3091,6.421,3092,6.421,3093,6.421,3094,5.361,3095,5.361,3096,5.361,3097,5.361,3098,6.421,3099,3.742,3100,5.361,3101,6.421,3102,5.361,3103,5.361,3104,5.361,3105,5.361,3106,5.361,3107,5.361,3108,5.361,3109,5.361,3110,5.361,3111,5.361,3112,5.361]],["title/license.html",[2759,1.771,2760,1.771,2955,2.217]],["body/license.html",[5,0.188,26,0.017,50,1.836,99,0.014,100,0.016,101,0.014,205,1.516,314,3.154,391,3.154,415,3.636,686,4.339,1077,4.339,1078,3.636,1087,3.948,1256,4.339,1302,3.636,1360,3.948,1916,5.393,2130,4.339,2131,4.339,2955,5.273,3069,4.862,3113,5.656,3114,5.656,3115,5.656,3116,5.656,3117,5.656,3118,5.656,3119,5.656,3120,5.656,3121,5.656,3122,5.656,3123,4.862,3124,5.656,3125,6.628,3126,5.656,3127,5.656,3128,5.656,3129,5.656,3130,5.656,3131,5.656,3132,5.656,3133,5.656,3134,5.656]],["title/modules.html",[490,2.867]],["body/modules.html",[26,0.017,99,0.015,100,0.017,101,0.015,348,3.586,489,3.578,490,3.343,1646,5.892,2077,4.785,2502,3.578,3135,6.855]],["title/overview.html",[3136,4.42]],["body/overview.html",[2,1.615,26,0.019,99,0.01,100,0.014,101,0.01,311,2.1,338,0.949,404,1.463,440,1.791,452,3.708,453,2.562,488,2.246,489,4.252,490,2.393,491,1.463,492,2.76,493,2.115,494,1.889,495,3.293,496,3.69,497,3.69,498,3.69,499,3.69,500,2.428,501,3.9,502,2.996,611,1.7,821,2.312,833,2.76,895,2.1,899,2.204,901,2.312,904,2.204,906,2.312,908,2.312,909,2.312,911,2.312,913,2.1,915,2.204,917,2.312,919,2.204,921,2.312,922,1.328,923,2.204,925,2.204,927,2.204,1232,1.791,1436,1.889,1658,2.996,1680,3.69,1707,2.996,2502,4.704,2503,3.69,2504,3.69,2505,3.69,3136,3.69]],["title/additional-documentation/getting-started.html",[64,0.699,2759,1.525,2760,1.525,3137,1.909]],["body/additional-documentation/getting-started.html",[0,0.01,2,2.704,5,0.14,13,0.759,15,2.878,26,0.019,40,3.84,68,2.193,75,2.502,79,0.416,84,0.38,99,0.01,100,0.013,101,0.01,102,3.213,104,2.295,108,3.411,109,2.502,111,2.694,130,2.337,132,1.236,136,1.844,150,1.577,173,0.973,201,1.599,205,1.123,206,3.961,207,3.411,208,1.844,235,2.193,283,2.502,285,1.748,291,1.844,297,3.603,310,1.748,312,3.603,315,2.502,316,1.748,327,2.193,338,1.497,347,0.973,383,3.213,385,2.878,412,2.694,415,3.536,451,1.748,453,3.284,478,3.948,488,2.878,489,3.284,492,3.536,494,2.421,509,3.603,510,3.84,511,4.551,512,3.603,528,2.065,545,2.337,558,2.065,597,2.193,604,0.799,611,2.178,629,1.361,631,1.748,634,1.949,659,2.694,691,2.502,707,2.694,838,2.694,848,1.5,886,3.215,950,3.067,951,2.337,959,1.66,961,1.66,963,1.969,974,2.878,1068,2.694,1111,3.215,1170,2.694,1301,2.502,1303,2.502,1310,4.22,1430,3.603,1434,3.603,1441,3.603,1471,2.694,1570,3.215,1612,3.603,1778,2.925,1916,4.22,2111,2.925,2116,3.603,2215,3.215,2234,4.22,2386,3.603,2390,3.603,2434,2.502,2502,3.892,2663,3.603,2759,2.337,2760,2.337,2803,5.605,2822,2.694,2832,4.729,2863,5.279,2898,3.215,3099,3.84,3138,4.191,3139,3.603,3140,3.603,3141,6.771,3142,4.191,3143,5.501,3144,6.52,3145,4.191,3146,4.191,3147,4.191,3148,4.191,3149,4.191,3150,4.191,3151,4.191,3152,4.191,3153,4.191,3154,4.191,3155,4.191,3156,4.191,3157,4.191,3158,4.191,3159,4.191,3160,4.191,3161,4.191,3162,4.191,3163,4.191,3164,4.191,3165,5.501,3166,3.215,3167,4.191,3168,4.191,3169,3.603,3170,3.603,3171,4.191,3172,5.501,3173,4.191,3174,4.191,3175,4.191]],["title/additional-documentation/local-development.html",[64,0.699,2434,1.633,2889,1.909,3137,1.909]],["body/additional-documentation/local-development.html",[26,0.017,99,0.015,100,0.017,101,0.015,338,1.34,2434,3.617,2868,3.896,2889,4.23]],["title/additional-documentation/local-development/schematics.html",[64,0.812,2868,2.042,3137,2.217]],["body/additional-documentation/local-development/schematics.html",[5,0.135,26,0.018,27,0.652,36,1.528,50,1.318,64,1.038,67,2.61,68,2.818,77,1.787,87,1.142,99,0.01,100,0.013,101,0.01,136,2.834,150,2.275,187,3.371,194,2.834,201,1.48,205,1.621,206,3.847,207,2.124,208,1.787,211,3.115,235,2.124,237,2.124,265,3.004,266,2.305,267,0.467,268,2.247,308,3.463,315,2.424,316,2.247,318,1.787,336,1.528,338,1.191,341,2.264,385,2.124,386,3.886,438,3.593,440,1.694,490,3.004,517,3.49,555,1.787,604,1.277,631,1.694,634,2.505,674,2.124,702,2.61,747,3.115,803,2.61,823,1.454,838,2.61,939,1.694,957,2.247,962,1.694,974,2.124,1011,2.61,1134,3.463,1144,2.834,1152,2.61,1167,4.26,1168,2.834,1169,2.424,1224,2.818,1301,3.609,1302,3.463,1303,2.424,1371,4.14,1425,3.115,1435,3.115,1466,2.61,1471,3.463,1701,3.49,1716,3.49,1751,4.22,1778,2.834,1818,3.49,1848,2.834,1882,3.115,1948,3.49,1953,3.49,2110,3.49,2322,4.14,2591,3.49,2763,3.49,2767,4.631,2808,3.49,2812,3.115,2816,3.49,2819,4.495,2831,3.49,2838,4.638,2843,5.197,2844,3.76,2847,3.49,2868,4.866,2869,5.76,2870,5.535,2872,3.49,2895,4.94,2903,3.49,3017,4.631,3099,3.76,3123,3.49,3140,3.49,3166,5.595,3170,3.49,3176,3.49,3177,3.49,3178,4.631,3179,3.49,3180,4.06,3181,4.06,3182,5.387,3183,3.49,3184,4.06,3185,4.06,3186,4.06,3187,6.44,3188,5.387,3189,4.06,3190,4.06,3191,4.06,3192,4.06,3193,4.06,3194,4.06,3195,4.06,3196,4.06,3197,4.06,3198,4.06,3199,3.49,3200,4.631,3201,4.06,3202,4.06,3203,4.06,3204,5.387,3205,4.06,3206,4.06,3207,4.06,3208,4.06,3209,5.387,3210,4.06,3211,4.06,3212,4.06,3213,4.06,3214,4.06,3215,4.06,3216,4.06,3217,4.06,3218,4.06,3219,4.06,3220,4.06,3221,4.06,3222,4.06,3223,4.06,3224,4.06,3225,4.06,3226,4.06,3227,4.06,3228,4.06,3229,4.06,3230,4.06,3231,4.06,3232,4.06,3233,4.06,3234,4.06,3235,4.06,3236,4.06,3237,4.06,3238,4.06,3239,4.06,3240,4.06,3241,4.06,3242,4.06,3243,4.06,3244,4.06,3245,4.06,3246,4.06,3247,4.06,3248,4.06,3249,4.06,3250,3.49]],["title/additional-documentation/local-development/components.html",[64,0.812,338,0.702,3137,2.217]],["body/additional-documentation/local-development/components.html",[5,0.138,19,4.182,23,0.507,26,0.018,27,0.588,47,1.922,50,1.342,67,2.657,68,3.526,77,1.819,79,0.305,99,0.01,100,0.013,101,0.01,132,1.219,136,2.854,150,2.051,162,2.535,201,1.592,205,1.108,206,3.884,207,3.792,208,1.819,235,2.162,237,2.162,265,2.305,267,0.476,269,4.182,270,3.805,276,3.171,288,3.553,291,2.966,293,2.305,296,2.162,308,3.504,310,1.724,319,3.504,330,3.553,336,1.556,338,1.205,378,3.553,385,2.852,386,4.605,416,3.553,425,2.162,438,3.571,439,2.162,440,1.724,490,2.305,503,2.036,604,0.788,631,1.724,634,1.922,655,2.885,687,3.171,691,2.467,934,1.952,957,1.724,959,2.159,974,2.162,1167,3.641,1172,2.885,1301,3.871,1303,4.496,1336,3.553,1353,4.686,1360,3.805,1371,2.657,1436,2.399,1456,3.171,1471,2.657,1534,2.885,1605,3.553,1751,2.885,1777,3.171,2072,4.182,2322,4.538,2434,3.641,2437,3.553,2548,4.686,2770,3.171,2796,3.553,2799,4.686,2807,3.553,2812,3.171,2819,4.527,2822,2.657,2838,4.182,2840,3.553,2844,3.805,2868,4.704,2884,3.553,2889,4.527,2895,4.975,2898,3.171,3083,3.553,3099,4.257,3139,3.553,3166,5.613,3169,3.553,3176,3.553,3177,4.686,3178,3.553,3179,4.686,3183,3.553,3199,4.686,3200,4.686,3250,3.553,3251,4.134,3252,4.134,3253,4.134,3254,4.134,3255,5.451,3256,5.451,3257,5.451,3258,4.134,3259,4.134,3260,4.134,3261,4.134,3262,4.134,3263,5.451,3264,4.134,3265,4.134,3266,4.134,3267,4.134,3268,4.134,3269,4.134,3270,5.451,3271,5.451,3272,6.1,3273,5.451,3274,4.134,3275,6.1,3276,4.134,3277,4.134,3278,4.134,3279,4.134,3280,4.134,3281,4.134,3282,4.134,3283,4.134,3284,4.134,3285,4.134,3286,4.134,3287,4.134,3288,4.134,3289,4.134,3290,4.134]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["0",{"_index":94,"title":{},"body":{"classes/AbstractForm.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["0.0.17",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["0.0.18",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["0.0.19",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["0.0.20",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["0.0.21",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["0.0.22",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["0.0.23",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["0.0.24",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["0.0.25",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["0.0.26",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["0.0.27",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["0.0.28",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["0.0.29",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["0.0.30",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["0.1",{"_index":2599,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["0.1.2",{"_index":3013,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":2733,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["0.3em",{"_index":2605,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["0.3s",{"_index":2076,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{}}}],["0.5",{"_index":1931,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0.5rem",{"_index":1464,"title":{},"body":{"components/DatepickerComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["0.8",{"_index":2738,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["0.8.26",{"_index":3025,"title":{},"body":{"dependencies.html":{}}}],["0.8to",{"_index":1809,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0/1",{"_index":2927,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2939,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2930,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2928,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2924,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2920,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2913,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2919,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2933,"title":{},"body":{"coverage.html":{}}}],["000036",{"_index":2632,"title":{},"body":{"components/ToggleComponent.html":{}}}],["000099",{"_index":2630,"title":{},"body":{"components/ToggleComponent.html":{}}}],["01",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["017bd5f",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["01d17d3",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2847,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["04",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":3222,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["07",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["0em",{"_index":2241,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["0px",{"_index":2592,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["0rem",{"_index":2616,"title":{},"body":{"components/ToggleComponent.html":{}}}],["1",{"_index":1397,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{}}}],["1.1.1",{"_index":3023,"title":{},"body":{"dependencies.html":{}}}],["1.3rem",{"_index":2617,"title":{},"body":{"components/ToggleComponent.html":{}}}],["1.5px",{"_index":2625,"title":{},"body":{"components/ToggleComponent.html":{}}}],["1.5rem",{"_index":2226,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ToggleComponent.html":{}}}],["1.75rem",{"_index":2619,"title":{},"body":{"components/ToggleComponent.html":{}}}],["1/1",{"_index":2954,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":2918,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3002,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2923,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2937,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2999,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2940,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2926,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1232,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/ThumbnailComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"overview.html":{}}}],["10/16",{"_index":2917,"title":{},"body":{"coverage.html":{}}}],["10/31",{"_index":2929,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":969,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["1000",{"_index":973,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["100px",{"_index":2595,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["1024",{"_index":1901,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1048576",{"_index":1918,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["10^10",{"_index":2300,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["10px",{"_index":890,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/ThumbnailComponent.html":{}}}],["11",{"_index":1680,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"overview.html":{}}}],["12",{"_index":1684,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["13",{"_index":1093,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["14",{"_index":1700,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["15",{"_index":1704,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["150",{"_index":2752,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["15px",{"_index":2384,"title":{},"body":{"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{}}}],["16",{"_index":1707,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["17",{"_index":1710,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["18",{"_index":1718,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["180",{"_index":2581,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["185px",{"_index":1415,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["19",{"_index":1726,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1a1",{"_index":2481,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["1a288cd",{"_index":2902,"title":{},"body":{"changelog.html":{}}}],["1ea543d",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["1em",{"_index":1252,"title":{},"body":{"components/DateComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["1rem",{"_index":2224,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["2",{"_index":1436,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"overview.html":{},"additional-documentation/local-development/components.html":{}}}],["2.0",{"_index":3116,"title":{},"body":{"license.html":{}}}],["2.0.550",{"_index":3021,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":3120,"title":{},"body":{"license.html":{}}}],["2.16.2",{"_index":3011,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":3015,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":3019,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":2603,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["2.5.4",{"_index":3018,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":2941,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2946,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":2935,"title":{},"body":{"coverage.html":{}}}],["2017",{"_index":3114,"title":{},"body":{"license.html":{}}}],["2019",{"_index":2763,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["201px",{"_index":1417,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["21",{"_index":2921,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":2934,"title":{},"body":{"coverage.html":{}}}],["238c01d",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2931,"title":{},"body":{"coverage.html":{}}}],["240px",{"_index":2096,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["25",{"_index":1254,"title":{},"body":{"components/DateComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["250",{"_index":971,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{}}}],["25px",{"_index":2379,"title":{},"body":{"components/PasswordComponent.html":{}}}],["2600",{"_index":1933,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["2625608",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["270px",{"_index":2596,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["28",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["2c5c994",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["2em",{"_index":2604,"title":{},"body":{"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["2px",{"_index":1482,"title":{},"body":{"components/DatepickerComponent.html":{},"components/ThumbnailComponent.html":{}}}],["2rem",{"_index":2382,"title":{},"body":{"components/PasswordComponent.html":{}}}],["3",{"_index":833,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.2.0",{"_index":3020,"title":{},"body":{"dependencies.html":{}}}],["3.75",{"_index":2637,"title":{},"body":{"components/ToggleComponent.html":{}}}],["3/17",{"_index":2938,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":2915,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2947,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2949,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":2944,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1776,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["300",{"_index":2576,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["31",{"_index":1174,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["32",{"_index":2281,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["33",{"_index":2745,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["3300",{"_index":1936,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["355945207",{"_index":2326,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["35d0bba",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["35px",{"_index":1250,"title":{},"body":{"components/DateComponent.html":{}}}],["36px",{"_index":1484,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["38",{"_index":3000,"title":{},"body":{"coverage.html":{}}}],["3ac6d4d",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["3b90e60",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["3d0a6bc",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["3px",{"_index":2735,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["4",{"_index":1658,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4.3.1",{"_index":3016,"title":{},"body":{"dependencies.html":{}}}],["4/29",{"_index":2936,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1413,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["4/8",{"_index":2997,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":2740,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["400/500",{"_index":148,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["42",{"_index":2948,"title":{},"body":{"coverage.html":{}}}],["4766a2b",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["479804f",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["48966c0",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["48dfa9d",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["4b884a6",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["4e8eb9b",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1662,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"miscellaneous/enumerations.html":{}}}],["5/10",{"_index":2950,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":2998,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1249,"title":{},"body":{"components/DateComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["500",{"_index":2730,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["532a3ec",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["5px",{"_index":884,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["5rem",{"_index":2380,"title":{},"body":{"components/PasswordComponent.html":{}}}],["6",{"_index":1666,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["6.4.0",{"_index":3022,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":3094,"title":{},"body":{"index.html":{}}}],["62",{"_index":2916,"title":{},"body":{"coverage.html":{}}}],["6242bea",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["650025e",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["650px",{"_index":2726,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["65b8144",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":2945,"title":{},"body":{"coverage.html":{}}}],["6caf36c",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["6d5649d",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1668,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.7",{"_index":3008,"title":{},"body":{"dependencies.html":{}}}],["7/21",{"_index":2925,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2383,"title":{},"body":{"components/PasswordComponent.html":{},"coverage.html":{}}}],["7d2e7cd",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["7eaf326",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["7f968a4",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["7fd6537",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1671,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["8.25",{"_index":2638,"title":{},"body":{"components/ToggleComponent.html":{}}}],["8.25'%3e%3ccircle",{"_index":2639,"title":{},"body":{"components/ToggleComponent.html":{}}}],["8.9.4",{"_index":3090,"title":{},"body":{"index.html":{}}}],["8/21",{"_index":3001,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2943,"title":{},"body":{"coverage.html":{}}}],["8004583",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["85",{"_index":2074,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["85eab15",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["88",{"_index":2942,"title":{},"body":{"coverage.html":{}}}],["8a22405",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["8d79d30",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1094,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["9.0.0",{"_index":3014,"title":{},"body":{"dependencies.html":{}}}],["9/37",{"_index":2932,"title":{},"body":{"coverage.html":{}}}],["9/42",{"_index":2922,"title":{},"body":{"coverage.html":{}}}],["95f2a31",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["9][a",{"_index":2492,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["_",{"_index":1394,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["_context",{"_index":3049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_headers",{"_index":109,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["_log",{"_index":751,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_log(message",{"_index":668,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_logerror",{"_index":752,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_logerror(errormessage",{"_index":671,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_name",{"_index":2450,"title":{},"body":{"classes/Person.html":{}}}],["_name.concat",{"_index":2453,"title":{},"body":{"classes/Person.html":{}}}],["_not_",{"_index":351,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["_onchange",{"_index":1306,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["_only_",{"_index":2679,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["_ontouched",{"_index":1307,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["_options",{"_index":3072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_sendlog",{"_index":753,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_sendlog(message",{"_index":693,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["a1a",{"_index":2480,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["a9cafca",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["abort",{"_index":1683,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["above",{"_index":1471,"title":{},"body":{"components/DatepickerComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["absolute",{"_index":2734,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["abstract",{"_index":15,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["abstractform",{"_index":1,"title":{"classes/AbstractForm.html":{}},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["abstracthttpservice",{"_index":102,"title":{"classes/AbstractHttpService.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["abstracthttpservice:11",{"_index":777,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:16",{"_index":776,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:22",{"_index":771,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:30",{"_index":773,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:38",{"_index":774,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:59",{"_index":772,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracttestpage",{"_index":196,"title":{"classes/AbstractTestPage.html":{}},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"coverage.html":{}}}],["acc",{"_index":1947,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accept",{"_index":1651,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accepting",{"_index":2755,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["access",{"_index":40,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["accessed",{"_index":1047,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["accessible",{"_index":1392,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["accessors",{"_index":114,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"classes/Person.html":{}}}],["accomplish",{"_index":2756,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["action",{"_index":52,"title":{},"body":{"classes/AbstractForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["activeindex",{"_index":2646,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["actual",{"_index":1434,"title":{},"body":{"components/DatepickerComponent.html":{},"additional-documentation/getting-started.html":{}}}],["actual_component",{"_index":929,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["adam",{"_index":3110,"title":{},"body":{"index.html":{}}}],["add",{"_index":187,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["added",{"_index":572,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["adding",{"_index":838,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["additional",{"_index":3137,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{}}],["addpackagejsonscript",{"_index":2992,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagejsonscript(tree",{"_index":3046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addpackagetopackagejson",{"_index":2984,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagetopackagejson(host",{"_index":3060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addr",{"_index":1111,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/getting-started.html":{}}}],["address",{"_index":383,"title":{"classes/Address.html":{}},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["address'},{'name",{"_index":896,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["address();the",{"_index":3167,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address.component.html",{"_index":955,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["address.component.scss",{"_index":956,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["address_url",{"_index":2127,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["addresschange",{"_index":989,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["addresscomponent",{"_index":895,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["addresses",{"_index":1103,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["adds",{"_index":2391,"title":{},"body":{"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{}}}],["addtag",{"_index":1504,"title":{},"body":{"components/DropdownComponent.html":{}}}],["addtagtext",{"_index":1505,"title":{},"body":{"components/DropdownComponent.html":{}}}],["aee4761",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["aftercontentinit",{"_index":1527,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["afterviewinit",{"_index":1530,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["again",{"_index":1168,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["against",{"_index":2758,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["age",{"_index":2415,"title":{},"body":{"classes/Person.html":{}}}],["agreed",{"_index":3122,"title":{},"body":{"license.html":{}}}],["algorithm",{"_index":1709,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["align",{"_index":2230,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["allow",{"_index":749,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["allowed",{"_index":1921,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["along",{"_index":123,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["already",{"_index":659,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["alreadyexists",{"_index":564,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":171,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["amultiples",{"_index":1890,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["amultiples[nmultiple",{"_index":1903,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["angular",{"_index":68,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular's",{"_index":727,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["angular.json",{"_index":3248,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["angular/animations",{"_index":3007,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":527,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":164,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["angular/compiler",{"_index":3009,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":82,"title":{},"body":{"classes/AbstractForm.html":{},"modules/CaptchaModule.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"directives/YearValidateDirective.html":{},"dependencies.html":{}}}],["angular/http",{"_index":474,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":521,"title":{},"body":{"modules/CaptchaModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":83,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["angular2",{"_index":450,"title":{},"body":{"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angularjs2",{"_index":1632,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["another",{"_index":63,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["answer",{"_index":469,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["any)).then((pdfdoc",{"_index":2003,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["any).controls[input_name",{"_index":1621,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["anything",{"_index":556,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["anywhere",{"_index":3193,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["apache",{"_index":3069,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["api",{"_index":104,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["apibaseurl",{"_index":464,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["apiservice",{"_index":3162,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["app.component.scss",{"_index":2091,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["app.component.ts",{"_index":3051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appcomponentcss",{"_index":2963,"title":{},"body":{"coverage.html":{}}}],["appcomponenthtml",{"_index":2964,"title":{},"body":{"coverage.html":{}}}],["appconstants",{"_index":1576,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["appear",{"_index":3256,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["appearance",{"_index":1263,"title":{},"body":{"components/DateComponent.html":{}}}],["appears",{"_index":244,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ToggleComponent.html":{}}}],["append",{"_index":1460,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["appended",{"_index":1468,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["appendselectortobody",{"_index":1409,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["applicable",{"_index":1077,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["application",{"_index":291,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["application's",{"_index":3289,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["applicationbase",{"_index":1554,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["applicationid",{"_index":635,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["applies",{"_index":2204,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["appropriate",{"_index":1953,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["approximation",{"_index":1889,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["april",{"_index":1182,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["aren't",{"_index":741,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["args",{"_index":1976,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguably",{"_index":1714,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguments",{"_index":1274,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["aria",{"_index":2369,"title":{},"body":{"components/PasswordComponent.html":{}}}],["around",{"_index":2703,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["array",{"_index":1098,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{}}}],["array(0",{"_index":1590,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["artifacts",{"_index":3275,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["aside",{"_index":2227,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["asides",{"_index":2221,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["ask",{"_index":3109,"title":{},"body":{"index.html":{}}}],["assets",{"_index":3242,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["associated",{"_index":259,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["assuming",{"_index":3283,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["assumption",{"_index":3138,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["async",{"_index":222,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["attachmentorder",{"_index":532,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attr",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["attr.aria",{"_index":2367,"title":{},"body":{"components/PasswordComponent.html":{}}}],["attribute",{"_index":329,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"changelog.html":{}}}],["attributes",{"_index":2140,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["audit",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":1185,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["auto",{"_index":961,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["autocorrect",{"_index":1506,"title":{},"body":{"components/DropdownComponent.html":{}}}],["automatically",{"_index":75,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"additional-documentation/getting-started.html":{}}}],["available",{"_index":1679,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["avoids",{"_index":295,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["await",{"_index":362,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["awkward",{"_index":2321,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["b",{"_index":2551,"title":{},"body":{"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["back",{"_index":2083,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["backend",{"_index":719,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["background",{"_index":868,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bad",{"_index":2390,"title":{},"body":{"components/PasswordComponent.html":{},"additional-documentation/getting-started.html":{}}}],["bar",{"_index":53,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":907,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component",{"_index":2511,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bar.component.html",{"_index":2054,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":2053,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":2052,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":2064,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:12",{"_index":2061,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:13",{"_index":2063,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:14",{"_index":2062,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:15",{"_index":2060,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:17",{"_index":2120,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:18",{"_index":2108,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:19",{"_index":2065,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:20",{"_index":2109,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:21",{"_index":2121,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:22",{"_index":2067,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":2671,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":2674,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:26",{"_index":2668,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:28",{"_index":2653,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:31",{"_index":2107,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:33",{"_index":2658,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:35",{"_index":2122,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:50",{"_index":2657,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:55",{"_index":2654,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:70",{"_index":2656,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:80",{"_index":2659,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar/form",{"_index":2051,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["bar/wizard",{"_index":2516,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bars",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":435,"title":{"classes/Base.html":{}},"body":{"classes/Base.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["base.component",{"_index":1548,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.model",{"_index":1556,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base64",{"_index":3244,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["base:11",{"_index":1195,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ToggleComponent.html":{}}}],["base_url",{"_index":2125,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["basecomponent",{"_index":1547,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["based",{"_index":1691,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["basis",{"_index":1256,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"license.html":{}}}],["bc",{"_index":420,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{}}}],["bclogobase64",{"_index":2968,"title":{},"body":{"coverage.html":{}}}],["before",{"_index":1224,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["behavior",{"_index":95,"title":{},"body":{"classes/AbstractForm.html":{}}}],["being",{"_index":622,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["below",{"_index":3147,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["between",{"_index":867,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bf3cf23",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["bg",{"_index":2363,"title":{},"body":{"components/PasswordComponent.html":{}}}],["big",{"_index":1960,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["bindings",{"_index":1610,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["binds",{"_index":1607,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["birth",{"_index":2416,"title":{},"body":{"classes/Person.html":{}}}],["birthdate",{"_index":2408,"title":{},"body":{"classes/Person.html":{}}}],["black",{"_index":2623,"title":{},"body":{"components/ToggleComponent.html":{}}}],["blank",{"_index":1011,"title":{},"body":{"interfaces/CountryList.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/local-development/schematics.html":{}}}],["blob",{"_index":1702,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["blob.size",{"_index":1881,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["block",{"_index":2219,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["blue",{"_index":2631,"title":{},"body":{"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["blueimp",{"_index":1563,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["blur",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["blurevent",{"_index":2273,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["body",{"_index":154,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["body).subscribe",{"_index":710,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["bold",{"_index":1244,"title":{},"body":{"components/DateComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ToggleComponent.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":493,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":888,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["both",{"_index":211,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["bottom",{"_index":303,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bound",{"_index":3104,"title":{},"body":{"index.html":{}}}],["box",{"_index":2358,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ThumbnailComponent.html":{}}}],["boxes",{"_index":2222,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["bread",{"_index":790,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["breadcrumb",{"_index":829,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb'},{'name",{"_index":898,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["breadcrumb.component",{"_index":2509,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["breadcrumb.component.html",{"_index":852,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":850,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["breadcrumb.component.ts",{"_index":828,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb.component.ts:29",{"_index":854,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts:33",{"_index":855,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb/core",{"_index":827,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["break",{"_index":1455,"title":{},"body":{"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["breaking",{"_index":2714,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["breakpoint",{"_index":860,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["british",{"_index":2130,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"license.html":{}}}],["broken",{"_index":3254,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["broswefileinputelement",{"_index":2023,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browse",{"_index":1646,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules.html":{}}}],["browsefileref",{"_index":1580,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browsefilestream",{"_index":1742,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser",{"_index":348,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":1667,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser.actions().sendkeys(protractor.key.enter).perform",{"_index":374,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0",{"_index":355,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get(&#39;/enrolment/profile&#39",{"_index":300,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get('/enrolment/profile",{"_index":352,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browsermodule",{"_index":520,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["btn",{"_index":1457,"title":{},"body":{"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["btnclick",{"_index":2059,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bug",{"_index":1465,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["build",{"_index":2322,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["build:schematics",{"_index":3191,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["building",{"_index":3177,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["builds",{"_index":3179,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["buildtime",{"_index":2988,"title":{},"body":{"coverage.html":{}}}],["built",{"_index":3271,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["button",{"_index":56,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["bytes",{"_index":589,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["c054ca5",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["c6befdf",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["c8cd6f4",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["ca8bd7c",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["calc(0.5rem",{"_index":1481,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["calc(100",{"_index":1483,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["calculateprogresspercentage",{"_index":2649,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["calculates",{"_index":2414,"title":{},"body":{"classes/Person.html":{}}}],["call",{"_index":702,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["callback",{"_index":1989,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callback(imgel",{"_index":1977,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["called",{"_index":1845,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/functions.html":{}}}],["caller",{"_index":1159,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["calling",{"_index":282,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["calls",{"_index":3239,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["can't",{"_index":1609,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canada",{"_index":1078,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["cancel",{"_index":1732,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cancontinue",{"_index":14,"title":{},"body":{"classes/AbstractForm.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["cannotopen",{"_index":566,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["cannotopenpdf",{"_index":568,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["canvas",{"_index":1598,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.getcontext('2d",{"_index":1998,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.toblob((blob",{"_index":1879,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["captcha",{"_index":478,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["captcha'},{'name",{"_index":897,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["captcha.component",{"_index":524,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha/audio",{"_index":486,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["captcha_state",{"_index":3028,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["captchacomponent",{"_index":500,"title":{},"body":{"modules/CaptchaModule.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["captchadataservice",{"_index":452,"title":{"injectables/CaptchaDataService.html":{}},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"overview.html":{}}}],["captchamodule",{"_index":489,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["capturefileinputelement",{"_index":2025,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefileref",{"_index":1582,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefilestream",{"_index":1744,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["care",{"_index":705,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["careful",{"_index":2665,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["case",{"_index":296,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"interfaces/ProvinceList.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/components.html":{}}}],["cases",{"_index":1170,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{},"additional-documentation/getting-started.html":{}}}],["catch",{"_index":2723,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["catcherror",{"_index":166,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["catcherror(err",{"_index":1009,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["categories",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["causes",{"_index":1950,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cb65dc6",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":1134,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["center",{"_index":835,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["chaange",{"_index":2680,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["change",{"_index":555,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changed",{"_index":1842,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["changedetection",{"_index":2644,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy",{"_index":2676,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":2645,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectorref",{"_index":1135,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["changelog",{"_index":2761,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelog.md",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":1371,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["changes.password",{"_index":2348,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["changes['countrylist",{"_index":1038,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["changes['countrylist'].currentvalue",{"_index":1039,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["changes['images",{"_index":1638,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue.length",{"_index":1639,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue",{"_index":1641,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue.length",{"_index":1640,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['provincelist",{"_index":1043,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["changes['provincelist'].currentvalue",{"_index":1044,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["changing",{"_index":1451,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["characters",{"_index":2311,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["check",{"_index":558,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["checkimagedimensions(file",{"_index":2041,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checkimageexists(file",{"_index":1622,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checks",{"_index":3077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checksum",{"_index":591,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["choice",{"_index":343,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["chrome",{"_index":876,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["city",{"_index":388,"title":{},"body":{"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["city_maxlen",{"_index":968,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["cityindex",{"_index":2159,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["cityref",{"_index":983,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"classes/MaskModel.html":{},"classes/Person.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"classes/Person.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["clean",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":1333,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{}}}],["clearbutton",{"_index":1321,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cleardate",{"_index":1312,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cleared",{"_index":1399,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cli",{"_index":3212,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["click",{"_index":1803,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["click)=\"showfullsizeview",{"_index":2587,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["clickbutton",{"_index":217,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickbutton(labelid",{"_index":247,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox",{"_index":218,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox(labelrefname",{"_index":250,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicking",{"_index":232,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicks",{"_index":60,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["clickskiptocontent",{"_index":219,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["client",{"_index":149,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["clito",{"_index":3215,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["cluster_captchamodule",{"_index":496,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_declarations",{"_index":497,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_exports",{"_index":498,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_providers",{"_index":499,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule",{"_index":2503,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_declarations",{"_index":2504,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_exports",{"_index":2505,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["coard",{"_index":3111,"title":{},"body":{"index.html":{}}}],["code",{"_index":634,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["code'},{'name",{"_index":916,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["code.component",{"_index":2535,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["code.component.html",{"_index":2473,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.scss",{"_index":2472,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts",{"_index":2471,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:16",{"_index":2478,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:17",{"_index":2477,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:18",{"_index":2479,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:19",{"_index":2482,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:21",{"_index":2476,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:29",{"_index":2487,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code/postal",{"_index":2470,"title":{},"body":{"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["col",{"_index":2228,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["collection",{"_index":3258,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["color",{"_index":869,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["columbia",{"_index":2131,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"license.html":{}}}],["column",{"_index":2208,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["come",{"_index":3108,"title":{},"body":{"index.html":{}}}],["command",{"_index":2838,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commas",{"_index":2158,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["commit",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["commmon",{"_index":2799,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["common",{"_index":201,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commondatefieldformat",{"_index":1270,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["commondatefieldformat]'},{'name",{"_index":924,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["commondayvalidation",{"_index":1489,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["commondayvalidation]'},{'name",{"_index":926,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["commonimage",{"_index":528,"title":{"classes/CommonImage.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror",{"_index":545,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror.cannotopen",{"_index":1784,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.cannotopenpdf",{"_index":1789,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.pdfnotsupported",{"_index":2014,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.toobig",{"_index":1781,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror",{"_index":569,"title":{"classes/CommonImageProcessingError.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopen",{"_index":1983,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopenpdf",{"_index":1832,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.toobig",{"_index":1923,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimagescalefactors",{"_index":593,"title":{"interfaces/CommonImageScaleFactors.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimagescalefactorsimpl",{"_index":597,"title":{"classes/CommonImageScaleFactorsImpl.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimagescalefactorsimpl(1",{"_index":1755,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonlogger",{"_index":628,"title":{"injectables/CommonLogger.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{},"coverage.html":{}}}],["commonlogmessage",{"_index":617,"title":{"interfaces/CommonLogMessage.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{}}}],["commonmodule",{"_index":526,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["commonyearvalidate",{"_index":928,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{}}}],["comparing",{"_index":2757,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["compat",{"_index":1954,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compatible",{"_index":3093,"title":{},"body":{"index.html":{}}}],["compilation",{"_index":3219,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compile",{"_index":2767,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["compiles",{"_index":3188,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compiliation",{"_index":1619,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compiling",{"_index":3182,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["complete",{"_index":233,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{}}}],["completed",{"_index":2039,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["complex",{"_index":831,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["compliance",{"_index":3117,"title":{},"body":{"license.html":{}}}],["compodoccrc.json",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":267,"title":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["component_template",{"_index":894,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["components",{"_index":338,"title":{"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractTestPage.html":{},"classes/Base.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["components/address/address.component",{"_index":2541,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/core",{"_index":2508,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date",{"_index":2524,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date.component",{"_index":2521,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/day",{"_index":2522,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/year",{"_index":2526,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/datepicker/datepicker.component",{"_index":2528,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":2537,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/file",{"_index":2530,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/form",{"_index":2510,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/models",{"_index":2549,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["components/page",{"_index":2512,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/password/password.component",{"_index":2514,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/postal",{"_index":2534,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/thumbnail/thumbnail.component",{"_index":2532,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/toggle/toggle.component",{"_index":2540,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/wizard",{"_index":2515,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["compose",{"_index":3237,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["concatenates",{"_index":2429,"title":{},"body":{"classes/Person.html":{}}}],["conditions",{"_index":3127,"title":{},"body":{"license.html":{}}}],["config",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["config.ts",{"_index":2983,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configurable",{"_index":3235,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["configuration",{"_index":836,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["configure",{"_index":701,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["configured",{"_index":515,"title":{},"body":{"modules/CaptchaModule.html":{},"changelog.html":{}}}],["configures",{"_index":3080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":3282,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["connectivity",{"_index":677,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["considered",{"_index":405,"title":{},"body":{"classes/Address.html":{}}}],["consistent",{"_index":688,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PageFrameworkComponent.html":{}}}],["console",{"_index":188,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.error('an",{"_index":717,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error('geocoder",{"_index":2164,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["console.error(`backend",{"_index":721,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error(msg",{"_index":699,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log",{"_index":181,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["console.log(\"error",{"_index":2018,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('cancel",{"_index":1735,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('completed",{"_index":1792,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('error",{"_index":1771,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('file",{"_index":1919,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('files",{"_index":1750,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('fileuploader",{"_index":1637,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('http",{"_index":192,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.log('image.name",{"_index":1855,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('loading",{"_index":1967,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('log",{"_index":2035,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('logservice",{"_index":711,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log('scaled",{"_index":2584,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["console.log('start",{"_index":1871,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('taplog",{"_index":1008,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["console.log('this",{"_index":1979,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`compare",{"_index":1625,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`file",{"_index":1906,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`image",{"_index":1867,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`max",{"_index":2009,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`this",{"_index":1628,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(error",{"_index":2038,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(response",{"_index":2037,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(var1",{"_index":1794,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["const",{"_index":173,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["constants",{"_index":290,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(errorcode",{"_index":606,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["constructor(form",{"_index":1133,"title":{},"body":{"components/DateComponent.html":{}}}],["constructor(http",{"_index":116,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["constructor(httpclient",{"_index":459,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["constructor(private",{"_index":480,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(protected",{"_index":85,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["constructor(public",{"_index":584,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(router",{"_index":21,"title":{},"body":{"classes/AbstractForm.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(viewcontainerref",{"_index":2564,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["constructor(wfactor",{"_index":599,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["consume",{"_index":3287,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["contain",{"_index":1692,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["container",{"_index":787,"title":{"classes/Container.html":{}},"body":{"classes/Container.html":{},"components/DateComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["container.length",{"_index":2712,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["container[0].scrollleft",{"_index":2720,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["contains",{"_index":2310,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["content",{"_index":239,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{}}}],["contentchild",{"_index":1528,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contentchild('uploadinstruction",{"_index":1587,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contenttype",{"_index":533,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["context",{"_index":3004,"title":{},"body":{"coverage.html":{}}}],["continue",{"_index":16,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["continuebutton",{"_index":215,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["contributing",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["contributing.md",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["control",{"_index":1331,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/ToggleComponent.html":{},"directives/YearValidateDirective.html":{}}}],["control.parent.value",{"_index":1492,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["control.value",{"_index":1493,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["controlcontainer",{"_index":939,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/local-development/schematics.html":{}}}],["controlvalueaccessor",{"_index":940,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ProvinceList.html":{}}}],["convert",{"_index":1152,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["convertdatetosimpledate",{"_index":1313,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertdatetosimpledate(date",{"_index":1363,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["converted",{"_index":1028,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["convertroutetotitle",{"_index":793,"title":{},"body":{"classes/Container.html":{}}}],["convertroutetotitle(routepath",{"_index":799,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["converts",{"_index":801,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["convertsimpledatetodate",{"_index":1314,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertsimpledatetodate(date",{"_index":1365,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["copied",{"_index":320,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["copies",{"_index":3068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copy",{"_index":391,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["copy(object",{"_index":399,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{}}}],["copylicense",{"_index":2953,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copylicense(_options",{"_index":3067,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copyright",{"_index":3113,"title":{},"body":{"license.html":{}}}],["copyversionfile",{"_index":2993,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copyversionfile(options",{"_index":3048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":848,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"additional-documentation/getting-started.html":{}}}],["core.module.ts",{"_index":2507,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["corebreadcrumb",{"_index":832,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["corebreadcrumbcomponent",{"_index":821,"title":{"components/CoreBreadcrumbComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["correct",{"_index":2903,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["correspond",{"_index":212,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponding",{"_index":284,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponds",{"_index":330,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["could've",{"_index":1715,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["countries",{"_index":932,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["country",{"_index":313,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{}}}],["countrycode",{"_index":933,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["countrylist",{"_index":930,"title":{"interfaces/CountryList.html":{}},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["countryobj",{"_index":1071,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["countryobj.countrycode",{"_index":1076,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["coverage",{"_index":2911,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":974,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["created",{"_index":1605,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["createifmissing",{"_index":2976,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createifmissing(host",{"_index":3073,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":3204,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["criteria",{"_index":2331,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["criteriamsg",{"_index":2258,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["crumbs",{"_index":791,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["css",{"_index":2742,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["ctx",{"_index":1997,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["curr",{"_index":1946,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["current",{"_index":1207,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["currently",{"_index":2116,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["currentpage",{"_index":1994,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["currentyear",{"_index":2750,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["cursor",{"_index":2594,"title":{},"body":{"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{}}}],["custom",{"_index":340,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ToggleComponent.html":{}}}],["cycles",{"_index":1438,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["d",{"_index":1920,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{}}}],["d.ts",{"_index":3195,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["d5bf00b",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["d5f44c4",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["d]+/.test",{"_index":1288,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["danger",{"_index":365,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{}}}],["danger::after",{"_index":2389,"title":{},"body":{"components/PasswordComponent.html":{}}}],["darken($gray",{"_index":2602,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["darker",{"_index":2633,"title":{},"body":{"components/ToggleComponent.html":{}}}],["dashboard",{"_index":841,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["dashboards",{"_index":2205,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["data",{"_index":191,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"components/ToggleComponent.html":{}}}],["data.city",{"_index":1109,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["data.service",{"_index":525,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["data.service.ts",{"_index":455,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":2498,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:11",{"_index":2501,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:12",{"_index":2499,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:16",{"_index":460,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:21",{"_index":467,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:29",{"_index":471,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:40",{"_index":463,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:9",{"_index":2500,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.street",{"_index":1108,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["datachange",{"_index":2611,"title":{},"body":{"components/ToggleComponent.html":{}}}],["dataservice",{"_index":1600,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dataurl",{"_index":1670,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["date",{"_index":665,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["date'},{'name",{"_index":900,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["date(date.year",{"_index":1401,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.component.html",{"_index":1118,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["date.component.scss",{"_index":1117,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["date.component.ts",{"_index":2552,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["date.day",{"_index":1403,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["date.getdate",{"_index":1398,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getfullyear",{"_index":1395,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getmonth",{"_index":1396,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.interface",{"_index":1197,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{}}}],["date.interface.ts",{"_index":2547,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["date.month",{"_index":1402,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["date.year",{"_index":1400,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{}}}],["date/date.component",{"_index":1391,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datechange",{"_index":1132,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datecomponent",{"_index":899,"title":{"components/DateComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateerrormsg",{"_index":1140,"title":{"interfaces/DateErrorMsg.html":{}},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{}}}],["datefieldformatdirective",{"_index":923,"title":{"directives/DateFieldFormatDirective.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateformat",{"_index":1322,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["dateobj",{"_index":664,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["dateofbirth",{"_index":2397,"title":{},"body":{"classes/Person.html":{}}}],["dateofbirthshort",{"_index":2404,"title":{},"body":{"classes/Person.html":{}}}],["datepicker",{"_index":1294,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datepicker'},{'name",{"_index":902,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["datepicker.component.html",{"_index":1305,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepicker.component.scss",{"_index":1304,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickercomponent",{"_index":901,"title":{"components/DatepickerComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datepickeroptions",{"_index":1308,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickersizes",{"_index":1309,"title":{},"body":{"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datepickersizes.default",{"_index":1357,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickersizes.mini",{"_index":1411,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["dates",{"_index":1344,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["datetime",{"_index":1386,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["day",{"_index":1157,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{}}}],["dayinmonth",{"_index":1500,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["dayinput",{"_index":1253,"title":{},"body":{"components/DateComponent.html":{}}}],["dayoutofrange",{"_index":1198,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dayref",{"_index":1119,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["days",{"_index":1173,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["daysinmonth",{"_index":1496,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["dayvalidationdirective",{"_index":925,"title":{"directives/DayValidationDirective.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dbb94e1",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":3236,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["debouncetime",{"_index":944,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["debouncetime(500",{"_index":1004,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["december",{"_index":1189,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["declarations",{"_index":492,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["decoration",{"_index":2606,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["decorators",{"_index":37,"title":{},"body":{"classes/AbstractForm.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["deeper",{"_index":3153,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["default",{"_index":43,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["defaultcolor",{"_index":2056,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["defaultcountry",{"_index":987,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{}}}],["defaultprov",{"_index":2129,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["defaultprovince",{"_index":988,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["defaults",{"_index":1040,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"injectables/ServerPayload.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["defining",{"_index":1428,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["degrade",{"_index":2082,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["delay",{"_index":1540,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delete",{"_index":2020,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["delete(evt",{"_index":2569,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage",{"_index":2563,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage(mspimage",{"_index":2029,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["denominator",{"_index":2697,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["dependencies",{"_index":440,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["dependency",{"_index":3247,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["deployed",{"_index":516,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["deprecated",{"_index":1841,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["description",{"_index":106,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["design",{"_index":856,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ProvinceList.html":{}}}],["desktop",{"_index":2231,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["detailed",{"_index":3146,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["detect",{"_index":1634,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["detection",{"_index":1437,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["detector",{"_index":1633,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["determine",{"_index":409,"title":{},"body":{"classes/Address.html":{},"directives/DayValidationDirective.html":{}}}],["determines",{"_index":55,"title":{},"body":{"classes/AbstractForm.html":{}}}],["development",{"_index":2434,"title":{"additional-documentation/local-development.html":{}},"body":{"classes/Person.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["devkit/schematics",{"_index":3214,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["df26aa1",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["diff",{"_index":2462,"title":{},"body":{"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["differ",{"_index":3285,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["different",{"_index":3263,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["directive",{"_index":892,"title":{"directives/DateFieldFormatDirective.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["directives",{"_index":922,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"overview.html":{}}}],["directly",{"_index":416,"title":{},"body":{"classes/Address.html":{},"additional-documentation/local-development/components.html":{}}}],["disablebefore",{"_index":1354,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disabled",{"_index":10,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{}}}],["disables",{"_index":32,"title":{},"body":{"classes/AbstractForm.html":{}}}],["disablesince",{"_index":1323,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disableuntil",{"_index":1324,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disiplay",{"_index":1089,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["display",{"_index":789,"title":{},"body":{"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["displayed",{"_index":1727,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["displaymask",{"_index":2475,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["dist",{"_index":1534,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/components.html":{}}}],["dist/common",{"_index":3281,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["distance",{"_index":2618,"title":{},"body":{"components/ToggleComponent.html":{}}}],["distinctuntilchanged",{"_index":945,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["distributed",{"_index":3125,"title":{},"body":{"license.html":{}}}],["dob",{"_index":2422,"title":{},"body":{"classes/Person.html":{}}}],["dobdt",{"_index":2460,"title":{},"body":{"classes/Person.html":{}}}],["dobformat",{"_index":2398,"title":{},"body":{"classes/Person.html":{}}}],["docinitparams",{"_index":1999,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["docs",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":3234,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["document.body.scrollheight",{"_index":356,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["document.createelement('canvas",{"_index":1995,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.createelement('img",{"_index":1970,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.getelementsbyclassname('horizontal",{"_index":2711,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["document:paste",{"_index":2274,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["document:paste(event",{"_index":2293,"title":{},"body":{"components/PasswordComponent.html":{}}}],["documentation",{"_index":2822,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["documents",{"_index":1596,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["doesn't",{"_index":2728,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["doing",{"_index":2254,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dom",{"_index":824,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["don't",{"_index":704,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["don'ts",{"_index":3149,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["done",{"_index":1716,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["dos",{"_index":3148,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["double",{"_index":2215,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"additional-documentation/getting-started.html":{}}}],["down",{"_index":302,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["down(md",{"_index":2093,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["down(sm",{"_index":2094,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["drag",{"_index":1647,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragover",{"_index":1731,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream",{"_index":1729,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream.pipe(map(evt",{"_index":1733,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["drop",{"_index":1656,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"index.html":{}}}],["dropdown",{"_index":369,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"changelog.html":{}}}],["dropdown'},{'name",{"_index":903,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["dropdown.component.html",{"_index":1503,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":1502,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":311,"title":{"components/DropdownComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["drops",{"_index":1649,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream",{"_index":1737,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream.pipe",{"_index":1739,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropzone",{"_index":1578,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["due",{"_index":730,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dummy",{"_index":2435,"title":{},"body":{"classes/Person.html":{}}}],["duplicate",{"_index":263,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"changelog.html":{}}}],["dynamic",{"_index":3010,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":150,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["e2e",{"_index":203,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["e762fc1",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["ea/pa",{"_index":1723,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["each",{"_index":385,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["earlier",{"_index":1717,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easier",{"_index":739,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["easily",{"_index":1705,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easy",{"_index":2119,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["eib",{"_index":1896,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element",{"_index":349,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["element's",{"_index":1675,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element(by.css('.form",{"_index":229,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('.skip",{"_index":238,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[ng",{"_index":377,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[role=\"combobox\"]`)).sendkeys(data",{"_index":373,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`ng",{"_index":366,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext('span.ng",{"_index":370,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(`button[class^=\"${labelid",{"_index":380,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.id(await",{"_index":360,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.csscontainingtext('lib",{"_index":358,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["elementref",{"_index":937,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"components/WizardProgressBarComponent.html":{}}}],["elements",{"_index":41,"title":{},"body":{"classes/AbstractForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["email",{"_index":3112,"title":{},"body":{"index.html":{}}}],["emit",{"_index":1447,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/MaskModel.html":{}}}],["emits",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":425,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/components.html":{}}}],["encapsulation",{"_index":2210,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["enclose",{"_index":2104,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["encoding",{"_index":3245,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["encountered",{"_index":1959,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["encourage",{"_index":286,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["encryptedanswer",{"_index":470,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["end",{"_index":2072,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["ensure",{"_index":706,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{}}}],["enter",{"_index":346,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{}}}],["entered",{"_index":2309,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["entering",{"_index":1086,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["entries",{"_index":1620,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["entry",{"_index":3150,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["entry.model",{"_index":1551,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["enum",{"_index":557,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["enumerations",{"_index":3027,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":3173,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["equation",{"_index":1808,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["equivalent",{"_index":1352,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errmsg",{"_index":2259,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errmsg.criteria",{"_index":2374,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.minlength",{"_index":2373,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.required",{"_index":2372,"title":{},"body":{"components/PasswordComponent.html":{}}}],["error",{"_index":147,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{}}}],["error('this",{"_index":1982,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.error",{"_index":712,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.error.message",{"_index":718,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.errorcode",{"_index":1780,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.errordescription",{"_index":1791,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image",{"_index":1783,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image.name",{"_index":1786,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.message",{"_index":680,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.name",{"_index":682,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.rawimagefile",{"_index":1785,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.rawimagefile.name",{"_index":1787,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.status",{"_index":722,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.statustext",{"_index":684,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error_fetch_img",{"_index":3039,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_verify",{"_index":3042,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":585,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordescription",{"_index":586,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["errordescription.pdf.js",{"_index":573,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordocument",{"_index":1599,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errorevent",{"_index":714,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errormessage",{"_index":653,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errormessages",{"_index":1128,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errormessages.dayoutofrange",{"_index":1235,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.invalidvalue",{"_index":1240,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.nofuturedatesallowed",{"_index":1239,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.nopastdatesallowed",{"_index":1238,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.required",{"_index":1234,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantfuture",{"_index":1237,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantpast",{"_index":1236,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errorname",{"_index":681,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errorreason",{"_index":1991,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors",{"_index":674,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/local-development/schematics.html":{}}}],["errors.pipe",{"_index":1944,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan",{"_index":1958,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan((acc",{"_index":1957,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["etc",{"_index":315,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ev",{"_index":2686,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ev.url",{"_index":2688,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["even",{"_index":1425,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["evenly",{"_index":2702,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["event",{"_index":619,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["event.datatransfer.files",{"_index":1741,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.item",{"_index":1106,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["event.jsdate",{"_index":1446,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["event.keycode",{"_index":1092,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["event.preventdefault",{"_index":1740,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.stoppropagation",{"_index":2071,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["event.target",{"_index":1281,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["event.target['files",{"_index":1747,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eventemitter",{"_index":935,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{}}}],["eventemitter(false",{"_index":1278,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["events",{"_index":1085,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["everything",{"_index":661,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["evt",{"_index":1911,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["evt.key",{"_index":1802,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.preventdefault",{"_index":1736,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.result",{"_index":1913,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["exactly",{"_index":1763,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["example",{"_index":208,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["example/path.../node/v8.9.4/lib/node_modules/moh",{"_index":3286,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["exampletodo",{"_index":3217,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["exceeds",{"_index":1687,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["except",{"_index":686,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"license.html":{}}}],["exclusive",{"_index":3034,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":2719,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["exist",{"_index":1336,"title":{},"body":{"components/DatepickerComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["existing",{"_index":3071,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exists",{"_index":976,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{}}}],["expect",{"_index":3171,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["experimental",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["expiry",{"_index":479,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["exported",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":495,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["express",{"_index":3129,"title":{},"body":{"license.html":{}}}],["extend",{"_index":387,"title":{},"body":{"classes/Address.html":{},"classes/Base.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/Person.html":{}}}],["extends",{"_index":629,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ToggleComponent.html":{},"additional-documentation/getting-started.html":{}}}],["extract",{"_index":1689,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eye",{"_index":2335,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["f603e99",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["fa",{"_index":2334,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["facets",{"_index":3264,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["failed",{"_index":143,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["fails",{"_index":1618,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["false",{"_index":45,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{}}}],["favicon_base64",{"_index":2966,"title":{},"body":{"coverage.html":{}}}],["favour",{"_index":2681,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["feature.properties",{"_index":2154,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["features",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["february",{"_index":1180,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["februrary",{"_index":1175,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["feedback",{"_index":2360,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["fetchaudio",{"_index":456,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchaudio(apibaseurl",{"_index":461,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetchdata",{"_index":457,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchdata(apibaseurl",{"_index":465,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetching_captcha_img",{"_index":3037,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ff",{"_index":882,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["field",{"_index":966,"title":{},"body":{"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["fields",{"_index":402,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["file's",{"_index":1669,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.name",{"_index":1629,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.naturalheight",{"_index":2042,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file_upload",{"_index":1821,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filecontent",{"_index":534,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["filecontrol",{"_index":1613,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileindex",{"_index":1815,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filelist",{"_index":1753,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filename",{"_index":1664,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/functions.html":{}}}],["fileobservable",{"_index":1850,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filereader",{"_index":1854,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["files",{"_index":1751,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["files.length",{"_index":1752,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop",{"_index":1738,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop).pipe",{"_index":1748,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesize",{"_index":1885,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesizeunit",{"_index":1886,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadbrowse",{"_index":1615,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploader",{"_index":2863,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["fileuploadercomponent",{"_index":904,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadercomponent.checkimageexists(mspimage",{"_index":1758,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadermsg",{"_index":1524,"title":{"interfaces/FileUploaderMsg.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["fill='%23000099'/%3e%3c/svg%3e",{"_index":2641,"title":{},"body":{"components/ToggleComponent.html":{}}}],["filled",{"_index":403,"title":{},"body":{"classes/Address.html":{}}}],["fills",{"_index":1171,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["filter",{"_index":1082,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter((mspimage",{"_index":1766,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(ev",{"_index":2685,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["filter(files",{"_index":1749,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(x",{"_index":819,"title":{},"body":{"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"interfaces/WizardProgressItem.html":{}}}],["final",{"_index":1711,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finally",{"_index":1719,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["find",{"_index":1068,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["fine",{"_index":667,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["finishes",{"_index":1674,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["first",{"_index":265,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["firstname",{"_index":2399,"title":{},"body":{"classes/Person.html":{}}}],["fix",{"_index":1466,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fixed",{"_index":2086,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":1956,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flag",{"_index":2333,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["flags",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["flashing",{"_index":1470,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["flatmap",{"_index":1538,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flex",{"_index":862,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["float",{"_index":1480,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{}}}],["floating",{"_index":2377,"title":{},"body":{"components/PasswordComponent.html":{}}}],["fluid",{"_index":2090,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["fn",{"_index":1114,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ProvinceList.html":{}}}],["focus",{"_index":421,"title":{},"body":{"classes/Address.html":{}}}],["folder",{"_index":3166,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["folders",{"_index":2840,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["following",{"_index":2548,"title":{},"body":{"interfaces/SimpleDate.html":{},"additional-documentation/local-development/components.html":{}}}],["font",{"_index":1241,"title":{},"body":{"components/DateComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["footer",{"_index":2088,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["force",{"_index":1088,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{}}}],["forceoverwrite",{"_index":3062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["forcerender",{"_index":1635,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["forget",{"_index":708,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["form",{"_index":11,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["form.ts",{"_index":7,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["form.ts:10",{"_index":39,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:13",{"_index":31,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:15",{"_index":46,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:17",{"_index":24,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:30",{"_index":54,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:36",{"_index":72,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:44",{"_index":66,"title":{},"body":{"classes/AbstractForm.html":{}}}],["formactionbar",{"_index":2101,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formactionbarcomponent",{"_index":906,"title":{"components/FormActionBarComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":1341,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{}}}],["format.directive",{"_index":2525,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["format.directive.ts",{"_index":1269,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:11",{"_index":1276,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["format.directive.ts:8",{"_index":1273,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["formatdateofbirth",{"_index":2405,"title":{},"body":{"classes/Person.html":{}}}],["formats",{"_index":2147,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["formcontrol",{"_index":1390,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["formerrors",{"_index":220,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["forms",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":523,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["formsubmitbar",{"_index":2100,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formsubmitbarcomponent",{"_index":908,"title":{"components/FormSubmitBarComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forroot",{"_index":506,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["forwardref",{"_index":936,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{}}}],["found",{"_index":3165,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["foundation",{"_index":3161,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fpc",{"_index":2808,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fpcare",{"_index":2202,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework",{"_index":2118,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["framework'},{'name",{"_index":910,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["framework.component",{"_index":2513,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["framework.component.html",{"_index":2213,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.scss",{"_index":2212,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts",{"_index":2201,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["framework.component.ts:25",{"_index":2216,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts:27",{"_index":2217,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework/page",{"_index":2200,"title":{},"body":{"components/PageFrameworkComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["friendly",{"_index":1703,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent",{"_index":1535,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.browsefileref.nativeelement",{"_index":1743,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.capturefileref.nativeelement",{"_index":1745,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.dropzone.nativeelement",{"_index":1730,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.imageplaceholderref.nativeelement",{"_index":1797,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.selectfilelabelref.nativeelement",{"_index":1799,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.uploadinstructionref.nativeelement",{"_index":1800,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["full",{"_index":2112,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{}}}],["fulladdress",{"_index":2124,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fullname",{"_index":2436,"title":{},"body":{"classes/Person.html":{}}}],["fullname.split",{"_index":2454,"title":{},"body":{"classes/Person.html":{}}}],["fullsizeviewmodal",{"_index":2556,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["function",{"_index":429,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["functionality",{"_index":202,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["functions",{"_index":2667,"title":{"miscellaneous/functions.html":{}},"body":{"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{}}}],["future",{"_index":1144,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["g",{"_index":3209,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["generally",{"_index":61,"title":{},"body":{"classes/AbstractForm.html":{}}}],["generate",{"_index":2884,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["generated",{"_index":3052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generation",{"_index":2816,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["geoaddressresult",{"_index":951,"title":{"interfaces/GeoAddressResult.html":{}},"body":{"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoder",{"_index":993,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["geocoderservice",{"_index":950,"title":{"injectables/GeocoderService.html":{}},"body":{"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["get(url",{"_index":124,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["getactiveindex",{"_index":2650,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getactiveindex(url",{"_index":2655,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getage",{"_index":2402,"title":{},"body":{"classes/Person.html":{}}}],["getapplicationid",{"_index":778,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getapplicationtype",{"_index":2043,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["getcontinuebutton",{"_index":221,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getdateofbirthshort",{"_index":2420,"title":{},"body":{"classes/Person.html":{}}}],["getformatdateofbirth",{"_index":2424,"title":{},"body":{"classes/Person.html":{}}}],["gethttpoptions",{"_index":158,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{}}}],["getname",{"_index":2427,"title":{},"body":{"classes/Person.html":{}}}],["getnamecomponent",{"_index":209,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponent(labelname",{"_index":257,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval",{"_index":210,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval(labelname",{"_index":274,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnumericvalue",{"_index":1123,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["getnumericvalue(value",{"_index":1150,"title":{},"body":{"components/DateComponent.html":{}}}],["getpackageversionfrompackagejson",{"_index":2985,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpackageversionfrompackagejson(tree",{"_index":3063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpasswordstrength",{"_index":2266,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["getpasswordstrength(password",{"_index":2295,"title":{},"body":{"components/PasswordComponent.html":{}}}],["getprogramname",{"_index":782,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["gets",{"_index":998,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":2759,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["gib",{"_index":1893,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gif",{"_index":1654,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gigantic",{"_index":1773,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["git",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["gitcommit",{"_index":2989,"title":{},"body":{"coverage.html":{}}}],["githooks",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":321,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"index.html":{}}}],["give",{"_index":1857,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["given",{"_index":277,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["gives",{"_index":574,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["go",{"_index":283,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{}}}],["goes",{"_index":3284,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["going",{"_index":1963,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["good",{"_index":2386,"title":{},"body":{"components/PasswordComponent.html":{},"additional-documentation/getting-started.html":{}}}],["governing",{"_index":3132,"title":{},"body":{"license.html":{}}}],["grab",{"_index":264,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["gracefully",{"_index":2081,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["gray",{"_index":1267,"title":{},"body":{"components/DateComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["group",{"_index":1459,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["groups",{"_index":1469,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["growing",{"_index":3105,"title":{},"body":{"index.html":{}}}],["guessable",{"_index":2297,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guesses",{"_index":2299,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guide",{"_index":3100,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":857,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ProvinceList.html":{}}}],["gutter",{"_index":2092,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["h5",{"_index":2223,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["half",{"_index":2704,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halfspace",{"_index":2706,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halt",{"_index":2718,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["handle",{"_index":1661,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["handleerror",{"_index":111,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["handleerror(error",{"_index":139,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["handlers",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":142,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["handling",{"_index":172,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["happen",{"_index":1475,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["happens",{"_index":58,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hardcoding",{"_index":287,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["hash",{"_index":1708,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hasn't",{"_index":1052,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["headers",{"_index":121,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["height",{"_index":883,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["heightfactor",{"_index":595,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["help",{"_index":3176,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["helper",{"_index":3192,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["here",{"_index":703,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"components/WizardProgressBarComponent.html":{}}}],["hex",{"_index":2629,"title":{},"body":{"components/ToggleComponent.html":{}}}],["hfactor",{"_index":600,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["hidden",{"_index":875,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hide",{"_index":48,"title":{},"body":{"classes/AbstractForm.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hidefullsizeview",{"_index":2559,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hidevalue",{"_index":2260,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["high",{"_index":3218,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["hit",{"_index":375,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["hooks",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":871,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["horizontally",{"_index":2662,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["host",{"_index":2725,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{}}}],["hostlistener",{"_index":1277,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hostlistener('input",{"_index":1279,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["hostlisteners",{"_index":1272,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["hover",{"_index":2593,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hsla(210",{"_index":2073,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["html",{"_index":891,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["html5",{"_index":1659,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlcanvaselement",{"_index":1876,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlimageelement",{"_index":1836,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlinputelement",{"_index":1282,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["http",{"_index":107,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{}}}],["http://www.apache.org/licenses/license",{"_index":3119,"title":{},"body":{"license.html":{}}}],["http_x_forwarded_host",{"_index":640,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpclient",{"_index":117,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["httpclientmodule",{"_index":522,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["httperrorresponse",{"_index":140,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpheaders",{"_index":119,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpoptions",{"_index":115,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpopts",{"_index":174,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpopts.params",{"_index":176,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpparams",{"_index":126,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpresponse",{"_index":472,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["https://bcgov.github.io/moh",{"_index":3087,"title":{},"body":{"index.html":{}}}],["https://geocoder.api.gov.bc.ca",{"_index":2126,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://geocoder.api.gov.bc.ca/addresses.json?minscore=50&maxresults=5&echo=false&brief=true&autocomplete=true&addressstring=784+hock",{"_index":2132,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/dropbox/zxcvbn",{"_index":2301,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/jvandemo/generator",{"_index":2324,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/kekeh/ngx",{"_index":1298,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["human",{"_index":260,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["icon",{"_index":2378,"title":{},"body":{"components/PasswordComponent.html":{}}}],["id",{"_index":535,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["idea",{"_index":324,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["identical",{"_index":1764,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["identifier",{"_index":445,"title":{},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ToggleComponent.html":{},"coverage.html":{}}}],["ids",{"_index":437,"title":{},"body":{"classes/Base.html":{}}}],["ie",{"_index":881,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ie10",{"_index":2727,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ie11",{"_index":2080,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["ignore",{"_index":2194,"title":{},"body":{"classes/MaskModel.html":{}}}],["ignored",{"_index":1844,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image",{"_index":530,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"dependencies.html":{}}}],["image.id",{"_index":1839,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.name",{"_index":1823,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalheight",{"_index":1866,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalwidth",{"_index":1864,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.src",{"_index":1873,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image/jpeg",{"_index":1869,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageexists",{"_index":1757,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile",{"_index":1837,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile.name",{"_index":1840,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist",{"_index":1623,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist.length",{"_index":1624,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist[i].id",{"_index":1626,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageobject",{"_index":2561,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageobject.name",{"_index":2588,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageplaceholderenterkeystream",{"_index":1796,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageplaceholderref",{"_index":1584,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror",{"_index":1831,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror.rawimagefile",{"_index":1984,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images",{"_index":1589,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["images.length",{"_index":1819,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images.map((image",{"_index":1822,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images/src/images",{"_index":2578,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["images/src/public_api",{"_index":1542,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageschange",{"_index":1591,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagesizeok",{"_index":1767,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror",{"_index":1922,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.commonimage",{"_index":1925,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.maxsizeallowed",{"_index":1924,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["img",{"_index":1834,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel",{"_index":1969,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onerror",{"_index":1978,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onload",{"_index":1975,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.src",{"_index":1971,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgelsarray",{"_index":1996,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["immediately",{"_index":2021,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["implement",{"_index":1949,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["implementation",{"_index":1300,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["implemented",{"_index":35,"title":{},"body":{"classes/AbstractForm.html":{}}}],["implements",{"_index":598,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{}}}],["implied",{"_index":3130,"title":{},"body":{"license.html":{}}}],["import",{"_index":79,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["importable",{"_index":3251,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["important",{"_index":1169,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["imported",{"_index":269,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["importing",{"_index":3141,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["imports",{"_index":511,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["impose",{"_index":1657,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["improve",{"_index":1860,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["imydate",{"_index":1347,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["include",{"_index":631,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["includes",{"_index":310,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["including",{"_index":1724,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["incorrect",{"_index":297,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["increasewidth",{"_index":2106,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["increment",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["indent",{"_index":2244,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["index.ts",{"_index":3185,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["indexable",{"_index":620,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["indicates",{"_index":2418,"title":{},"body":{"classes/Person.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":3267,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["ingxmydpoptions",{"_index":1381,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["inherit",{"_index":1242,"title":{},"body":{"components/DateComponent.html":{},"components/ToggleComponent.html":{}}}],["inherited",{"_index":724,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ToggleComponent.html":{}}}],["initialize",{"_index":2439,"title":{},"body":{"classes/Person.html":{}}}],["initialized",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":451,"title":{"injectables/CaptchaDataService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["injectables",{"_index":453,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["inner",{"_index":1260,"title":{},"body":{"components/DateComponent.html":{}}}],["input",{"_index":347,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["input(event",{"_index":1275,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.getattribute",{"_index":1284,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value",{"_index":1289,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value.trim",{"_index":1287,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input7",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["input:checked",{"_index":2627,"title":{},"body":{"components/ToggleComponent.html":{}}}],["input[type='file",{"_index":1608,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["input[type=number",{"_index":1259,"title":{},"body":{"components/DateComponent.html":{}}}],["input[type=password",{"_index":2392,"title":{},"body":{"components/PasswordComponent.html":{}}}],["input_name",{"_index":1614,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["inputs",{"_index":33,"title":{},"body":{"classes/AbstractForm.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{}}}],["inside",{"_index":839,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["install",{"_index":2844,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["installation",{"_index":3095,"title":{},"body":{"index.html":{}}}],["installed",{"_index":3140,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["installpackagejsondependencies",{"_index":2977,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":713,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["instead",{"_index":341,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["instruct",{"_index":1685,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["instructions",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["instructiontext",{"_index":1593,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["integration",{"_index":3170,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["interface",{"_index":592,"title":{"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":611,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["internal",{"_index":685,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["internet",{"_index":152,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["invalid",{"_index":577,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["invalidimagehanlder",{"_index":1964,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidimagehanlder(imagereaderror",{"_index":1985,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidvalue",{"_index":1203,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["invisible",{"_index":1329,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["invocation",{"_index":1048,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["irrelevant",{"_index":2149,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["is_showing_person",{"_index":843,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["iscanada",{"_index":1032,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["iscanadausa",{"_index":1034,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["iscomplete",{"_index":392,"title":{},"body":{"classes/Address.html":{}}}],["isdate",{"_index":1315,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdate(x",{"_index":1367,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdisabled",{"_index":2269,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["isdobempty",{"_index":2403,"title":{},"body":{"classes/Person.html":{}}}],["isloading",{"_index":2057,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["isn't",{"_index":1611,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isnan",{"_index":1233,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["ispdf",{"_index":1852,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isrequired",{"_index":986,"title":{},"body":{"interfaces/CountryList.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{}}}],["issue",{"_index":1848,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["issues",{"_index":519,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["it'll",{"_index":1431,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["it's",{"_index":268,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["item",{"_index":1069,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["items",{"_index":797,"title":{},"body":{"classes/Container.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{}}}],["iterate",{"_index":1101,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["itself",{"_index":1472,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["january",{"_index":1179,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["javascript",{"_index":408,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["jpeg",{"_index":1698,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpg",{"_index":1653,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["js",{"_index":3017,"title":{},"body":{"dependencies.html":{},"additional-documentation/local-development/schematics.html":{}}}],["js/files/version.generated.ts",{"_index":2987,"title":{},"body":{"coverage.html":{}}}],["js/index.ts",{"_index":2991,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["jsdate",{"_index":1426,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["jsdocs",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":732,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["json.stringify(error",{"_index":1830,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["july",{"_index":1184,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["june",{"_index":1183,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["justify",{"_index":865,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["keep",{"_index":447,"title":{},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["key",{"_index":376,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["keyboard",{"_index":1084,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["keyboardevent",{"_index":1081,"title":{},"body":{"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{}}}],["keys",{"_index":3066,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyup",{"_index":1798,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kib",{"_index":1891,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kind",{"_index":3128,"title":{},"body":{"license.html":{}}}],["know",{"_index":3157,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["known",{"_index":518,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["label",{"_index":262,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ToggleComponent.html":{}}}],["label.getattribute('for",{"_index":361,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["label::after",{"_index":2626,"title":{},"body":{"components/ToggleComponent.html":{}}}],["label::before",{"_index":2622,"title":{},"body":{"components/ToggleComponent.html":{}}}],["labelforid",{"_index":331,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelid",{"_index":249,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname",{"_index":271,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname)).first",{"_index":359,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelrefname",{"_index":252,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labeltext",{"_index":1325,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["lang",{"_index":1573,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["language",{"_index":3131,"title":{},"body":{"license.html":{}}}],["largely",{"_index":1295,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["last",{"_index":2430,"title":{},"body":{"classes/Person.html":{}}}],["lastname",{"_index":2400,"title":{},"body":{"classes/Person.html":{}}}],["later",{"_index":1665,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["law",{"_index":3121,"title":{},"body":{"license.html":{}}}],["layout",{"_index":2113,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["layouts",{"_index":1477,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["leads",{"_index":292,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["left",{"_index":834,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["legend",{"_index":491,"title":{},"body":{"modules/CaptchaModule.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"overview.html":{}}}],["length",{"_index":1569,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{}}}],["lengths",{"_index":967,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["letter",{"_index":2192,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["letters",{"_index":2187,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{}}}],["level",{"_index":691,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["levelthen",{"_index":3194,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["li:before",{"_index":2243,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["lib",{"_index":207,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["lib/captcha",{"_index":509,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["lib/e2e",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["lib/images",{"_index":3172,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/images';this",{"_index":3175,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/models",{"_index":2832,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services",{"_index":2803,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services';setting",{"_index":3160,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/services/geocoder.service';if",{"_index":3156,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["libif",{"_index":3269,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["library",{"_index":1303,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["library/issues/221#issuecomment",{"_index":2325,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["libsetup",{"_index":3097,"title":{},"body":{"index.html":{}}}],["license",{"_index":2955,"title":{"license.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["license/index.ts",{"_index":2952,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["licensed",{"_index":3115,"title":{},"body":{"license.html":{}}}],["likes",{"_index":3155,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["limitations",{"_index":3134,"title":{},"body":{"license.html":{}}}],["line",{"_index":1456,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["link",{"_index":2895,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linking",{"_index":3200,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linknote",{"_index":3280,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["links",{"_index":288,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["list",{"_index":994,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageSectionComponent.html":{},"interfaces/ProvinceList.html":{}}}],["listed",{"_index":3152,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["literal",{"_index":163,"title":{},"body":{"classes/AbstractHttpService.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["literals",{"_index":748,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["live",{"_index":3260,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["load",{"_index":1559,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["loaded",{"_index":1053,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["loadimage",{"_index":1557,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["loadimage_",{"_index":1562,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loading",{"_index":12,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["local",{"_index":2889,"title":{"additional-documentation/local-development.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["locality,street,block,intersection",{"_index":2143,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["locally",{"_index":3197,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["localstorage",{"_index":1725,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["location",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["lodaing",{"_index":3220,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["log",{"_index":649,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{}}}],["log(message",{"_index":762,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logentry",{"_index":1549,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logerror",{"_index":652,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logerror(errormessage",{"_index":764,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logged",{"_index":623,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logger",{"_index":630,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logging",{"_index":189,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["logging/log",{"_index":1550,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loghttperror",{"_index":754,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["loghttperror(error",{"_index":679,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["loghttprequeststoconsole",{"_index":110,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["logs",{"_index":656,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logservice",{"_index":1601,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logsource",{"_index":638,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["look",{"_index":3268,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["looking",{"_index":2157,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["lookup",{"_index":326,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{}}}],["lookup(address",{"_index":2133,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["losing",{"_index":675,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lost",{"_index":151,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["lower",{"_index":802,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["machine",{"_index":3213,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["made",{"_index":2807,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["main",{"_index":655,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["make",{"_index":136,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["makes",{"_index":129,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["making",{"_index":3226,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["malformed",{"_index":1943,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manage",{"_index":1706,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manually",{"_index":1435,"title":{},"body":{"components/DatepickerComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["map",{"_index":1537,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{}}}],["map((ev",{"_index":2687,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["map((event",{"_index":1805,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["map(prov",{"_index":1055,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["map(x",{"_index":810,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["map.js",{"_index":3196,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["maps",{"_index":1346,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["march",{"_index":1181,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["margin",{"_index":1251,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["margins",{"_index":2115,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["markallinputstouched",{"_index":18,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markastouched",{"_index":69,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markdown",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["markersize",{"_index":2731,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["markforcheck",{"_index":1523,"title":{},"body":{"components/DropdownComponent.html":{}}}],["mask",{"_index":2177,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["maskmodel",{"_index":2175,"title":{"classes/MaskModel.html":{}},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["maskmodel:11",{"_index":2485,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["maskmodel:12",{"_index":2486,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["maskmodel:14",{"_index":2483,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["maskmodel:15",{"_index":2484,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["maskmodel:17",{"_index":2494,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["maskmodel:18",{"_index":2495,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["maskmodel:27",{"_index":2489,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["maskmodel:34",{"_index":2488,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["match",{"_index":2089,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{}}}],["matching",{"_index":100,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["matchprecisionnot",{"_index":2150,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["math",{"_index":2744,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.abs(target.nativeelement.offsetleft",{"_index":2721,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.ceil",{"_index":2461,"title":{},"body":{"classes/Person.html":{}}}],["math.ceil(math.random()*100",{"_index":1861,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["math.round(((numerator",{"_index":2707,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["max",{"_index":1247,"title":{},"body":{"components/DateComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{}}}],["maxheight",{"_index":1935,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maximum",{"_index":1688,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxlen",{"_index":1283,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["maxlength",{"_index":1285,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["maxretry",{"_index":1940,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxsizeallowed",{"_index":571,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["maxsizebytes",{"_index":1917,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxwidth",{"_index":1932,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mb",{"_index":1779,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["means",{"_index":1335,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["meant",{"_index":2102,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["media",{"_index":859,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["meet",{"_index":2332,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["menu",{"_index":3159,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["merge",{"_index":1536,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["merge(merge(browsefilestream).pipe",{"_index":1746,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mess",{"_index":2743,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["message",{"_index":650,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["messages",{"_index":576,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["meta",{"_index":657,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["metadata",{"_index":846,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{}}}],["method",{"_index":184,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["mib",{"_index":1892,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["middle",{"_index":2207,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{}}}],["middlename",{"_index":2401,"title":{},"body":{"classes/Person.html":{}}}],["mime",{"_index":1652,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["min",{"_index":2095,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mini",{"_index":1334,"title":{},"body":{"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":1440,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["minimum",{"_index":2247,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlen",{"_index":2270,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlength",{"_index":2329,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg1",{"_index":2261,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg2",{"_index":2262,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minor",{"_index":322,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["mirror",{"_index":325,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["miscellaneous",{"_index":3026,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missing",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["mistakes",{"_index":3101,"title":{},"body":{"index.html":{}}}],["mm').daysinmonth",{"_index":1499,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["mobile",{"_index":2661,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["modal",{"_index":1478,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["modal.component.html",{"_index":559,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["modaldirective",{"_index":1531,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["modalmodule",{"_index":2518,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modalmodule.forroot",{"_index":2544,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["model",{"_index":1310,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"additional-documentation/getting-started.html":{}}}],["model/application",{"_index":1555,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["model/application.model",{"_index":1553,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["models",{"_index":3144,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["models/src/address.model",{"_index":942,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["models/src/base",{"_index":949,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"components/ToggleComponent.html":{}}}],["models/src/container",{"_index":2678,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["models/src/mask.model",{"_index":2496,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["models/src/simple",{"_index":1196,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["modifyjson",{"_index":2957,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modifyjson(host",{"_index":3085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":488,"title":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["modules",{"_index":490,"title":{"modules.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["modulewithproviders",{"_index":508,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["moh",{"_index":206,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["mohstart",{"_index":2978,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mohstart(_options",{"_index":3075,"title":{},"body":{"miscellaneous/functions.html":{}}}],["moment",{"_index":441,"title":{},"body":{"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"dependencies.html":{}}}],["moment().date",{"_index":1211,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment().get",{"_index":2751,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["moment().month",{"_index":1209,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment().toisostring",{"_index":735,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["moment().year",{"_index":1213,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment(str",{"_index":1497,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["moment_",{"_index":625,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["momentjs",{"_index":3246,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["month",{"_index":1162,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{}}}],["monthlist",{"_index":1120,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthref",{"_index":1121,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthselect",{"_index":1246,"title":{},"body":{"components/DateComponent.html":{}}}],["more",{"_index":293,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["mostly",{"_index":1474,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["move",{"_index":2831,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["moves",{"_index":2376,"title":{},"body":{"components/PasswordComponent.html":{}}}],["moz",{"_index":1265,"title":{},"body":{"components/DateComponent.html":{}}}],["ms",{"_index":2393,"title":{},"body":{"components/PasswordComponent.html":{}}}],["msg",{"_index":696,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["msp",{"_index":2001,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspdataservice",{"_index":1545,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperror",{"_index":2017,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperrornum",{"_index":2016,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage",{"_index":1756,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.attachmentorder",{"_index":1862,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.contenttype",{"_index":1868,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.error",{"_index":2013,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.filecontent",{"_index":1912,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.id",{"_index":1914,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.name",{"_index":1856,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalheight",{"_index":1865,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalwidth",{"_index":1863,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.size",{"_index":1880,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizetxt",{"_index":1908,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizeunit",{"_index":1905,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.uuid",{"_index":2032,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimagefile",{"_index":2015,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimages",{"_index":1812,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msplogservice",{"_index":1543,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["multi",{"_index":965,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{}}}],["multiple",{"_index":747,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"additional-documentation/local-development/schematics.html":{}}}],["multiples",{"_index":1888,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mutually",{"_index":3033,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mydatepicker",{"_index":1297,"title":{},"body":{"components/DatepickerComponent.html":{},"modules/SharedCoreModule.html":{}}}],["myriadwebprottf_base64",{"_index":2961,"title":{},"body":{"coverage.html":{}}}],["n",{"_index":1648,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["name=\"${labelrefname}\"]`)).click",{"_index":382,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name=schematic",{"_index":3216,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["name^=\"${labelid}\"]`)).sendkeys(text",{"_index":379,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["namecomponent",{"_index":213,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["names",{"_index":1859,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{}}}],["names.length",{"_index":2456,"title":{},"body":{"classes/Person.html":{}}}],["names[0",{"_index":2455,"title":{},"body":{"classes/Person.html":{}}}],["names[1",{"_index":2457,"title":{},"body":{"classes/Person.html":{}}}],["names[2",{"_index":2459,"title":{},"body":{"classes/Person.html":{}}}],["napprox",{"_index":1900,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(0",{"_index":1904,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(3",{"_index":1902,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["native",{"_index":407,"title":{},"body":{"classes/Address.html":{},"components/WizardProgressBarComponent.html":{}}}],["natural",{"_index":1676,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["naturalheight",{"_index":536,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["naturalwidth",{"_index":537,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["nav",{"_index":887,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["navigate",{"_index":19,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["navigate(url",{"_index":70,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigates",{"_index":73,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigateto",{"_index":223,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["navigating",{"_index":62,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigationend",{"_index":2677,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["nbytes",{"_index":1884,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["necessary",{"_index":237,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["need",{"_index":316,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["negative",{"_index":2114,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["nested",{"_index":2110,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["nesting",{"_index":666,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["network",{"_index":676,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{}}}],["never",{"_index":707,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["new",{"_index":604,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["newurl",{"_index":648,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["next",{"_index":234,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["nextpagenumber",{"_index":1838,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ng",{"_index":308,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["ng_validators",{"_index":1488,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["ng_value_accessor",{"_index":941,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{}}}],["ngaftercontentinit",{"_index":1795,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ngform",{"_index":36,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ngforms",{"_index":3230,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["ngmodel",{"_index":1176,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["ngmodelchange",{"_index":1271,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["ngmodule",{"_index":510,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["ngonchanges",{"_index":1316,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{}}}],["ngonchanges(changes",{"_index":1037,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{}}}],["ngondestroy",{"_index":2651,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ngoninit",{"_index":853,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ngselect",{"_index":337,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ngselectmodule",{"_index":2538,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngsubmit",{"_index":2103,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ngx",{"_index":948,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["ngxdp",{"_index":1311,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ngxmydatepickerdirective",{"_index":1387,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ngxmydatepickermodule",{"_index":2529,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngxmydatepickermodule.forroot",{"_index":2543,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngzone",{"_index":1529,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nice",{"_index":1462,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["nmultiple",{"_index":1899,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["node",{"_index":3089,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":3257,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["node_modules/@types",{"_index":3224,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["nofuturedatesallowed",{"_index":1202,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["noidimage",{"_index":1575,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["non",{"_index":1430,"title":{},"body":{"components/DatepickerComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nonce",{"_index":466,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["none",{"_index":1264,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{}}}],["nopastdatesallowed",{"_index":1201,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["not(.active",{"_index":2736,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["not(.active):before",{"_index":2739,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["not(.hide",{"_index":1458,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["note",{"_index":285,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nothing",{"_index":1100,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["notify",{"_index":1158,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{}}}],["notips",{"_index":2238,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["november",{"_index":1188,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["now",{"_index":319,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["nowrap",{"_index":864,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["npm",{"_index":438,"title":{},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["null",{"_index":641,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["null/undefined",{"_index":2449,"title":{},"body":{"classes/Person.html":{}}}],["nulls",{"_index":2440,"title":{},"body":{"classes/Person.html":{}}}],["number",{"_index":542,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["numerator",{"_index":2699,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["numeric",{"_index":1153,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["numpages",{"_index":2004,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["o",{"_index":1772,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obj",{"_index":1379,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["obj.features.map(feature",{"_index":2152,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["object",{"_index":160,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{}}}],["object.city",{"_index":431,"title":{},"body":{"classes/Address.html":{}}}],["object.country",{"_index":432,"title":{},"body":{"classes/Address.html":{}}}],["object.dateofbirth.day",{"_index":2467,"title":{},"body":{"classes/Person.html":{}}}],["object.dateofbirth.month",{"_index":2466,"title":{},"body":{"classes/Person.html":{}}}],["object.dateofbirth.year",{"_index":2468,"title":{},"body":{"classes/Person.html":{}}}],["object.firstname",{"_index":2463,"title":{},"body":{"classes/Person.html":{}}}],["object.keys",{"_index":2446,"title":{},"body":{"classes/Person.html":{}}}],["object.keys(this.form.form.controls).foreach(x",{"_index":97,"title":{},"body":{"classes/AbstractForm.html":{}}}],["object.lastname",{"_index":2465,"title":{},"body":{"classes/Person.html":{}}}],["object.middlename",{"_index":2464,"title":{},"body":{"classes/Person.html":{}}}],["object.postal",{"_index":433,"title":{},"body":{"classes/Address.html":{}}}],["object.province",{"_index":434,"title":{},"body":{"classes/Address.html":{}}}],["object.street",{"_index":430,"title":{},"body":{"classes/Address.html":{}}}],["objectid",{"_index":442,"title":{},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ToggleComponent.html":{}}}],["objects",{"_index":3252,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["observable",{"_index":138,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{}}}],["observable.pipe(catcherror(this.handleerror.bind(this",{"_index":185,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observable.pipe(tap",{"_index":190,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observe",{"_index":483,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["observer",{"_index":170,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["observer.error(error",{"_index":1846,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagereaderror",{"_index":1833,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagetoobigerror",{"_index":1926,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.next(mspimage",{"_index":1929,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obtain",{"_index":3118,"title":{},"body":{"license.html":{}}}],["occured",{"_index":716,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["october",{"_index":1187,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["of30",{"_index":1811,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oh",{"_index":3278,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["ok",{"_index":2388,"title":{},"body":{"components/PasswordComponent.html":{}}}],["older",{"_index":3091,"title":{},"body":{"index.html":{}}}],["omit",{"_index":417,"title":{},"body":{"classes/Address.html":{}}}],["onblur",{"_index":2354,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["once",{"_index":1701,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["onchanges",{"_index":938,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{}}}],["onclick",{"_index":2055,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["onclick($event",{"_index":2066,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["ondatechanged",{"_index":1317,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ondatechanged(event",{"_index":1373,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ondestroy",{"_index":2643,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["one",{"_index":235,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["onerror(err",{"_index":1097,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["ongoing",{"_index":1722,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oninit",{"_index":845,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["oninput",{"_index":1280,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["oninputblur",{"_index":2267,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oninputblur($event",{"_index":2304,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onkeyup(event",{"_index":1080,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["onload",{"_index":1973,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["onlyfuturedates",{"_index":1326,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["onmodelchange",{"_index":990,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["onpaste",{"_index":2359,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onselect(event",{"_index":1105,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["ontouch",{"_index":991,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["onupdate",{"_index":2178,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{}}}],["onupdate(value",{"_index":2183,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{}}}],["opacity",{"_index":2737,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["open",{"_index":1660,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["opened/read",{"_index":1980,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["opens",{"_index":368,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["openshift",{"_index":517,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["operate",{"_index":3261,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["operation",{"_index":1693,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["optimizing",{"_index":2682,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["option",{"_index":332,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/ProvinceList.html":{}}}],["option[selected",{"_index":1266,"title":{},"body":{"components/DateComponent.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":186,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["options",{"_index":133,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["optiontext",{"_index":305,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["optiontext)).click",{"_index":371,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["order",{"_index":1172,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["orient",{"_index":1690,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["orientation",{"_index":1938,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["others",{"_index":312,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["otherwise",{"_index":1223,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["out",{"_index":404,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["outer",{"_index":1262,"title":{},"body":{"components/DateComponent.html":{}}}],["output",{"_index":934,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["outputs",{"_index":1131,"title":{},"body":{"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{}}}],["outside",{"_index":2666,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["over",{"_index":1102,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"miscellaneous/functions.html":{}}}],["overflow",{"_index":873,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["overlap",{"_index":2087,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["override",{"_index":279,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["overridesscss",{"_index":2970,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":3136,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":236,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/functions.html":{}}}],["overwritefile",{"_index":2979,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["overwritefile(host",{"_index":3076,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overwritten",{"_index":246,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["p",{"_index":2225,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["package",{"_index":439,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["package.json",{"_index":2819,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["package.jsoncreating",{"_index":3205,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["packaging",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":1463,"title":{},"body":{"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["page",{"_index":64,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["page.path",{"_index":817,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["page.ts",{"_index":199,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["page.ts:102",{"_index":335,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:113",{"_index":345,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:117",{"_index":248,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:121",{"_index":251,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:13",{"_index":231,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:18",{"_index":240,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:32",{"_index":278,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:34",{"_index":254,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:38",{"_index":256,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:43",{"_index":301,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:47",{"_index":253,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:60",{"_index":258,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:72",{"_index":275,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:76",{"_index":255,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:91",{"_index":306,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["pageframework",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["pageframeworkcomponent",{"_index":909,"title":{"components/PageFrameworkComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagenumber",{"_index":1827,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pageroutes",{"_index":808,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pageroutes.map(page",{"_index":816,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pages",{"_index":2203,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["pagesectioncomponent",{"_index":911,"title":{"components/PageSectionComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pains",{"_index":3106,"title":{},"body":{"index.html":{}}}],["param",{"_index":169,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":194,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["params).pipe(map(this.processresponse",{"_index":2146,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["parent",{"_index":958,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{}}}],["parents",{"_index":446,"title":{},"body":{"classes/Base.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ToggleComponent.html":{}}}],["parsed",{"_index":1230,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["parseint",{"_index":1231,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["parseint(scaledwidthstring",{"_index":2586,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["parsing",{"_index":728,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["parts",{"_index":2437,"title":{},"body":{"classes/Person.html":{},"additional-documentation/local-development/components.html":{}}}],["pass",{"_index":299,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"directives/YearValidateDirective.html":{}}}],["passed",{"_index":51,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/ProvinceList.html":{}}}],["passes",{"_index":2308,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passing",{"_index":2327,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password",{"_index":580,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["password'},{'name",{"_index":914,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["password.component.html",{"_index":2257,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password.component.scss",{"_index":2256,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password_",{"_index":2284,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordchange",{"_index":2255,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordcomponent",{"_index":913,"title":{"components/PasswordComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["passworderrormsg",{"_index":2276,"title":{"interfaces/PasswordErrorMsg.html":{}},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["past",{"_index":1145,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["pasting",{"_index":2357,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["path",{"_index":3238,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["paths",{"_index":2898,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["payload",{"_index":475,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["payload.translation",{"_index":485,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["pcformat",{"_index":2474,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["pdf",{"_index":578,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["pdf.good",{"_index":581,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["pdfdoc.numpages",{"_index":2005,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile",{"_index":1990,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile.name",{"_index":1824,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs",{"_index":1533,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["pdfjs.disablestream",{"_index":1993,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.disableworker",{"_index":1992,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.getdocument((docinitparams",{"_index":2002,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs_",{"_index":1566,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsstatic",{"_index":1532,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfnotsupported",{"_index":567,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pdfscalefactor",{"_index":1988,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["performance",{"_index":1049,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/ProvinceList.html":{}}}],["permissions",{"_index":3133,"title":{},"body":{"license.html":{}}}],["person",{"_index":1552,"title":{"classes/Person.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"coverage.html":{},"index.html":{}}}],["person's",{"_index":2438,"title":{},"body":{"classes/Person.html":{}}}],["person.model.ts",{"_index":2550,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["personal",{"_index":804,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pharmacare's",{"_index":419,"title":{},"body":{"classes/Address.html":{}}}],["pib",{"_index":1895,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe",{"_index":1804,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{}}}],["pipe(filter((evt",{"_index":1801,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(retrywhen(this.retrystrategy(32",{"_index":1849,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pixel",{"_index":1695,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pkg",{"_index":3061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholder",{"_index":1507,"title":{},"body":{"components/DropdownComponent.html":{},"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["play",{"_index":1461,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["please",{"_index":1594,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"index.html":{}}}],["png",{"_index":1655,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["point",{"_index":280,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"miscellaneous/enumerations.html":{}}}],["pointer",{"_index":2620,"title":{},"body":{"components/ToggleComponent.html":{}}}],["points",{"_index":3151,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["pollyfills.ts",{"_index":3232,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["poor",{"_index":1299,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["populated",{"_index":1974,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["porting",{"_index":2000,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["positiion",{"_index":2078,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["position",{"_index":2085,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["positioning",{"_index":2084,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["post",{"_index":112,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["post(url",{"_index":153,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["postal",{"_index":389,"title":{},"body":{"classes/Address.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["postalcode",{"_index":1025,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{}}}],["postalcode(value",{"_index":1030,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["postalcodecomponent",{"_index":915,"title":{"components/PostalCodeComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["postalref",{"_index":985,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["potential",{"_index":1847,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["potentially",{"_index":3198,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["power",{"_index":1810,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pr",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["pre",{"_index":3070,"title":{},"body":{"miscellaneous/functions.html":{}}}],["preceding",{"_index":1765,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["present",{"_index":2252,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["preservesymlinks",{"_index":3249,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["prevent",{"_index":2356,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preversion",{"_index":3233,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["previously",{"_index":1870,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["primarily",{"_index":2660,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["primary",{"_index":2628,"title":{},"body":{"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["prime",{"_index":270,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["print",{"_index":413,"title":{},"body":{"classes/Address.html":{}}}],["printed",{"_index":410,"title":{},"body":{"classes/Address.html":{}}}],["prior",{"_index":3199,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["priority",{"_index":2591,"title":{},"body":{"components/ThumbnailComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["private",{"_index":481,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["probably",{"_index":1981,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["process",{"_index":1494,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["processing",{"_index":1644,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["processresponse",{"_index":2166,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["processresponse(obj",{"_index":2151,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["program",{"_index":632,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["programname",{"_index":645,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["progress",{"_index":814,"title":{},"body":{"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["progressbar",{"_index":2729,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["progressbarmodule",{"_index":2517,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressbarmodule.forroot",{"_index":2542,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressevent",{"_index":1966,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progressevt",{"_index":1965,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progresssteps",{"_index":792,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["project",{"_index":386,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects",{"_index":3250,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects/.../captcha.component.ts",{"_index":3029,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datepicker.component.ts",{"_index":3031,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../images.ts",{"_index":3030,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../index.ts",{"_index":3043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../json.ts",{"_index":3045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../logger.service.ts",{"_index":3032,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../package",{"_index":3044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/common/captcha/src/captcha",{"_index":454,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["projects/common/captcha/src/captcha.component.ts",{"_index":2914,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha.module.ts",{"_index":504,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/captcha/src/captcha.module.ts:27",{"_index":507,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/e2e/src/abstract",{"_index":197,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["projects/common/images/src/images.ts",{"_index":529,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/images/src/images.ts:16",{"_index":608,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/images/src/images.ts:17",{"_index":610,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/images/src/images.ts:18",{"_index":607,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/images/src/images.ts:20",{"_index":609,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/images/src/images.ts:29",{"_index":541,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:35",{"_index":547,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:36",{"_index":544,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:38",{"_index":552,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:39",{"_index":554,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:40",{"_index":553,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:41",{"_index":550,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:42",{"_index":551,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:43",{"_index":549,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:46",{"_index":548,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:48",{"_index":546,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:49",{"_index":543,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/images/src/images.ts:56",{"_index":613,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{}}}],["projects/common/images/src/images.ts:60",{"_index":615,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/images/src/images.ts:61",{"_index":614,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/images/src/images.ts:68",{"_index":616,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/components/address/address.component.ts",{"_index":931,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["projects/common/lib/components/core",{"_index":826,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date",{"_index":1268,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts",{"_index":1116,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts:104",{"_index":1164,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:120",{"_index":1166,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:132",{"_index":1151,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:34",{"_index":1192,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:35",{"_index":1178,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:36",{"_index":1194,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:38",{"_index":1148,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:39",{"_index":1143,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:40",{"_index":1139,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:41",{"_index":1142,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:42",{"_index":1138,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:44",{"_index":1146,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:45",{"_index":1141,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:47",{"_index":1149,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:49",{"_index":1190,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:52",{"_index":1136,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:59",{"_index":1154,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:81",{"_index":1161,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:93",{"_index":1156,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/day",{"_index":1485,"title":{},"body":{"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/year",{"_index":2746,"title":{},"body":{"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts",{"_index":1293,"title":{},"body":{"components/DatepickerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:103",{"_index":1366,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:111",{"_index":1368,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:116",{"_index":1372,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:167",{"_index":1370,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:177",{"_index":1374,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:186",{"_index":1362,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:194",{"_index":1375,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:198",{"_index":1376,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:202",{"_index":1378,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:36",{"_index":1358,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:37",{"_index":1338,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:38",{"_index":1361,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:39",{"_index":1342,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:40",{"_index":1350,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:42",{"_index":1356,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:46",{"_index":1348,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:49",{"_index":1343,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:52",{"_index":1351,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:67",{"_index":1330,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:72",{"_index":1340,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:74",{"_index":1349,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:78",{"_index":1385,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:81",{"_index":1384,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:83",{"_index":1389,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:86",{"_index":1382,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:88",{"_index":1380,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:89",{"_index":1327,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:95",{"_index":1364,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts",{"_index":1501,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:17",{"_index":1522,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:19",{"_index":1512,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:20",{"_index":1513,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:21",{"_index":1514,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:22",{"_index":1511,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:23",{"_index":1509,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:24",{"_index":1510,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:25",{"_index":1515,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:27",{"_index":1521,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:28",{"_index":1508,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:34",{"_index":1516,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:37",{"_index":1520,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:42",{"_index":1517,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:46",{"_index":1518,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/file",{"_index":1525,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/form",{"_index":2050,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/page",{"_index":2199,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts",{"_index":2245,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts:114",{"_index":2302,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:127",{"_index":2307,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:131",{"_index":2305,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:138",{"_index":2294,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:153",{"_index":2296,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:54",{"_index":2280,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:55",{"_index":2279,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:56",{"_index":2278,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:57",{"_index":2287,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:58",{"_index":2289,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:59",{"_index":2283,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:60",{"_index":2282,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:61",{"_index":2277,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:62",{"_index":2290,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:63",{"_index":2286,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:67",{"_index":2292,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:68",{"_index":2291,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:71",{"_index":2313,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:72",{"_index":2316,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:73",{"_index":2318,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:75",{"_index":2312,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:78",{"_index":2317,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:79",{"_index":2314,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:80",{"_index":2315,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:81",{"_index":2275,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:88",{"_index":2303,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/postal",{"_index":2469,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts",{"_index":2553,"title":{},"body":{"components/ThumbnailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:12",{"_index":2566,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:13",{"_index":2567,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:14",{"_index":2568,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:15",{"_index":2575,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:17",{"_index":2565,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:22",{"_index":2577,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:23",{"_index":2572,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:41",{"_index":2570,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:47",{"_index":2573,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:52",{"_index":2571,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts",{"_index":2607,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:11",{"_index":2613,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:12",{"_index":2614,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:13",{"_index":2612,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:19",{"_index":2615,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/wizard",{"_index":2642,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/shared",{"_index":2506,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["projects/common/models/src/abstract",{"_index":6,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["projects/common/models/src/address.model.ts",{"_index":384,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["projects/common/models/src/address.model.ts:10",{"_index":395,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/models/src/address.model.ts:11",{"_index":397,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/models/src/address.model.ts:12",{"_index":394,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/models/src/address.model.ts:19",{"_index":406,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/models/src/address.model.ts:27",{"_index":401,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/models/src/address.model.ts:34",{"_index":400,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/models/src/address.model.ts:8",{"_index":398,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/models/src/address.model.ts:9",{"_index":396,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/models/src/base.ts",{"_index":436,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["projects/common/models/src/base.ts:11",{"_index":443,"title":{},"body":{"classes/Base.html":{}}}],["projects/common/models/src/container.ts",{"_index":788,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["projects/common/models/src/container.ts:12",{"_index":796,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/models/src/container.ts:18",{"_index":800,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/models/src/container.ts:22",{"_index":807,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/models/src/mask.model.ts",{"_index":2176,"title":{},"body":{"classes/MaskModel.html":{},"coverage.html":{}}}],["projects/common/models/src/mask.model.ts:11",{"_index":2190,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/models/src/mask.model.ts:12",{"_index":2191,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/models/src/mask.model.ts:14",{"_index":2188,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/models/src/mask.model.ts:15",{"_index":2189,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/models/src/mask.model.ts:17",{"_index":2182,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/models/src/mask.model.ts:18",{"_index":2181,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/models/src/mask.model.ts:27",{"_index":2186,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/models/src/mask.model.ts:34",{"_index":2184,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/models/src/person.model.ts",{"_index":2396,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["projects/common/models/src/person.model.ts:14",{"_index":2409,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:15",{"_index":2411,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:16",{"_index":2410,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:19",{"_index":2407,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:22",{"_index":2406,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:25",{"_index":2421,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:35",{"_index":2425,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:45",{"_index":2417,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:53",{"_index":2428,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:71",{"_index":2433,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:85",{"_index":2413,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/person.model.ts:91",{"_index":2412,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/models/src/simple",{"_index":2546,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["projects/common/package.json",{"_index":3265,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics",{"_index":3187,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["projects/common/schematics/package.json",{"_index":3266,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics/src/copy",{"_index":2951,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/helpers/json.ts",{"_index":2956,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/moh",{"_index":2959,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/version",{"_index":2986,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/services/src/abstract",{"_index":103,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["projects/common/services/src/geocoder.service.ts",{"_index":2123,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["projects/common/services/src/geocoder.service.ts:22",{"_index":2171,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/services/src/geocoder.service.ts:23",{"_index":2173,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/services/src/geocoder.service.ts:24",{"_index":2172,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/services/src/geocoder.service.ts:28",{"_index":2174,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/services/src/geocoder.service.ts:29",{"_index":2167,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/services/src/geocoder.service.ts:37",{"_index":2169,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/services/src/geocoder.service.ts:58",{"_index":2170,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/services/src/geocoder.service.ts:76",{"_index":2168,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/services/src/logger.service.ts",{"_index":618,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/services/src/logger.service.ts:110",{"_index":760,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:129",{"_index":761,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:147",{"_index":786,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:154",{"_index":769,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:158",{"_index":767,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:166",{"_index":768,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:179",{"_index":621,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["projects/common/services/src/logger.service.ts:23",{"_index":775,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:29",{"_index":757,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:35",{"_index":781,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:39",{"_index":779,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:43",{"_index":785,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:47",{"_index":783,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:51",{"_index":770,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:55",{"_index":763,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:59",{"_index":765,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:79",{"_index":758,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:84",{"_index":759,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/services/src/logger.service.ts:93",{"_index":766,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/src/public_api.ts",{"_index":3290,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/test.ts",{"_index":3003,"title":{},"body":{"coverage.html":{}}}],["projectversion",{"_index":2990,"title":{},"body":{"coverage.html":{}}}],["promise",{"_index":273,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["proper",{"_index":575,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["properly",{"_index":2111,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["properties/values",{"_index":750,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["property",{"_index":660,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["props",{"_index":2153,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress",{"_index":2162,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.indexof",{"_index":2160,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.slice(0",{"_index":2161,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.localityname",{"_index":2155,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{}}}],["protractor",{"_index":350,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["prov",{"_index":1057,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["prov.country",{"_index":1056,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["prov_maxlen",{"_index":970,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["provide",{"_index":963,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["provided",{"_index":372,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["providedin",{"_index":626,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["providers",{"_index":494,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"directives/YearValidateDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["provides",{"_index":200,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{}}}],["province",{"_index":314,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["province/country",{"_index":418,"title":{},"body":{"classes/Address.html":{}}}],["provincecode",{"_index":954,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["provincelist",{"_index":953,"title":{"interfaces/ProvinceList.html":{}},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["provision",{"_index":842,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["provlist",{"_index":1000,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["provobj",{"_index":1059,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["provobj.provincecode",{"_index":1066,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["provref",{"_index":979,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["pswdfeedback",{"_index":2361,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdfeedback.score",{"_index":2362,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdstrength",{"_index":2263,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["public",{"_index":214,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["publish",{"_index":3276,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["publishing",{"_index":3178,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["pull",{"_index":3102,"title":{},"body":{"index.html":{}}}],["pure",{"_index":3168,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["purposes",{"_index":2426,"title":{},"body":{"classes/Person.html":{}}}],["pwdcriteria",{"_index":2271,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["quality",{"_index":1699,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["querylist",{"_index":2672,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["queryparams",{"_index":125,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["question",{"_index":2105,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["r='3.5",{"_index":2640,"title":{},"body":{"components/ToggleComponent.html":{}}}],["radio",{"_index":2621,"title":{},"body":{"components/ToggleComponent.html":{}}}],["radius",{"_index":889,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ran",{"_index":3253,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["range",{"_index":2040,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ratio",{"_index":1696,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rawimagefile",{"_index":570,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["re",{"_index":957,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["reach",{"_index":1961,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reactive",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["read",{"_index":1663,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"index.html":{}}}],["readable",{"_index":261,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["reader",{"_index":1853,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.onload",{"_index":1910,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(blob",{"_index":1930,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(imagefile",{"_index":1986,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.result",{"_index":1972,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["readers",{"_index":243,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["readme",{"_index":503,"title":{},"body":{"modules/CaptchaModule.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["readpdf(pdffile",{"_index":1987,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reason",{"_index":1091,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{}}}],["receiving",{"_index":678,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["recommend",{"_index":2253,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["redable",{"_index":272,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["reduced",{"_index":1359,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ref",{"_index":1874,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["refactor",{"_index":1439,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{}}}],["reference",{"_index":2796,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["reflect",{"_index":378,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["regexp",{"_index":2288,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["register",{"_index":512,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["registeronchange",{"_index":1318,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["registeronchange(fn",{"_index":1112,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ProvinceList.html":{}}}],["registerontouched",{"_index":1319,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["registerontouched(fn",{"_index":1115,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ProvinceList.html":{}}}],["reject",{"_index":2754,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["related",{"_index":3174,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["relates",{"_index":3255,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["relative",{"_index":2381,"title":{},"body":{"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["release",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":3180,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["remove",{"_index":1257,"title":{},"body":{"components/DateComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["removed",{"_index":1762,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["removing",{"_index":1952,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rename",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["rendering",{"_index":1631,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["replace",{"_index":2341,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["repo",{"_index":3057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo=https://github.com/bcgov/prime",{"_index":3058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repurpose",{"_index":743,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["request",{"_index":130,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/getting-started.html":{}}}],["request_method",{"_index":637,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["requests",{"_index":144,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{}}}],["require",{"_index":3005,"title":{},"body":{"coverage.html":{}}}],["require('./i18n",{"_index":1574,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('blueimp",{"_index":1558,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('pdfjs",{"_index":1565,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('sha1",{"_index":1561,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["required",{"_index":50,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["requiredmsgseg",{"_index":2264,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["requirements",{"_index":2249,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["reset",{"_index":502,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["resetinputfields",{"_index":2022,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizeimage",{"_index":1851,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizing",{"_index":1686,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolution",{"_index":1713,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolve",{"_index":3229,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["respective",{"_index":134,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["responding",{"_index":731,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["response",{"_index":473,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{}}}],["responsetype",{"_index":725,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["rest",{"_index":2036,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["restrictdate",{"_index":1129,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["result",{"_index":99,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["results",{"_index":101,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["retains",{"_index":1694,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retry",{"_index":1939,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrystrategy(maxretry",{"_index":1941,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrywhen",{"_index":1541,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["return",{"_index":89,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["returned",{"_index":476,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/ServerPayload.html":{}}}],["returns",{"_index":57,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["reveal",{"_index":2394,"title":{},"body":{"components/PasswordComponent.html":{}}}],["reviewmode",{"_index":2562,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["rgba(0",{"_index":2598,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["right",{"_index":318,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["rimraf",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["risky",{"_index":2298,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["role=\"progressbar",{"_index":2365,"title":{},"body":{"components/PasswordComponent.html":{}}}],["role=alert",{"_index":364,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["root",{"_index":627,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["rotate",{"_index":1678,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["route",{"_index":74,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["routepath",{"_index":805,"title":{},"body":{"classes/Container.html":{}}}],["routepath.split",{"_index":809,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["router",{"_index":22,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["routerevents",{"_index":2647,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["routermodule",{"_index":2520,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["routing=true",{"_index":3207,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["row",{"_index":1245,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["rule",{"_index":3059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":1167,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["running",{"_index":2843,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["runs",{"_index":67,"title":{},"body":{"classes/AbstractForm.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["runtime",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":165,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":168,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{},"components/WizardProgressBarComponent.html":{}}}],["s",{"_index":1883,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["safari",{"_index":877,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["safe",{"_index":2716,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["same",{"_index":336,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["satisfy",{"_index":1432,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["save",{"_index":3096,"title":{},"body":{"index.html":{}}}],["saved",{"_index":1720,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["saving",{"_index":1955,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scale",{"_index":605,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["scaled",{"_index":1907,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledimage",{"_index":1872,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledown",{"_index":612,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledown(scale",{"_index":596,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledwidth",{"_index":2557,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scaledwidthstring",{"_index":2580,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scalefactors",{"_index":1813,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.heightfactor",{"_index":1937,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.scaledown(reductionscalefactor",{"_index":1814,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.widthfactor",{"_index":1934,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaling",{"_index":1775,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan",{"_index":1539,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan((acc",{"_index":1945,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["schedule",{"_index":2693,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["schematic",{"_index":2870,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["schematiccreating",{"_index":3211,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schematics",{"_index":2868,"title":{"additional-documentation/local-development/schematics.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["schematics:moh",{"_index":3210,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schemtaics",{"_index":3186,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["screen",{"_index":242,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["script",{"_index":2901,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["scriptname",{"_index":3047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scripts",{"_index":2812,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["scroll",{"_index":872,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollbar",{"_index":879,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["scrolldown",{"_index":224,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scrolls",{"_index":76,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollstepintoview",{"_index":2652,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scss",{"_index":3241,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["search",{"_index":740,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["searchtext",{"_index":999,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["secondary",{"_index":886,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["section",{"_index":2234,"title":{},"body":{"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["section'},{'name",{"_index":912,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["section.component",{"_index":2536,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["section.component.html",{"_index":2236,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.scss",{"_index":2235,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts",{"_index":2233,"title":{},"body":{"components/PageSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:11",{"_index":2237,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts:15",{"_index":2239,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section/page",{"_index":2232,"title":{},"body":{"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["sections",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1360,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"license.html":{},"additional-documentation/local-development/components.html":{}}}],["seems",{"_index":1473,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["select",{"_index":309,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select/ng",{"_index":2539,"title":{},"body":{"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select[id=\"${labelid}\"]`)).click",{"_index":367,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectfilelabelref",{"_index":1586,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["selecting",{"_index":342,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["selections",{"_index":1345,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["selectoption",{"_index":225,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectoption(labelid",{"_index":304,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selector",{"_index":847,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{}}}],["selects",{"_index":307,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["self",{"_index":1826,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.dataservice.getmspuuid",{"_index":1820,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.handleerror(commonimageerror.wrongtype",{"_index":1877,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.logimageinfo(\"msp_file",{"_index":1927,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.resetinputfields",{"_index":1878,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["send",{"_index":122,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["sends",{"_index":339,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["september",{"_index":1186,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["server",{"_index":146,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["serverpayload",{"_index":477,"title":{"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["service",{"_index":108,"title":{},"body":{"classes/AbstractHttpService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["service.ts",{"_index":105,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["service.ts:11",{"_index":118,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:16",{"_index":120,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:22",{"_index":127,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:30",{"_index":155,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:38",{"_index":157,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:52",{"_index":159,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:59",{"_index":141,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service/log.service",{"_index":1544,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["service/msp",{"_index":1546,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["services",{"_index":3143,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["services/src/geocoder.service",{"_index":952,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["sessionid",{"_index":636,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["set",{"_index":514,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"components/WizardProgressBarComponent.html":{}}}],["set('addressstring",{"_index":2144,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('autocomplete",{"_index":2141,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('brief",{"_index":2137,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('echo",{"_index":2136,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('matchprecisionnot",{"_index":2142,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('maxresults",{"_index":2135,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('minscore",{"_index":2134,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["setapplicationid(id",{"_index":780,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setcity(value",{"_index":1023,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["setcountry(value",{"_index":1012,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["setday",{"_index":1124,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setday(value",{"_index":1155,"title":{},"body":{"components/DateComponent.html":{}}}],["setdefaultcountryasoption",{"_index":1070,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["setdefaultprovinceasoption",{"_index":1058,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["setmonth",{"_index":1125,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setmonth(value",{"_index":1160,"title":{},"body":{"components/DateComponent.html":{}}}],["setname(fullname",{"_index":2432,"title":{},"body":{"classes/Person.html":{}}}],["setpassword",{"_index":2268,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["setpassword(password",{"_index":2306,"title":{},"body":{"components/PasswordComponent.html":{}}}],["setprogramname(name",{"_index":784,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setprogresssteps",{"_index":794,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["setprogresssteps(pageroutes",{"_index":806,"title":{},"body":{"classes/Container.html":{}}}],["setprovince(value",{"_index":1020,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["sets",{"_index":1027,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{}}}],["setseverity",{"_index":755,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setseverity(severity",{"_index":736,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setstreetaddress(value",{"_index":1021,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["settags",{"_index":756,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["settags(message",{"_index":744,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["settimeout",{"_index":1226,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["settimestamp",{"_index":733,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setting",{"_index":1353,"title":{},"body":{"components/DatepickerComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["settings",{"_index":3081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setup",{"_index":3099,"title":{},"body":{"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["setup:git",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["setuprequest",{"_index":113,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["setuprequest(observable",{"_index":156,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["seturl",{"_index":698,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["seturl(newurl",{"_index":646,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setyear",{"_index":1126,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setyear(value",{"_index":1163,"title":{},"body":{"components/DateComponent.html":{}}}],["severity",{"_index":690,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["severitylevels",{"_index":737,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["sha1",{"_index":1560,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["sha1(mspimage.filecontent",{"_index":1915,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1_",{"_index":1564,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1sum",{"_index":1627,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["shadow",{"_index":2597,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["shared",{"_index":3098,"title":{},"body":{"index.html":{}}}],["sharedcoremodule",{"_index":2502,"title":{"modules/SharedCoreModule.html":{}},"body":{"modules/SharedCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["sharing",{"_index":289,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["show",{"_index":47,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/local-development/components.html":{}}}],["showerror",{"_index":1592,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["showfullsizeview",{"_index":2560,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["showpasswordstrength",{"_index":2272,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["side",{"_index":715,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PageFrameworkComponent.html":{}}}],["similar",{"_index":1083,"title":{},"body":{"interfaces/CountryList.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{}}}],["simple",{"_index":1442,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["simplechanges",{"_index":1369,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["simpledate",{"_index":1137,"title":{"interfaces/SimpleDate.html":{}},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["simpler",{"_index":3240,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["simply",{"_index":1951,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["simulates",{"_index":1099,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["single",{"_index":2214,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["site",{"_index":844,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["size",{"_index":538,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["sizetxt",{"_index":539,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sizeunit",{"_index":540,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["skiblibcheck",{"_index":3084,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skip",{"_index":241,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["skiplibcheck",{"_index":3225,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["skiplibcheck=false",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["skiptocontentbutton",{"_index":216,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["slot",{"_index":837,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slots",{"_index":830,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["small",{"_index":1712,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["smooth",{"_index":96,"title":{},"body":{"classes/AbstractForm.html":{}}}],["software",{"_index":3124,"title":{},"body":{"license.html":{}}}],["solid",{"_index":2624,"title":{},"body":{"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["solve",{"_index":1807,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["something",{"_index":414,"title":{},"body":{"classes/Address.html":{}}}],["sortobjectbykeys",{"_index":2958,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortobjectbykeys(obj",{"_index":3064,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sorts",{"_index":3065,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{}}}],["soutput",{"_index":1887,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["space",{"_index":866,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["space/workspace/moh",{"_index":3272,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["space:normal",{"_index":2098,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["spaces",{"_index":2197,"title":{},"body":{"classes/MaskModel.html":{}}}],["special",{"_index":1630,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["specific",{"_index":415,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["specifically",{"_index":3083,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["specified",{"_index":131,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["spin",{"_index":1261,"title":{},"body":{"components/DateComponent.html":{}}}],["spinner",{"_index":49,"title":{},"body":{"classes/AbstractForm.html":{}}}],["spinners",{"_index":1258,"title":{},"body":{"components/DateComponent.html":{}}}],["split",{"_index":1818,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["splits",{"_index":2138,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["splunk",{"_index":582,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["src/version.js",{"_index":3056,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stable",{"_index":2156,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["standard",{"_index":411,"title":{},"body":{"classes/Address.html":{}}}],["start",{"_index":2869,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["start/end",{"_index":2705,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["start/files/app_component_html.ts",{"_index":2962,"title":{},"body":{"coverage.html":{}}}],["start/files/favicon_ico.ts",{"_index":2965,"title":{},"body":{"coverage.html":{}}}],["start/files/gov3_bc_logo_png_base64.ts",{"_index":2967,"title":{},"body":{"coverage.html":{}}}],["start/files/myriadwebpro_ttf_base64.ts",{"_index":2960,"title":{},"body":{"coverage.html":{}}}],["start/files/overrides_scss.ts",{"_index":2969,"title":{},"body":{"coverage.html":{}}}],["start/files/styles.ts",{"_index":2971,"title":{},"body":{"coverage.html":{}}}],["start/files/variables_scss.ts",{"_index":2973,"title":{},"body":{"coverage.html":{}}}],["start/index.ts",{"_index":2975,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start/package",{"_index":2982,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":2760,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["starting",{"_index":3142,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["starts",{"_index":1828,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["state",{"_index":3036,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":2912,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3035,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["static",{"_index":505,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["statustext",{"_index":683,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["step",{"_index":1777,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["step.title",{"_index":2724,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepcontainer",{"_index":2648,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepper",{"_index":798,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["steps",{"_index":1645,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["sticky",{"_index":2079,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["still",{"_index":1778,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["stops",{"_index":1467,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["store",{"_index":992,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["stored",{"_index":1046,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["str",{"_index":1495,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["street",{"_index":390,"title":{},"body":{"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["street_rural_maxlen",{"_index":972,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["streetref",{"_index":981,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["strength",{"_index":2246,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["strengthpercentage",{"_index":2265,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["string",{"_index":71,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":2601,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["structure",{"_index":579,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{}}}],["style",{"_index":2242,"title":{},"body":{"components/PageSectionComponent.html":{},"components/ToggleComponent.html":{}}}],["style.width]='strengthpercentage",{"_index":2366,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style.width]=\\'strengthpercentage",{"_index":2395,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style=scss",{"_index":3206,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styles",{"_index":823,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["styles/dist/common",{"_index":3279,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/dist/commonwe",{"_index":3274,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/index.html",{"_index":3088,"title":{},"body":{"index.html":{}}}],["styles/projects/common",{"_index":3273,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common/schematics",{"_index":3203,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["stylesscss",{"_index":2972,"title":{},"body":{"coverage.html":{}}}],["styleurls",{"_index":849,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["styling",{"_index":880,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["sub",{"_index":2139,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["subclasses",{"_index":746,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["subfolder",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":943,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["submission",{"_index":663,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["submit",{"_index":230,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"index.html":{}}}],["submitlabel",{"_index":2058,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["subscribe",{"_index":658,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["subscribe(evt",{"_index":1734,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["subscribe(url",{"_index":2689,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["subscription",{"_index":2669,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["success",{"_index":193,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/PasswordComponent.html":{},"coverage.html":{}}}],["success::after",{"_index":2385,"title":{},"body":{"components/PasswordComponent.html":{}}}],["success_fetch_img",{"_index":3038,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["success_verify_answer_correct",{"_index":3041,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":1817,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["such",{"_index":1441,"title":{},"body":{"components/DatepickerComponent.html":{},"additional-documentation/getting-started.html":{}}}],["sunhighlight",{"_index":1408,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["super",{"_index":1001,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ToggleComponent.html":{}}}],["super(http",{"_index":642,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["support",{"_index":2077,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"modules.html":{}}}],["sure",{"_index":1301,"title":{},"body":{"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["svg",{"_index":3135,"title":{},"body":{"modules.html":{}}}],["switched",{"_index":2701,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["switchmap",{"_index":946,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["switchmap(searchphrase",{"_index":1005,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["symlink",{"_index":3208,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["system",{"_index":1643,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["t",{"_index":128,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["tab",{"_index":1095,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["tabbed",{"_index":245,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["table",{"_index":2206,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3006,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1968,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tagging",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":742,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["take",{"_index":2741,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["takes",{"_index":161,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{}}}],["tap",{"_index":167,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["tap(log",{"_index":1007,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["target",{"_index":135,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{}}}],["targetpath",{"_index":3074,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tell",{"_index":3202,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["template",{"_index":822,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["templates",{"_index":3243,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["templateurl",{"_index":851,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["temporary",{"_index":1858,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["test",{"_index":198,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["test(var1",{"_index":1793,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["testing",{"_index":281,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ProvinceList.html":{}}}],["tests",{"_index":204,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{}}}],["text",{"_index":328,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"classes/MaskModel.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["text.touppercase",{"_index":2196,"title":{},"body":{"classes/MaskModel.html":{}}}],["textmaskmodule",{"_index":2533,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["thanks",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["that's",{"_index":687,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"additional-documentation/local-development/components.html":{}}}],["then((data",{"_index":92,"title":{},"body":{"classes/AbstractForm.html":{}}}],["there's",{"_index":1433,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["therefore",{"_index":1104,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["theyt",{"_index":1962,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["things",{"_index":2250,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this._headers",{"_index":195,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.get",{"_index":644,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set",{"_index":643,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('severity",{"_index":738,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('tags",{"_index":745,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('timestamp",{"_index":734,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._log",{"_index":651,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._logerror",{"_index":654,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._onchange",{"_index":1454,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this._onchange(event.jsdate",{"_index":1449,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this._onchange(null",{"_index":1444,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this._ontouched",{"_index":1445,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this._sendlog(errormessage",{"_index":673,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._sendlog(message",{"_index":670,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.activeindex",{"_index":2690,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.address",{"_index":1033,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.address.city",{"_index":1024,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.address.country",{"_index":1015,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.address.postal",{"_index":1026,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.address.province",{"_index":1013,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.address.street",{"_index":1022,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.addresschange.emit(this.address",{"_index":1017,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.application",{"_index":1603,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.base_url}/addresses.json",{"_index":2128,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.blurevent.emit",{"_index":2355,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.browsefileref.nativeelement",{"_index":2024,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.click",{"_index":1806,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.value",{"_index":2027,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.btnclick.emit($event",{"_index":2070,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.cancontinue",{"_index":2069,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.capturefileref.nativeelement",{"_index":2026,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.capturefileref.nativeelement.value",{"_index":2028,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.cd.detach",{"_index":2695,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.cd.detectchanges",{"_index":1229,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.checkimagedimensions(mspimage",{"_index":1768,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.city",{"_index":424,"title":{},"body":{"classes/Address.html":{}}}],["this.cleardate",{"_index":1443,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.commonyearvalidate",{"_index":2753,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["this.componentlabel",{"_index":2328,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.continuebutton",{"_index":354,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.continuebutton.click",{"_index":353,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.controlcontainer",{"_index":1617,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.convertdatetosimpledate(this.disablesince",{"_index":1420,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.convertdatetosimpledate(today",{"_index":1424,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.convertroutetotitle(page.path",{"_index":818,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.country",{"_index":426,"title":{},"body":{"classes/Address.html":{}}}],["this.countrylist",{"_index":1072,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.countrylist.find",{"_index":1073,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.criteriamsg",{"_index":2340,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.dataservice.finassistapp",{"_index":2045,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.dataservice.getmspaccountapp",{"_index":2049,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.dataservice.getmspapplication",{"_index":2047,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.dataservice.getmspuuid",{"_index":2008,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.date",{"_index":1216,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.date.day",{"_index":1210,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.date.month",{"_index":1208,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.date.year",{"_index":1212,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.datechange.emit",{"_index":1218,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.datechange.emit(event.jsdate",{"_index":1448,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dateformat",{"_index":1407,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dateofbirth",{"_index":2447,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.day",{"_index":2444,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.month",{"_index":2443,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.year",{"_index":2442,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth[key",{"_index":2448,"title":{},"body":{"classes/Person.html":{}}}],["this.datepickeroptions",{"_index":1406,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disablesince",{"_index":1419,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disableuntil",{"_index":1422,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorheight",{"_index":1414,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorwidth",{"_index":1416,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dayref",{"_index":1219,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.defaultcountry",{"_index":1075,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ProvinceList.html":{}}}],["this.defaultprov",{"_index":2163,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.defaultprovince",{"_index":1063,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.dobformat",{"_index":2445,"title":{},"body":{"classes/Person.html":{}}}],["this.errmsg",{"_index":2336,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.criteria",{"_index":2347,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.minlength",{"_index":2345,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.required",{"_index":2343,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errordocument.emit(mspimage",{"_index":2019,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.errormessages",{"_index":1204,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.criteria",{"_index":2346,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.minlength",{"_index":2344,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.required",{"_index":2342,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.firstname",{"_index":2451,"title":{},"body":{"classes/Person.html":{}}}],["this.form",{"_index":960,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.form.controls['day",{"_index":1227,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.controls['day'].updatevalueandvalidity",{"_index":1228,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.form.get(x).markastouched",{"_index":98,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.form.valid",{"_index":90,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.geocoderservice.lookup(searchphrase",{"_index":1006,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.get",{"_index":3163,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.get(this.address_url",{"_index":2145,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.getactiveindex(this.router.url",{"_index":2694,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getactiveindex(url",{"_index":2691,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getapplicationtype",{"_index":1604,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.getnamecomponent(labelname)).getattribute('value",{"_index":363,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.getnumericvalue",{"_index":1214,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.getpasswordstrength",{"_index":2351,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.handleerror(commonimageerror.alreadyexists",{"_index":1760,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopen",{"_index":1788,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopenpdf",{"_index":1790,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toobig",{"_index":1782,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toosmall",{"_index":1769,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleimagefile(file",{"_index":1770,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.heightfactor",{"_index":603,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.http.get(url",{"_index":178,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.http.post(apibaseurl",{"_index":487,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.http.post(url",{"_index":182,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.httpclient",{"_index":482,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.httpoptions",{"_index":175,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.id",{"_index":1616,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageobject.naturalheight).tofixed(0",{"_index":2583,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.imageobject.naturalwidth",{"_index":2582,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.images",{"_index":1759,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.filter(x",{"_index":2030,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.length",{"_index":2034,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.push(mspimage",{"_index":2010,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageschange.emit(this.images",{"_index":2011,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.iscanada",{"_index":1036,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.isdate(this.disablesince",{"_index":1418,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.isdate(this.disableuntil",{"_index":1421,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.isdobempty",{"_index":2441,"title":{},"body":{"classes/Person.html":{}}}],["this.isloading",{"_index":2068,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.label",{"_index":1205,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.labeltext",{"_index":1405,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.lastname",{"_index":2452,"title":{},"body":{"classes/Person.html":{}}}],["this.loghttprequeststoconsole",{"_index":180,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.logimageinfo('msp_file",{"_index":2006,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.logservice.log",{"_index":662,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.logservice.log({name",{"_index":1816,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.mask",{"_index":2497,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.middlename",{"_index":2458,"title":{},"body":{"classes/Person.html":{}}}],["this.minlen",{"_index":2330,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg1",{"_index":2338,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg2",{"_index":2339,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.model",{"_index":1429,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this.monthref",{"_index":1215,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.ngmodelchange.emit",{"_index":1292,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["this.ngxdp",{"_index":1450,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.ngxdp.cleardate",{"_index":1453,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.noidimage",{"_index":1642,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.objectid",{"_index":2285,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.observablefromfiles(filelist",{"_index":1754,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.onerror(err",{"_index":1010,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.onlyfuturedates",{"_index":1423,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.onmodelchange",{"_index":1113,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.onmodelchange(this.address",{"_index":1018,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.ontouch",{"_index":1019,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.password",{"_index":2349,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.passwordchange.emit",{"_index":2353,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.post()these",{"_index":3164,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.post(this.url",{"_index":709,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.postal",{"_index":428,"title":{},"body":{"classes/Address.html":{}}}],["this.progresssteps",{"_index":815,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.progresssteps.findindex(x",{"_index":2708,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.progresssteps.length",{"_index":2698,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.province",{"_index":427,"title":{},"body":{"classes/Address.html":{}}}],["this.provincelist",{"_index":1051,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.provincelist.find",{"_index":1060,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.provlist",{"_index":1054,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.pswdstrength",{"_index":2350,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.readimage(file",{"_index":1835,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.required",{"_index":2033,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.requiredmsgseg",{"_index":2337,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.resetinputfields",{"_index":1761,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage",{"_index":1825,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage(image",{"_index":1843,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router",{"_index":86,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.events.pipe",{"_index":2684,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.router.navigate([url",{"_index":91,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.url.indexof('/account",{"_index":2048,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router.url.indexof('/application",{"_index":2046,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router.url.indexof('/assistance",{"_index":2044,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.routerevents",{"_index":2683,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.routerevents$.unsubscribe",{"_index":2696,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.scaledwidth",{"_index":2585,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.scrollstepintoview",{"_index":2692,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.search",{"_index":1107,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.searchtext$.next(this.search",{"_index":1096,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.searchtext$.pipe",{"_index":1003,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.setdefaultcountryasoption",{"_index":1041,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.setdefaultprovinceasoption",{"_index":1042,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.setdefaultprovinceasoption(value",{"_index":1014,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.setseverity(severitylevels.error",{"_index":672,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setseverity(severitylevels.info",{"_index":669,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settags(message.event",{"_index":695,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settimestamp",{"_index":694,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setuprequest(observable",{"_index":179,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.showerror",{"_index":2012,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.size",{"_index":1410,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.skiptocontentbutton.click",{"_index":357,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.steps.toarray()[this.activeindex",{"_index":2710,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.street",{"_index":423,"title":{},"body":{"classes/Address.html":{}}}],["this.strengthpercentage",{"_index":2352,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.triggerdayvalidation",{"_index":1217,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.typeaheadlist",{"_index":1002,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.updateprovlist",{"_index":1016,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["this.url",{"_index":647,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.usecurrentdate",{"_index":1206,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.uuid",{"_index":587,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.valuechange.emit",{"_index":2198,"title":{},"body":{"classes/MaskModel.html":{}}}],["this.viewcontainerref",{"_index":2579,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.widthfactor",{"_index":601,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.yearref",{"_index":1221,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.zone.run",{"_index":1636,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["those",{"_index":3145,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["though",{"_index":1875,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["throw",{"_index":145,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["throwerror",{"_index":624,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror('geocoder",{"_index":2165,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror(error",{"_index":723,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["throwerror(msg",{"_index":700,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["thumb",{"_index":885,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["thumbnail",{"_index":1728,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["thumbnail'},{'name",{"_index":918,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["thumbnail.html",{"_index":2555,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnail.scss",{"_index":2554,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnailcomponent",{"_index":917,"title":{"components/ThumbnailComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tib",{"_index":1894,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tiff",{"_index":1682,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tight",{"_index":1476,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["tihs",{"_index":2117,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["time",{"_index":1882,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["timeout",{"_index":1222,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["times",{"_index":1774,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["tip",{"_index":513,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["tips",{"_index":2209,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["title",{"_index":803,"title":{},"body":{"classes/Container.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{}}}],["titles",{"_index":2220,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["today",{"_index":1147,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["todo",{"_index":34,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{}}}],["together",{"_index":2431,"title":{},"body":{"classes/Person.html":{}}}],["toggle",{"_index":2608,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle'},{'name",{"_index":920,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["toggle.component.html",{"_index":2610,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":2609,"title":{},"body":{"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":919,"title":{"components/ToggleComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["tohse",{"_index":3277,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["told",{"_index":1650,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tomorrow",{"_index":1355,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["toobig",{"_index":563,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["tools",{"_index":2323,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["toosmall",{"_index":562,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["top",{"_index":77,"title":{},"body":{"classes/AbstractForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["top/bottom",{"_index":2375,"title":{},"body":{"components/PasswordComponent.html":{}}}],["tostring",{"_index":393,"title":{},"body":{"classes/Address.html":{}}}],["tostring()'d",{"_index":692,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["track",{"_index":448,"title":{},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ToggleComponent.html":{}}}],["tracking",{"_index":583,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["transform",{"_index":2589,"title":{},"body":{"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["transformed",{"_index":1909,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["transformfn",{"_index":3086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transition",{"_index":2075,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{}}}],["translatex",{"_index":2732,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["translatey",{"_index":2600,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["translatey(0",{"_index":2590,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["translation",{"_index":462,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["transparent",{"_index":870,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["tree",{"_index":825,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{}}}],["trigger",{"_index":183,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ProvinceList.html":{}}}],["triggerdayvalidation",{"_index":1127,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["triggers",{"_index":997,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{}}}],["trimmed",{"_index":1286,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.replace(/[^\\d]/g",{"_index":1290,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.substr",{"_index":1291,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimming",{"_index":2148,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["true",{"_index":87,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["truncate",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":2715,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["try/catch",{"_index":2717,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ts",{"_index":3184,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["tsconfig",{"_index":2872,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tsconfig.json",{"_index":3082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tslint",{"_index":1567,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tslint:disable:max",{"_index":1568,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["turn",{"_index":1697,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tweaks",{"_index":323,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["two",{"_index":3262,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeahead",{"_index":995,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{}}}],["typeaheadlist",{"_index":996,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["typeaheadmatch",{"_index":947,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{}}}],["typeaheadmodule",{"_index":2519,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeaheadmodule.forroot",{"_index":2545,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeof",{"_index":1393,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["typeoption",{"_index":226,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeoption(labelid",{"_index":334,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeroots",{"_index":3223,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["types",{"_index":1942,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["types/pdfjs",{"_index":3012,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":3169,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["typetext",{"_index":227,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetext(labelid",{"_index":344,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typo",{"_index":298,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ui",{"_index":1090,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["ul",{"_index":2240,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["unable",{"_index":697,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["uncomment",{"_index":3231,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["undefined",{"_index":177,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{}}}],["under",{"_index":1916,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["underlying",{"_index":3107,"title":{},"body":{"index.html":{}}}],["uniqness",{"_index":590,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["unique",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":975,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{}}}],["unknown",{"_index":565,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["unreleased",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["unsuccessful",{"_index":720,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["unsure",{"_index":1948,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["until",{"_index":1673,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["up",{"_index":959,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["up(lg",{"_index":861,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["up(md",{"_index":2229,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["upcoming",{"_index":3228,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["update",{"_index":266,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{}}}],["updateangularjson",{"_index":2980,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateangularjson(host",{"_index":3078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateappcomponentts",{"_index":2994,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateappcomponentts(tree",{"_index":3050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updated",{"_index":1225,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["updatepackagejson",{"_index":2995,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatepackagejson(tree",{"_index":3053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateprovlist",{"_index":1050,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["updates",{"_index":726,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"miscellaneous/functions.html":{}}}],["updatetsconfig",{"_index":2981,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatetsconfig(host",{"_index":3079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updating",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1595,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploaded",{"_index":531,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["uploader",{"_index":1570,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["uploader'},{'name",{"_index":905,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["uploader.component",{"_index":2531,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["uploader.component.html",{"_index":1571,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.scss",{"_index":1572,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.ts",{"_index":560,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["uploader/file",{"_index":1526,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["uploader_after_resize_attributes",{"_index":1928,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader_error",{"_index":2007,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploadinstructionref",{"_index":1588,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["upper",{"_index":1029,"title":{},"body":{"interfaces/CountryList.html":{},"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{}}}],["uppercase",{"_index":2195,"title":{},"body":{"classes/MaskModel.html":{}}}],["uppercasepipe",{"_index":2179,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{}}}],["uppercasepipe(text",{"_index":2185,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{}}}],["url",{"_index":78,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["url(\"data:image/svg+xml;charset=utf8,%3csvg",{"_index":2634,"title":{},"body":{"components/ToggleComponent.html":{}}}],["url.includes(x.route",{"_index":2709,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["usa",{"_index":1035,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["usable",{"_index":3158,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["usage",{"_index":840,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["use",{"_index":205,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["usecurrentdate",{"_index":1130,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["used",{"_index":162,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["useexisting",{"_index":964,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{}}}],["useful",{"_index":1337,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["usegeocoder",{"_index":1079,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["user",{"_index":59,"title":{},"body":{"classes/AbstractForm.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/WizardProgressItem.html":{}}}],["user's",{"_index":1721,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["username",{"_index":2251,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["uses",{"_index":1067,"title":{},"body":{"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{}}}],["using",{"_index":132,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["uuid",{"_index":449,"title":{},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["uuid.uuid",{"_index":588,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["uuid.uuid().tostring",{"_index":444,"title":{},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ToggleComponent.html":{}}}],["val",{"_index":1061,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["val.country",{"_index":1065,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["val.countrycode",{"_index":1074,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["val.description",{"_index":1064,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["val.provincecode",{"_index":1062,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["valid",{"_index":88,"title":{},"body":{"classes/AbstractForm.html":{},"components/DatepickerComponent.html":{}}}],["validate",{"_index":977,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"interfaces/ProvinceList.html":{},"directives/YearValidateDirective.html":{}}}],["validate(control",{"_index":1490,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["validate.directive",{"_index":2527,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validate.directive.ts",{"_index":2747,"title":{},"body":{"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["validate.directive.ts:16",{"_index":2748,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:18",{"_index":2749,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validation",{"_index":42,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CaptchaDataService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["validation.directive",{"_index":2523,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validation.directive.ts",{"_index":1486,"title":{},"body":{"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["validation.directive.ts:14",{"_index":1491,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validations",{"_index":2248,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["validator",{"_index":1487,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["value",{"_index":44,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{}}}],["value)).click",{"_index":381,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["value.touppercase",{"_index":1031,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["valuechange",{"_index":2180,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{}}}],["valuemax=\"100",{"_index":2371,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuemin=\"0",{"_index":2370,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuenow]=\"strengthpercentage",{"_index":2368,"title":{},"body":{"components/PasswordComponent.html":{}}}],["values",{"_index":689,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ProvinceList.html":{}}}],["var",{"_index":893,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["variable",{"_index":1045,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["variables",{"_index":422,"title":{},"body":{"classes/Address.html":{}}}],["variables.scss",{"_index":858,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["variablescss",{"_index":2974,"title":{},"body":{"coverage.html":{}}}],["verify/captcha",{"_index":484,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifycaptcha",{"_index":458,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["verifycaptcha(apibaseurl",{"_index":468,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifying_answer",{"_index":3040,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":1302,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["version.js",{"_index":3055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versionjs",{"_index":2996,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["versionjs(options",{"_index":3054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versions",{"_index":3092,"title":{},"body":{"index.html":{}}}],["very",{"_index":2664,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"index.html":{}}}],["via",{"_index":327,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/getting-started.html":{}}}],["view",{"_index":2663,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["viewbox",{"_index":2636,"title":{},"body":{"components/ToggleComponent.html":{}}}],["viewchild",{"_index":80,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["viewchild('browsefileref",{"_index":1579,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('canvas",{"_index":1597,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('capturefileref",{"_index":1581,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('cityref",{"_index":982,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["viewchild('dayref",{"_index":1177,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchild('dp",{"_index":1388,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["viewchild('dropzone",{"_index":1577,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('formref",{"_index":38,"title":{},"body":{"classes/AbstractForm.html":{}}}],["viewchild('fullsizeviewmodal",{"_index":2574,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewchild('imageplaceholderref",{"_index":1583,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('monthref",{"_index":1191,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchild('postalref",{"_index":984,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["viewchild('provref",{"_index":978,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["viewchild('selectfilelabel",{"_index":1585,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('stepcontainer",{"_index":2670,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchild('streetref",{"_index":980,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["viewchild('yearref",{"_index":1193,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchildren",{"_index":2675,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren('steps",{"_index":2673,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewcontainerref",{"_index":2558,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewencapsulation",{"_index":2218,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["viewencapsulation.none",{"_index":2211,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["viewproviders",{"_index":962,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/local-development/schematics.html":{}}}],["visibility",{"_index":1332,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["visible",{"_index":1328,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["void",{"_index":65,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["vs",{"_index":3154,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["w",{"_index":3189,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wait",{"_index":1672,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["want",{"_index":333,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["warning",{"_index":2364,"title":{},"body":{"components/PasswordComponent.html":{}}}],["warning::after",{"_index":2387,"title":{},"body":{"components/PasswordComponent.html":{}}}],["warranties",{"_index":3126,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3227,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["watches",{"_index":3190,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["way",{"_index":412,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["we'll",{"_index":1452,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["we're",{"_index":2713,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["we've",{"_index":2700,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["web",{"_index":2770,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["webelement",{"_index":228,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["webkit",{"_index":878,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{}}}],["weight",{"_index":1243,"title":{},"body":{"components/DateComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ToggleComponent.html":{}}}],["well",{"_index":3270,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wfactor",{"_index":602,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["whether",{"_index":2419,"title":{},"body":{"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["white",{"_index":2097,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["whole",{"_index":3259,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wide",{"_index":633,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["width",{"_index":1248,"title":{},"body":{"components/DateComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["width/height",{"_index":1412,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["widthfactor",{"_index":594,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["window.location.hostname",{"_index":639,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["window.outerwidth",{"_index":2722,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["window.scrollto",{"_index":93,"title":{},"body":{"classes/AbstractForm.html":{}}}],["winds",{"_index":1427,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["wish",{"_index":3181,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["within",{"_index":276,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["without",{"_index":1087,"title":{},"body":{"interfaces/CountryList.html":{},"classes/MaskModel.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["wizard",{"_index":813,"title":{},"body":{"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["wizardprogressbar",{"_index":3221,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wizardprogressbarcomponent",{"_index":921,"title":{"components/WizardProgressBarComponent.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardprogressitem",{"_index":795,"title":{"interfaces/WizardProgressItem.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["won't",{"_index":729,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["word",{"_index":2099,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["work",{"_index":294,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["workaround",{"_index":1606,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["working",{"_index":1612,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["works",{"_index":317,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["wrap",{"_index":863,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["wrapped",{"_index":1383,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["wrapper",{"_index":1296,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["write",{"_index":3183,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["writevalue",{"_index":1320,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["writevalue(addr",{"_index":1110,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["writevalue(obj",{"_index":1377,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["writevalue(value",{"_index":1519,"title":{},"body":{"components/DropdownComponent.html":{}}}],["writing",{"_index":3123,"title":{},"body":{"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["wrong",{"_index":1681,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wrongtype",{"_index":561,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["x",{"_index":820,"title":{},"body":{"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.getdate",{"_index":1404,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["x.slice(1)).join",{"_index":812,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.uuid",{"_index":2031,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["x[0].touppercase",{"_index":811,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["xiff",{"_index":1677,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["xmlns='http://www.w3.org/2000/svg",{"_index":2635,"title":{},"body":{"components/ToggleComponent.html":{}}}],["y",{"_index":874,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"directives/YearValidateDirective.html":{}}}],["year",{"_index":1220,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["yeardistantfuture",{"_index":1200,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["yeardistantpast",{"_index":1199,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["yearinput",{"_index":1255,"title":{},"body":{"components/DateComponent.html":{}}}],["yearref",{"_index":1122,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yearvalidatedirective",{"_index":927,"title":{"directives/YearValidateDirective.html":{}},"body":{"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"overview.html":{}}}],["yera",{"_index":1165,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yes",{"_index":137,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImageProcessingError.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/ToggleComponent.html":{},"miscellaneous/functions.html":{}}}],["yib",{"_index":1898,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["you'll",{"_index":3201,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["you're",{"_index":3288,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["you've",{"_index":3139,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["young",{"_index":3103,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1498,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["yyyy/mm/dd",{"_index":1339,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["yyyymmdd",{"_index":2423,"title":{},"body":{"classes/Person.html":{}}}],["z",{"_index":1479,"title":{},"body":{"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{}}}],["z]/i",{"_index":2193,"title":{},"body":{"classes/MaskModel.html":{}}}],["z][0",{"_index":2491,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["z]\\s?[0",{"_index":2493,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["za",{"_index":2490,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["zero",{"_index":1829,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zib",{"_index":1897,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone",{"_index":1602,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone.js",{"_index":3024,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":501,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"overview.html":{}}}],["zxcvbn",{"_index":2320,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["zxcvbn_",{"_index":2319,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractForm.html":{"url":"classes/AbstractForm.html","title":"class - AbstractForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/models/src/abstract-form.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/models/src/abstract-form.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/abstract-form.ts:13\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/abstract-form.ts:10\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/abstract-form.ts:15\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/abstract-form.ts:30\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/abstract-form.ts:17\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/abstract-form.ts:44\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/abstract-form.ts:36\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n/**\n *\n */\nexport abstract class AbstractForm {\n  /** Access to the form elements for validation */\n  @ViewChild('formRef') form: NgForm;\n\n  /** Disables all inputs (todo: not implemented) */\n  disabled: boolean;\n  /** Show or hide the loading spinner as required, should be passed to form action bar. */\n  loading: boolean = false;\n  /** What happens when the user clicks the continue button. Generally navigating to another page. */\n  abstract continue(): void;\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    this.router = router;\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   */\n  canContinue(): boolean {\n    // Returns true if form is valid\n    return this.form.valid;\n  }\n\n  /** Navigates to a route then automatically scrolls to the top of the page. */\n  protected navigate(url: string) {\n    this.router.navigate([url])\n      .then((data) => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(): void {\n    Object.keys(this.form.form.controls).forEach(x => {\n      this.form.form.get(x).markAsTouched();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpService.html":{"url":"classes/AbstractHttpService.html","title":"class - AbstractHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/services/src/abstract-api-service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class for HTTP Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/services/src/abstract-api-service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/services/src/abstract-api-service.ts:16\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/services/src/abstract-api-service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/abstract-api-service.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/abstract-api-service.ts:59\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/abstract-api-service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/abstract-api-service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/services/src/abstract-api-service.ts:52\n                                \n                            \n                    \n                        \n                                The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n/**\n * Abstract class for HTTP Service\n */\nexport abstract class AbstractHttpService {\n\n  protected logHTTPRequestsToConsole: boolean = false;\n\n  constructor(protected http: HttpClient) {}\n\n  /** The headers to send along with every GET and POST. */\n  protected abstract _headers: HttpHeaders;\n\n  /**\n   * Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n   * @param url Target URL to make the GET request\n   */\n  protected get(url, queryParams?: HttpParams): Observable {\n    /** The HTTP request observer with always on error handling */\n    const httpOpts = this.httpOptions;\n    httpOpts.params = queryParams ? queryParams : undefined;\n    const observable = this.http.get(url, httpOpts);\n    return this.setupRequest(observable);\n  }\n\n  protected post(url, body): Observable {\n    if (this.logHTTPRequestsToConsole) {\n      console.log( 'Post Request: ', body );\n    }\n    const observable = this.http.post(url, body, this.httpOptions);\n    return this.setupRequest(observable);\n  }\n\n  protected setupRequest(observable: Observable ): Observable {\n    // All failed requests should trigger the abstract method handleError\n    observable = observable.pipe(catchError(this.handleError.bind(this)));\n    // Optionally add console logging\n    if (this.logHTTPRequestsToConsole) {\n      observable = observable.pipe(tap(\n        data => console.log('HTTP Success: ', data),\n        error => console.log('HTTP Error: ', error)\n      ));\n    }\n    return observable;\n  }\n\n  /** The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. */\n  protected get httpOptions(): {headers: HttpHeaders, params?: HttpParams} {\n    return {\n      headers: this._headers\n    };\n  }\n\n  /** Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). */\n  protected abstract handleError(error: HttpErrorResponse);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractTestPage.html":{"url":"classes/AbstractTestPage.html","title":"class - AbstractTestPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTestPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/e2e/src/abstract-test-page.ts\n        \n\n            \n                Description\n            \n            \n                AbstractTestPage provides common functionality for e2e tests that make use of\nthe MoH Common Lib.  For example, getNameComponent() and\ngetNameComponentVal()  both correspond to the NameComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                continueButton\n                            \n                            \n                                    Public\n                                skipToContentButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickButton\n                            \n                            \n                                clickCheckBox\n                            \n                            \n                                clickSkipToContent\n                            \n                            \n                                continue\n                            \n                            \n                                formErrors\n                            \n                            \n                                getContinueButton\n                            \n                            \n                                    Async\n                                getNameComponent\n                            \n                            \n                                    Async\n                                getNameComponentVal\n                            \n                            \n                                    Abstract\n                                navigateTo\n                            \n                            \n                                scrollDown\n                            \n                            \n                                selectOption\n                            \n                            \n                                typeOption\n                            \n                            \n                                typeText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            continueButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.form-bar .submit'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:13\n                            \n                        \n\n                \n                    \n                        Clicking this button should complete the page, navigate to the next one.\nWe default it to .form-bar .submit but you may overwrite as necessary.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipToContentButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.skip-to-content'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:18\n                            \n                        \n\n                \n                    \n                        This is the 'Skip To Content' button for Screen Readers that appears when\ntabbed to. May be overwritten as necessary.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickButton\n                        \n                        \n                    \n                \n            \n            \n                \nclickButton(labelId: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickCheckBox\n                        \n                        \n                    \n                \n            \n            \n                \nclickCheckBox(labelRefName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    labelRefName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickSkipToContent\n                        \n                        \n                    \n                \n            \n            \n                \nclickSkipToContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formErrors\n                        \n                        \n                    \n                \n            \n            \n                \nformErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContinueButton\n                        \n                        \n                    \n                \n            \n            \n                \ngetContinueButton()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponent(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:60\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the NameComponent for an associated human\nreadable label. If the label is a duplicate it will grab the first one\nonly.\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human redable label name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponentVal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponentVal(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:72\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the value within a given NameComponent\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:32\n                \n            \n\n\n            \n                \n                    Every class should override this to point to the page it is testing.\nCalling navigateTo should go to the corresponding url this page tests.   *\nNote - We encourage hardcoding all links in e2e tests and not sharing a\nconstants file with the application. While this leads to more work, it\navoids the case where incorrect constants (e.g. a typo in a URL) pass the\ntests.\n\n\n                    \n                        Example :\n                        \n                            return browser.get(&#39;/enrolment/profile&#39;);\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollDown\n                        \n                        \n                    \n                \n            \n            \n                \nscrollDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:43\n                \n            \n\n\n            \n                \n                    Scrolls down to the bottom of the page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(labelId: string, optionText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:91\n                \n            \n\n\n            \n                \n                    Selects from an ng-select component. This includes DropdownComponent\nothers, like country, province, etc.\nTODO - Need to test this works! Right now just copied from GitHub with\nminor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\ntext and use the 'for' attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    optionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the option we want to select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOption\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOption(labelId: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:102\n                \n            \n\n\n            \n                \n                    Works on same NgSelect components but it sends custom text instead of\nselecting a given choice.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the text we want to type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeText\n                        \n                        \n                    \n                \n            \n            \n                \ntypeText(labelId: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:113\n                \n            \n\n\n            \n                \n                    Enter text into an input via label name.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name for a text input\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, WebElement, $$, protractor } from 'protractor';\n\n/**\n * AbstractTestPage provides common functionality for e2e tests that make use of\n * the MoH Common Lib.  For example, `getNameComponent()` and\n * `getNameComponentVal()`  both correspond to the NameComponent.\n */\nexport abstract class AbstractTestPage {\n  /**\n   * Clicking this button should complete the page, navigate to the next one.\n   * We default it to `.form-bar .submit` but you may overwrite as necessary.\n   */\n  public continueButton: WebElement = element(by.css('.form-bar .submit'));\n  /**\n   * This is the 'Skip To Content' button for Screen Readers that appears when\n   * tabbed to. May be overwritten as necessary.\n   */\n  public skipToContentButton: WebElement = element(by.css('.skip-to-content'));\n\n  /**\n   * Every class should override this to point to the page it is testing.\n   * Calling navigateTo should go to the corresponding url this page tests.   *\n   *\n   * Note - We encourage hardcoding all links in e2e tests and _not_ sharing a\n   * constants file with the application. While this leads to more work, it\n   * avoids the case where incorrect constants (e.g. a typo in a URL) pass the\n   * tests.\n   *\n   @example\n   *    return browser.get('/enrolment/profile');\n   */\n  abstract navigateTo(): any;\n\n  continue() {\n    this.continueButton.click();\n  }\n\n  getContinueButton() {\n    return this.continueButton;\n  }\n\n  /** Scrolls down to the bottom of the page */\n  scrollDown() {\n    browser.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n  }\n\n  clickSkipToContent() {\n    this.skipToContentButton.click();\n  }\n\n  /**\n   * **NameComponent** - Returns the NameComponent for an associated human\n   * readable label. If the label is a duplicate it will grab the first one\n   * only.\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human redable label name.\n   */\n  async getNameComponent(labelName: string): Promise {\n    const label = element.all(by.cssContainingText('lib-prime-name label', labelName)).first();\n    return element(by.id(await label.getAttribute('for')));\n  }\n\n  /**\n   * **NameComponent** - Returns the value within a given NameComponent\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human readable label name\n   */\n  async getNameComponentVal(labelName: string): Promise {\n    return (await this.getNameComponent(labelName)).getAttribute('value');\n  }\n\n  formErrors() {\n    return $$('[role=alert] .text-danger');\n  }\n\n  /**\n   * Selects from an ng-select component. This includes DropdownComponent\n   * others, like country, province, etc.\n   *\n   * TODO - Need to test this works! Right now just copied from GitHub with\n   * minor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\n   * text and use the 'for' attribute.\n   *\n   * @param labelId corresponds to labelForId on the \n   * @param optionText the option we want to select\n   */\n  selectOption(labelId: string, optionText: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.cssContainingText('span.ng-option-label', optionText)).click(); // selects option by provided text\n  }\n\n  /**\n   * Works on same NgSelect components but it sends custom text instead of\n   * selecting a given choice.\n   * @param labelId corresponds to labelForId on the \n   * @param data the text we want to type\n   */\n  typeOption(labelId: string, data: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.css(`input[role=\"combobox\"]`)).sendKeys(data); // type option\n    browser.actions().sendKeys(protractor.Key.ENTER).perform(); // hit enter key\n  }\n\n  /**\n   * Enter text into an input via label name.\n   * @param labelId Human readable label name for a text input\n   * @param text Text to enter into the input\n   */\n  typeText(labelId: string, text: string) {\n    element(by.css(`input[ng-reflect-name^=\"${labelId}\"]`)).sendKeys(text);\n  }\n\n  clickButton(labelId: string, value: string) {\n    element(by.cssContainingText(`button[class^=\"${labelId}\"]`, value)).click();\n  }\n\n  clickCheckBox(labelRefName: string) {\n    element(by.css(`input[ng-reflect-name=\"${labelRefName}\"]`)).click();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/models/src/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Address class, each project can extend this address class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                postal\n                            \n                            \n                                    Public\n                                province\n                            \n                            \n                                    Public\n                                street\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                isComplete\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/address.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/address.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/address.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/address.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/address.model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Address)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/address.model.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Address\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/address.model.ts:27\n                \n            \n\n\n            \n                \n                    Address must have all fields filled out to be considered\ncomplete\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/address.model.ts:19\n                \n            \n\n\n            \n                \n                    Overwrite the native JavaScript toString method to determine how the\nobject should be printed, instead of [object Object].  This provides a\nstandard way to print out an address. If you need something specific you\nshould access the properties directly. We omit Province/Country because of\nPharmaCare's BC focus. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Address {\n\n  /* Variables for class */\n  public street: string;\n  public postal: string;\n  public country: string;\n  public province: string;\n  public city: string;\n\n  /** Overwrite the native JavaScript toString method to determine how the\n   * object should be printed, instead of [object Object].  This provides a\n   * standard way to print out an address. If you need something specific you\n   * should access the properties directly. We omit Province/Country because of\n   * PharmaCare's BC focus. */\n  toString() {\n    return `${this.street}, ${this.city}`;\n  }\n\n  /**\n   * Address must have all fields filled out to be considered\n   * complete\n   */\n  isComplete(): boolean {\n    // All fields have data - not empty\n    return !!(this.street && this.city && this.country &&\n             this.province && this.postal);\n  }\n\n  /* Copy function */\n  copy(object: Address) {\n    this.street = object.street;\n    this.city = object.city;\n    this.country = object.country;\n    this.postal = object.postal;\n    this.province = object.province;\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/models/src/base.ts\n        \n\n            \n                Description\n            \n            \n                Base class.  Components extend this class to have object IDs.\nNPM package dependencies:\n  a) moment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/models/src/base.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/base.ts:11\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n/**\n * Base class.  Components extend this class to have object IDs.\n * NPM package dependencies:\n *  a) moment\n */\nexport class Base {\n\n  /** An identifier for parents to keep track of components */\n  public objectId: string = UUID.UUID().toString();\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaDataService.html":{"url":"injectables/CaptchaDataService.html","title":"injectable - CaptchaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchAudio\n                            \n                            \n                                    Public\n                                fetchData\n                            \n                            \n                                    Public\n                                verifyCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/captcha/src/captcha-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAudio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAudio(apiBaseUrl: string, validation: string, translation?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translation\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(apiBaseUrl: string, nonce: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verifyCaptcha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encryptedAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        README\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/captcha/src/captcha.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CaptchaDataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n    \n        CAPTCHA Module\nExample:\nimport { CaptchaModule } from 'moh-common-lib/captcha'\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n// tip: set nonce to a UUID().\nThere must be a configured CAPTCHA service deployed to OpenShift to use this component. You then must point apiBaseUrl to point to the service.\nKnown Issues\n\n    \n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { CaptchaComponent } from './captcha.component';\nimport { CaptchaDataService } from './captcha-data.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CaptchaComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [\n    CaptchaDataService\n  ],\n  exports: [\n    CaptchaComponent\n  ],\n})\nexport class CaptchaModule { \n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CaptchaModule,\n      providers: [CaptchaDataService]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImage.html":{"url":"classes/CommonImage.html","title":"class - CommonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/images/src/images.ts\n        \n\n            \n                Description\n            \n            \n                Image as uploaded by user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachmentOrder\n                            \n                            \n                                contentType\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                fileContent\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                naturalHeight\n                            \n                            \n                                naturalWidth\n                            \n                            \n                                size\n                            \n                            \n                                sizeTxt\n                            \n                            \n                                sizeUnit\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/images/src/images.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachmentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageProcessingError.html":{"url":"classes/CommonImageProcessingError.html","title":"class - CommonImageProcessingError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageProcessingError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/images/src/images.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commonImage\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                maxSizeAllowed\n                            \n                            \n                                    Optional\n                                rawImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode: CommonImageError, errorDescription?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/images/src/images.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        CommonImageError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            commonImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            errorDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxSizeAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rawImageFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonImageScaleFactors.html":{"url":"interfaces/CommonImageScaleFactors.html","title":"interface - CommonImageScaleFactors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonImageScaleFactors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/images/src/images.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightFactor\n                                \n                                \n                                        widthFactor\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scaleDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/images/src/images.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightFactor\n                                    \n                                \n                                \n                                    \n                                        heightFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthFactor\n                                    \n                                \n                                \n                                    \n                                        widthFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageScaleFactorsImpl.html":{"url":"classes/CommonImageScaleFactorsImpl.html","title":"class - CommonImageScaleFactorsImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageScaleFactorsImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/images/src/images.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CommonImageScaleFactors\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                heightFactor\n                            \n                            \n                                widthFactor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scaleDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wFactor: number, hFactor: number)\n                    \n                \n                        \n                            \n                                Defined in projects/common/images/src/images.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heightFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widthFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/images/src/images.ts:60\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/images/src/images.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLogMessage.html":{"url":"interfaces/CommonLogMessage.html","title":"interface - CommonLogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonLogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/services/src/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/services/src/logger.service.ts:179\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event being logged. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: 'error',\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonLogger.html":{"url":"injectables/CommonLogger.html","title":"injectable - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/services/src/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                url\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _log\n                            \n                            \n                                    Protected\n                                _logError\n                            \n                            \n                                    Private\n                                _sendLog\n                            \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                logError\n                            \n                            \n                                    Public\n                                logHttpError\n                            \n                            \n                                    Private\n                                setSeverity\n                            \n                            \n                                    Private\n                                setTags\n                            \n                            \n                                    Private\n                                setTimestamp\n                            \n                            \n                                setURL\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    applicationId\n                                \n                                \n                                    programName\n                                \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/services/src/logger.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _log(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:79\n                \n            \n\n\n            \n                \n                    Log a message to Splunk. This is the main way to send logs and\nautomatically includes meta-data. You do not need to subscribe to the\nresponse, as the service already does that. The input object must have an\n'event' property set, everything else is optional.\nExample:\nthis.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object, nesting is fine, with event property\nset.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _logError(errorMessage: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _sendLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _sendLog(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:110\n                \n            \n\n\n            \n                \n                    Internal method to send logs to Splunk, includes meta-data except that's\nconsistent across all requests, but not specific values like severity\nlevel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object or anything that can be toString()'d,\nlike Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logError(errorMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logHttpError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logHttpError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:93\n                \n            \n\n\n            \n                \n                    Log HTTP errors, e.g. when losing network connectivity or receiving an\nerror response code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSeverity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSeverity(severity: SeverityLevels)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    severity\n                                    \n                                                SeverityLevels\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTags(message: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:166\n                \n            \n\n\n            \n                \n                    The headers are easier to search in splunk, and we aren't using tags, so\nrepurpose it to event type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setURL\n                        \n                        \n                    \n                \n            \n            \n                \nsetURL(newURL: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/logger.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newURL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:22\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:59\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  })\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/services/src/logger.service.ts:23\n                            \n                        \n\n                \n                    \n                        The HTTP Headers which go with each request.  These MUST be set if you are\nusing the logger.  Fields include:\n\nprogram (REQUIRED, the application wide code)\napplicationId (REQUIRED, like sessionId)\nrequest_method (REQUIRED, 'POST')\nlogsource: (REQUIRED, window.location.hostname)\nhttp_x_forwarded_host (REQUIRED, window.location.hostname)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/services/src/logger.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:16\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        applicationId\n                    \n                \n\n                \n                    \n                        getapplicationId()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/services/src/logger.service.ts:39\n                                \n                            \n\n                \n                    \n                        setapplicationId(id: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/services/src/logger.service.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        programName\n                    \n                \n\n                \n                    \n                        getprogramName()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/services/src/logger.service.ts:47\n                                \n                            \n\n                \n                    \n                        setprogramName(name: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/services/src/logger.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/services/src/logger.service.ts:147\n                                \n                            \n                    \n                        \n                                Overwrite the inherited httpOptions so we can set responseType to text.\nThis updates Angular's parsing, and it won't error out due to the server\nnot responding with JSON.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: 'error',\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Container.html":{"url":"classes/Container.html","title":"class - Container","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Container\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/models/src/container.ts\n        \n\n            \n                Description\n            \n            \n                Base functionality for container that is used to display bread crumbs \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertRouteToTitle\n                            \n                            \n                                    Protected\n                                setProgressSteps\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressSteps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WizardProgressItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/container.ts:12\n                            \n                        \n\n                \n                    \n                        Route items for the stepper \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertRouteToTitle\n                        \n                        \n                    \n                \n            \n            \n                \nconvertRouteToTitle(routePath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/container.ts:18\n                \n            \n\n\n            \n                \n                    Converts a lower case string of a route in a user readable title.  e.g.\n\"personal-info\" -> \"Personal Info\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setProgressSteps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProgressSteps(pageRoutes: Route[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/container.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageRoutes\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreBreadcrumbComponent.html":{"url":"components/CoreBreadcrumbComponent.html","title":"component - CoreBreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreBreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        The base styles for a breadcrumb with slots for content to go.  If you need a\ncomplex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\nthe base styles.  There are 3 slots: left, center, and right - all are\noptional and any configuration works. You select the slot by adding it as an\nattribute to the top level elements inside of the breadcrumb element.\n   Example usage:\n   \n    \n      Dashboard /\n      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n    \n    \n    \n   \n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-core-breadcrumb\n            \n\n            \n                styleUrls\n                ./core-breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * The base styles for a breadcrumb with slots for content to go.  If you need a\n * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\n * the base styles.  There are 3 slots: left, center, and right - all are\n * optional and any configuration works. You select the slot by adding it as an\n * attribute to the top level elements inside of the breadcrumb element.\n *\n *   Example usage:\n *\n *   \n *    \n *      Dashboard /\n *      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n *    \n *    \n *    \n *   \n *\n *   @export\n */\n@Component({\n  selector: 'common-core-breadcrumb',\n  templateUrl: './core-breadcrumb.component.html',\n  styleUrls: ['./core-breadcrumb.component.scss']\n})\nexport class CoreBreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./core-breadcrumb.component.scss\n                \n                @import 'variables.scss';\n\n\n.breadcrumb {\n\n  @include media-breakpoint-up(lg){\n    flex-wrap: nowrap;\n  }\n\n\n  display: flex;\n  justify-content: space-between;\n  background-color: transparent;\n}\n\n.horizontal-scroll {\n  overflow-x: scroll;\n  overflow-y: hidden;\n}\n\n\n// Chrome + Safari (webkit) scrollbar styling - not IE / FF.\n.horizontal-scroll::-webkit-scrollbar {\n  background: transparent;\n  height: 5px;\n}\n.horizontal-scroll::-webkit-scrollbar-thumb {\n  background: $color-secondary-nav;\n  border-radius: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreBreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryList.html":{"url":"interfaces/CountryList.html","title":"interface - CountryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountryList\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for countries \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        countryCode\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ViewChild,\n  ElementRef,\n  OnChanges\n} from '@angular/core';\nimport { ControlContainer, NgForm, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Address } from '../../../models/src/address.model';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  switchMap,\n  catchError\n} from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap';\nimport { Base } from '../../../models/src/base';\nimport { GeocoderService, GeoAddressResult } from '../../../services/src/geocoder.service';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport interface ProvinceList {\n  country: string;\n  provinceCode: string;\n  description: string;\n}\n\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddressComponent),\n      multi: true\n    }\n  ],\n})\nexport class AddressComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n    // Field lengths\n    public CITY_MAXLEN = '100';\n    public PROV_MAXLEN = '250';\n    public STREET_RURAL_MAXLEN = '1000';\n\n\n  // TODO: Create Unit tests for this component\n  // Exists for unit testing to validate errors set\n  @ViewChild('provRef') provRef: ElementRef;\n  @ViewChild('streetRef') streetRef: ElementRef;\n  @ViewChild('cityRef') cityRef: ElementRef;\n  @ViewChild('postalRef') postalRef: ElementRef;\n\n  @Input() disabled: boolean = false;\n  @Input() isRequired: boolean = false;\n  @Input() address: Address = new Address();\n  @Input() countryList: CountryList[];\n  @Input() defaultCountry: string;\n  @Input() provinceList: ProvinceList[];\n  @Input() defaultProvince: string;\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n\n  public onModelChange: any;\n  public onTouch: any;\n\n  /** Search string to store result from GeoCoder request */\n  public search: string;\n  /**\n   * The list of results, from API, that is passed to the typeahead list\n   * Result from GeoCoderService address lookup\n   */\n  public typeaheadList$: Observable;\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  public provList: ProvinceList[];\n\n  constructor(private geocoderService: GeocoderService) {\n    super();\n  }\n\n  ngOnInit() {\n    // Set up for using GeoCoder\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => {\n        return this.geocoderService.lookup(searchPhrase);\n      }),\n      // tap(log => console.log('taplog', log)),\n      catchError(err => this.onError(err))\n    );\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.address.province = this.setDefaultProvinceAsOption(value);\n    this.address.country = value;\n    this.updateProvList();\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  setProvince(value: string) {\n    this.address.province = value;\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  setStreetAddress(value: string) {\n    this.address.street = value;\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  setCity(value: string) {\n    this.address.city = value;\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  get postalCode() {\n    return this.address.postal;\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  set postalCode(value: string) {\n    this.address.postal = value.toUpperCase();\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  isCanada(): boolean {\n    return this.address && 'CAN' === this.address.country;\n  }\n\n  isCanadaUSA(): boolean {\n    return (this.address && 'USA' === this.address.country) || this.isCanada();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if ( !this.address.country ) {\n        // Set defaults\n        this.address.country = this.setDefaultCountryAsOption();\n      }\n      // Set defaults\n      this.address.province = this.setDefaultProvinceAsOption( this.address.country );\n\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if ( !this.address.province ) {\n        // Set defaults\n        this.address.province = this.setDefaultProvinceAsOption( this.address.country );\n      }\n      this.updateProvList();\n    }\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.address.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption( country: string ): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n             val.description === this.defaultProvince) &&\n             val.country === country\n    );\n    return (provObj ? provObj.provinceCode : null );\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    const countryObj = !this.countryList\n    ? null\n    : this.countryList.find(\n        val =>\n          val.countryCode === this.defaultCountry ||\n          val.description === this.defaultCountry\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    return this.isCanada() && 'BC' === this.address.province;\n  }\n\n  onKeyUp(event: KeyboardEvent): void {\n    /**\n     * Filter out 'enter' and other similar keyboard events that can trigger\n     * when user is selecting a typeahead option instead of entering new text.\n     * Without this filter, we do another HTTP request + force disiplay the UI\n     * for now reason\n     */\n    if (event.keyCode === 13 || event.keyCode === 9) {\n      // enter & tab\n      return;\n    }\n\n    this.searchText$.next(this.search);\n  }\n\n  onError(err: any): Observable {\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  onSelect(event: TypeaheadMatch): void {\n    const data: GeoAddressResult = event.item;\n\n    this.search = data.street;\n    this.address.street = data.street;\n    this.address.city = data.city;\n    this.address.province = 'BC';\n    this.address.country = 'CAN';\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  writeValue(addr: Address) {\n    this.address = addr;\n  }\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateComponent.html":{"url":"components/DateComponent.html","title":"component - DateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DateComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/date/date.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-date\n            \n\n            \n                styleUrls\n                ./date.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dayRef\n                            \n                            \n                                    Public\n                                monthList\n                            \n                            \n                                monthRef\n                            \n                            \n                                yearRef\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getNumericValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDay\n                            \n                            \n                                setMonth\n                            \n                            \n                                setYear\n                            \n                            \n                                    Private\n                                triggerDayValidation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessages\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                restrictDate\n                            \n                            \n                                useCurrentDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(form: NgForm, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/date/date.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                  \n                                                        \n                                                                        NgForm\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         SimpleDate\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Date'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        restrictDate\n                    \n                \n                \n                    \n                        Type :     \"future\" | \"past\" | \"any\"\n\n                    \n                \n                \n                    \n                        Default value : 'any'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:44\n                            \n                        \n                \n                    \n                        Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useCurrentDate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getNumericValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumericValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:132\n                \n            \n\n\n            \n                \n                    Convert string to numeric value or null if not \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDay\n                        \n                        \n                    \n                \n            \n            \n                \nsetDay(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:93\n                \n            \n\n\n            \n                \n                    Set the day and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMonth\n                        \n                        \n                    \n                \n            \n            \n                \nsetMonth(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:81\n                \n            \n\n\n            \n                \n                    Set the month and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setYear\n                        \n                        \n                    \n                \n            \n            \n                \nsetYear(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:104\n                \n            \n\n\n            \n                \n                    Set the yera and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            triggerDayValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerDayValidation()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:120\n                \n            \n\n\n            \n                \n                    Force the day input to run it's directives again. Important in cases\nwhere user fills fields out of order, e.g. sets days to 31 then month to\nFebrurary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dayRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            monthList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('monthRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('yearRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nTodo\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { Base } from '../../../models/src/base';\nimport { SimpleDate } from '../../../models/src/simple-date.interface';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n */\n\nexport interface DateErrorMsg {\n  required: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n@Component({\n  selector: 'common-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class DateComponent extends Base implements OnInit {\n  // Exists for unit testing to validate errors set\n  @ViewChild( 'monthRef' ) monthRef: NgModel;\n  @ViewChild( 'dayRef' ) dayRef: NgModel;\n  @ViewChild( 'yearRef') yearRef: NgModel;\n\n  @Input() useCurrentDate: boolean = false;\n  @Input() required: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Date';\n  @Input() date: SimpleDate;\n  /** Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. */\n  @Input() restrictDate: 'future' | 'past' | 'any' = 'any';\n  @Input() errorMessages: DateErrorMsg;\n\n  @Output() dateChange: EventEmitter = new EventEmitter();\n\n  public monthList: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  constructor( private form: NgForm,\n               private cd: ChangeDetectorRef ) {\n    super();\n  }\n\n  ngOnInit() {\n    if ( !this.errorMessages ) {\n      // Use default messages\n      this.errorMessages = {\n        required: this.label + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.label + '.',\n        yearDistantPast: 'Invalid ' + this.label + '.',\n        yearDistantFuture: 'Invalid ' + this.label + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.label + '.',\n        invalidValue: 'Invalid ' + this.label + '.'\n      };\n    }\n\n    if ( this.useCurrentDate ) {\n      // Set date to current date\n      this.date.month = moment().month();\n      this.date.day = moment().date();\n      this.date.year = moment().year();\n    }\n  }\n\n  /** Set the month and notify caller of change */\n  setMonth( value: string ): void {\n    const month = this.getNumericValue( value );\n\n    // console.log( 'monthRef: ', this.monthRef );\n    if ( this.date ) {\n      this.date.month = month;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the day and notify caller of change */\n  setDay( value: string ): void {\n    const day = this.getNumericValue( value );\n\n    // console.log(  'dayRef: ', this.dayRef );\n    if ( this.date ) {\n      this.date.day = day;\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the yera and notify caller of change */\n  setYear( value: string ): void {\n    const year = this.getNumericValue( value );\n\n    // console.log( 'yearRef: ', this.yearRef );\n    if ( this.date ) {\n      this.date.year = year;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /**\n   * Force the `day` input to run it's directives again. Important in cases\n   * where user fills fields out of order, e.g. sets days to 31 then month to\n   * Februrary.\n   */\n  private triggerDayValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls['day'] ) {\n        // console.log( 'Trigger day validation' );\n        this.form.controls['day'].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  /** Convert string to numeric value or null if not */\n  private getNumericValue( value: string ): number | null {\n    const parsed = parseInt( value, 10 );\n    return ( isNaN( parsed ) ? null : parsed );\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n\n    Month\n    \n      \n      \n      {{month}}\n    \n\n    Day\n    \n\n    Year\n    \n\n  \n\n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n  \n       {{errorMessages.noFutureDatesAllowed}}\n  \n  \n  \n       {{errorMessages.invalidValue}}\n  \n\n\n\n\n    \n\n    \n                \n                    ./date.component.scss\n                \n                @import 'variables.scss';\n\n.date--legend {\n  font-size: inherit;\n  font-weight: bold;\n}\n\n.date-row {\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n}\n\n.monthSelect {\n  max-width: 50%;\n  height: 35px;\n  margin-right: 1em;\n}\n.dayInput {\n  max-width: 25%;\n  height: 35px;\n  margin-right: 1em;\n}\n.yearInput {\n  max-width: 25%;\n  height: 35px;\n}\n.error-container {\n  flex-basis: 100% !important;\n}\n\n/* Remove spinners */\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  margin: 0;\n}\n\nselect option[selected] {\n  color: gray !important;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}      Month                      {{month}}        Day        Year               {{errorMessages.required}}           {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}             {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'DateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateErrorMsg.html":{"url":"interfaces/DateErrorMsg.html","title":"interface - DateErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateErrorMsg\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date.component.ts\n        \n\n            \n                Description\n            \n            \n                Component NPM package dependencies:\na) moment\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dayOutOfRange\n                                \n                                \n                                            Optional\n                                        invalidValue\n                                \n                                \n                                            Optional\n                                        noFutureDatesAllowed\n                                \n                                \n                                            Optional\n                                        noPastDatesAllowed\n                                \n                                \n                                        required\n                                \n                                \n                                            Optional\n                                        yearDistantFuture\n                                \n                                \n                                            Optional\n                                        yearDistantPast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayOutOfRange\n                                    \n                                \n                                \n                                    \n                                        dayOutOfRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidValue\n                                    \n                                \n                                \n                                    \n                                        invalidValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noFutureDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noFutureDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noPastDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noPastDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantFuture\n                                    \n                                \n                                \n                                    \n                                        yearDistantFuture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantPast\n                                    \n                                \n                                \n                                    \n                                        yearDistantPast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nTodo\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { Base } from '../../../models/src/base';\nimport { SimpleDate } from '../../../models/src/simple-date.interface';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n */\n\nexport interface DateErrorMsg {\n  required: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n@Component({\n  selector: 'common-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class DateComponent extends Base implements OnInit {\n  // Exists for unit testing to validate errors set\n  @ViewChild( 'monthRef' ) monthRef: NgModel;\n  @ViewChild( 'dayRef' ) dayRef: NgModel;\n  @ViewChild( 'yearRef') yearRef: NgModel;\n\n  @Input() useCurrentDate: boolean = false;\n  @Input() required: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Date';\n  @Input() date: SimpleDate;\n  /** Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. */\n  @Input() restrictDate: 'future' | 'past' | 'any' = 'any';\n  @Input() errorMessages: DateErrorMsg;\n\n  @Output() dateChange: EventEmitter = new EventEmitter();\n\n  public monthList: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  constructor( private form: NgForm,\n               private cd: ChangeDetectorRef ) {\n    super();\n  }\n\n  ngOnInit() {\n    if ( !this.errorMessages ) {\n      // Use default messages\n      this.errorMessages = {\n        required: this.label + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.label + '.',\n        yearDistantPast: 'Invalid ' + this.label + '.',\n        yearDistantFuture: 'Invalid ' + this.label + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.label + '.',\n        invalidValue: 'Invalid ' + this.label + '.'\n      };\n    }\n\n    if ( this.useCurrentDate ) {\n      // Set date to current date\n      this.date.month = moment().month();\n      this.date.day = moment().date();\n      this.date.year = moment().year();\n    }\n  }\n\n  /** Set the month and notify caller of change */\n  setMonth( value: string ): void {\n    const month = this.getNumericValue( value );\n\n    // console.log( 'monthRef: ', this.monthRef );\n    if ( this.date ) {\n      this.date.month = month;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the day and notify caller of change */\n  setDay( value: string ): void {\n    const day = this.getNumericValue( value );\n\n    // console.log(  'dayRef: ', this.dayRef );\n    if ( this.date ) {\n      this.date.day = day;\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the yera and notify caller of change */\n  setYear( value: string ): void {\n    const year = this.getNumericValue( value );\n\n    // console.log( 'yearRef: ', this.yearRef );\n    if ( this.date ) {\n      this.date.year = year;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /**\n   * Force the `day` input to run it's directives again. Important in cases\n   * where user fills fields out of order, e.g. sets days to 31 then month to\n   * Februrary.\n   */\n  private triggerDayValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls['day'] ) {\n        // console.log( 'Trigger day validation' );\n        this.form.controls['day'].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  /** Convert string to numeric value or null if not */\n  private getNumericValue( value: string ): number | null {\n    const parsed = parseInt( value, 10 );\n    return ( isNaN( parsed ) ? null : parsed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateFieldFormatDirective.html":{"url":"directives/DateFieldFormatDirective.html","title":"directive - DateFieldFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateFieldFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date-field-format.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [commonDateFieldFormat]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:8\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:11\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[commonDateFieldFormat]'\n})\nexport class DateFieldFormatDirective {\n\n  @Output() ngModelChange: EventEmitter = new EventEmitter(false);\n\n  @HostListener('input', ['$event'])\n  onInput( event: KeyboardEvent ) {\n    const input = event.target as HTMLInputElement;\n    const maxlen = input.getAttribute( 'maxlength' );\n\n    let trimmed = input.value.trim();\n    if (/[^\\d]+/.test( input.value ) ) {\n\n      trimmed = trimmed.replace(/[^\\d]/g, '');\n    }\n\n    trimmed = trimmed.substr( 0, Number( maxlen ) );\n\n    input.value = trimmed;\n    this.ngModelChange.emit( trimmed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatepickerComponent.html":{"url":"components/DatepickerComponent.html","title":"component - DatepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatepickerComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n\n\n    \n        Description\n    \n    \n        PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\nhttps://github.com/kekeh/ngx-mydatepicker\nNOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\nTHIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\nMake sure to use the same version that this library uses.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DatepickerComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-datepicker\n            \n\n            \n                styleUrls\n                ./datepicker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datepicker.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                datepickerOptions\n                            \n                            \n                                DatepickerSizes\n                            \n                            \n                                model\n                            \n                            \n                                ngxdp\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDate\n                            \n                            \n                                convertDateToSimpleDate\n                            \n                            \n                                convertSimpleDateToDate\n                            \n                            \n                                isDate\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearButton\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSince\n                            \n                            \n                                disableUntil\n                            \n                            \n                                errorMessages\n                            \n                            \n                                labelText\n                            \n                            \n                                onlyFutureDates\n                            \n                            \n                                required\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/datepicker/datepicker.component.ts:89\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearButton\n                    \n                \n                \n                    \n                        Type :     \"visible\" | \"invisible\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:67\n                            \n                        \n                \n                    \n                        Control visibility of the clear 'x' button on the mini datepicker.\n'visible' is default, button exists\n'none' means the element does not exist\n'invisible' means the element takes up space but is not visible / cannot be\nused.\nInvisible is useful when you want to make sure a datepicker is the same\nsize as a visible one.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yyyy/mm/dd'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:72\n                            \n                        \n                \n                    \n                        Format for how to display the date to the user. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSince\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:49\n                            \n                        \n                \n                    \n                        Dates after disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableUntil\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:46\n                            \n                        \n                \n                    \n                        Dates before disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyFutureDates\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:52\n                            \n                        \n                \n                    \n                        Equivalent to setting disableBefore to tomorrow. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         DatepickerSizes\n\n                    \n                \n                \n                    \n                        Default value : DatepickerSizes.DEFAULT\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:36\n                            \n                        \n                \n                    \n                        Component size can be reduced, see Datepickersizes for options \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearDate\n                        \n                        \n                    \n                \n            \n            \n                \nclearDate()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertDateToSimpleDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertDateToSimpleDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IMyDate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertSimpleDateToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertSimpleDateToDate(date: IMyDate)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            IMyDate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \nisDate(x: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepickerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INgxMyDpOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:86\n                            \n                        \n\n                \n                    \n                        Default options for wrapped ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatepickerSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DatepickerSizes\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:78\n                            \n                        \n\n                \n                    \n                        Datetime model used to interface with ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxdp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMyDatePickerDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dp')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DateErrorMsg } from '../date/date.component';\nimport { Base } from '../../../models/src/base';\nconst moment = moment_;\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n    \n        \n    {{labelText}}\n        \n            \n                \n\n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n  \n  \n       {{errorMessages.noFutureDatesAllowed}}\n   -->\n  \n       {{errorMessages.invalidValue}}\n  \n\n    \n\n    \n                \n                    ./datepicker.component.scss\n                \n                .datepicker--mini {\n  display: flex;\n  flex-wrap: nowrap; // Never break line with the 'x' btn\n  &:not(.hide-clear) > .btn {\n    // Make button and .input-group-append play nice.\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  .input-group-append .btn {\n    padding: 0 0.5rem;\n  }\n}\n\n.input-group-append {\n  // Bug fix, stops the appended groups from flashing above the datepicker\n  // itself, seems to mostly happen in tight row layouts like the info modal.\n  z-index: 0;\n}\n\n.float-label-append {\n  margin-bottom: calc(0.5rem + 2px);\n}\n\n.has-float-label {\n  flex-basis: calc(100% - 36px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelText}}                                                                                                                                     {{errorMessages.required}}             {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}             {{errorMessages.noFutureDatesAllowed}}   -->         {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DayValidationDirective.html":{"url":"directives/DayValidationDirective.html","title":"directive - DayValidationDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DayValidationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/day-validation.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => DayValidationDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDayValidation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/day-validation.directive.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Directive({\n  selector: '[commonDayValidation]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => DayValidationDirective), multi: true}\n  ]\n})\nexport class DayValidationDirective implements Validator {\n\n  validate( control: FormControl ): {[key: string]: any} | null {\n    const date = control.parent.value;\n\n    if ( !control.value ) {\n      return null; // empty value\n    }\n\n    const day: number = parseInt( control.value, 10 );\n    // console.log( 'day: ', day );\n\n    if ( !isNaN( day ) ) {\n\n      // console.log( 'parent: ', date );\n      // Only process of value is numeric\n      if ( !isNaN( date.month )  && !isNaN( date.year ) ) {\n\n        // Determine days in month\n        const str = `${date.year}-${date.month}`;\n        let daysInMonth: number = moment(str, 'YYYY-MM').daysInMonth();\n        // console.log( 'str: ', str + ', dayInMonth: ', daysInMonth );\n\n        if ( isNaN( daysInMonth ) ) {\n          daysInMonth = 31;\n        }\n\n        // Validate days\n        if ( day > daysInMonth || day \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/dropdown/dropdown.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DropdownComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                addTagText\n                            \n                            \n                                autocorrect\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/dropdown/dropdown.component.ts:28\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addTag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addTagText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocorrect\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default label'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'common-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DropdownComponent)\n    }\n  ]\n})\nexport class DropdownComponent implements OnInit, ControlValueAccessor {\n  public model: any;\n\n  @Input() items = [];\n  @Input() label: string = 'Default label';\n  @Input() placeholder: string;\n  @Input() autocorrect: string;\n  @Input() addTag: boolean = false;\n  @Input() addTagText: string = 'Add';\n  @Input() required: boolean;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n    // TODO - is markForCheck() necessary?\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./dropdown.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploaderMsg.html":{"url":"interfaces/FileUploaderMsg.html","title":"interface - FileUploaderMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploaderMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/file-uploader/file-uploader.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterContentInit, ChangeDetectorRef, Component,\n    ContentChild, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnInit, Output, SimpleChanges, ViewChild, forwardRef, AfterViewInit } from '@angular/core';\nimport { NgForm, ControlContainer } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ModalDirective} from 'ngx-bootstrap';\nimport { PDFJSStatic } from 'pdfjs-dist';\nimport { Observable ,  Observer, fromEvent, merge } from 'rxjs';\nimport {map, filter, flatMap, scan, delay, retryWhen} from 'rxjs/operators';\nimport { CommonImage, CommonImageError, CommonImageProcessingError,\nCommonImageScaleFactors, CommonImageScaleFactorsImpl } from '../../../images/src/public_api';\n// import { MspLogService } from '../../service/log.service';\n// import { MspDataService } from '../../service/msp-data.service';\n// import { BaseComponent } from '../base.component';\n// import { LogEntry } from '../logging/log-entry.model';\n// import {Person} from '../../model/application.model';\nimport {Router} from '@angular/router';\nimport { Base } from '../../../models/src/base';\n// import {ApplicationBase} from '../../model/application-base.model';\n\n// const loadImage = require('blueimp-load-image');\n// const sha1 = require('sha1');\n\nimport * as loadImage_ from 'blueimp-load-image';\nconst loadImage = loadImage_;\nimport * as sha1_ from 'sha1';\nconst sha1 = sha1_;\n\n// const PDFJS: PDFJSStatic = require('pdfjs-dist');\nimport * as PDFJS_ from 'pdfjs-dist';\nconst PDFJS: PDFJSStatic = (PDFJS_ as any);\n\nexport interface FileUploaderMsg {\n    required: string;\n}\n\n// TODO - Remove this and fix tslint issues\n/* tslint:disable:max-line-length*/\n\n@Component({\n    selector: 'common-file-uploader',\n    templateUrl: './file-uploader.component.html',\n    styleUrls: ['./file-uploader.component.scss'],\n    viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FileUploaderComponent extends Base\n    implements OnInit, OnChanges, AfterContentInit {\n    // lang = require('./i18n');\n    noIdImage: Boolean = false;\n    private appConstants;\n    @ViewChild('dropZone') dropZone: ElementRef;\n    @ViewChild('browseFileRef') browseFileRef: ElementRef;\n    // @ViewChild('captureFileRef') captureFileRef: ElementRef;\n    @ViewChild('imagePlaceholderRef') imagePlaceholderRef: ElementRef;\n    @ViewChild('selectFileLabel') selectFileLabelRef: ElementRef;\n\n    // @ContentChild('uploadInstruction') uploadInstructionRef: ElementRef;\n    @Input() images: Array = new Array(0);\n    @Output() imagesChange: EventEmitter> = new EventEmitter>();\n    @Input() id: string;\n    @Input() showError: boolean;\n    @Input() required: boolean = false;\n    @Input() instructionText: string = 'Please upload required ID documents.';\n    @Input() errorMessages: FileUploaderMsg = {required: 'File is required.'};\n\n    @ViewChild('canvas') canvas: ElementRef;\n\n\n    @Output() errorDocument: EventEmitter = new EventEmitter();\n\n    constructor(\n                // private dataService: MspDataService,\n                // private logService: MspLogService,\n                private zone: NgZone,\n                private cd: ChangeDetectorRef , private router: Router,\n                private controlContainer: ControlContainer) {\n        super();\n        // this.application = this.getApplicationType();\n    }\n\n    /**\n     * This is created as a workaround to access the form control that binds to\n     * the input[type='file']. We can't access it via the template name bindings\n     * as that isn't working, so instead we access the parent form and then find\n     * the input by name.\n     */\n    get fileControl() {\n        const INPUT_NAME = `fileUploadBrowse-${this.id}`;\n        // note - should be \"this.controlContainer as NgForm\" here, which works,\n        // but fails on compiliation due to secondary entries\n        return (this.controlContainer as any).controls[INPUT_NAME];\n    }\n\n    /**\n     * Return true if file already exists in the list; false otherwise.\n     */\n    static checkImageExists(file: CommonImage, imageList: Array) {\n        if (!imageList || imageList.length = 0; i--) {\n                // console.log(`compare  ${imageList[i].id} with ${sha1Sum}, result ${imageList[i].id === sha1Sum}`);\n                if (imageList[i].id === sha1Sum) {\n                    console.log(`This file ${file.name} has already been uploaded.`);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * A special method to force the rendering of this component.  This is a workaround\n     * because for some unknown reason, AngularJS2 change detector does not detect the\n     * change of the images Array.\n     */\n    forceRender() {\n        this.zone.run(() => {\n        });\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        console.log('fileuploader onChanges', changes['images']);\n        // if (changes['images'] && (changes['images'].currentValue.length === 0 &&\n        //   changes['images'].previousValue.length > 0)) {\n        if (changes['images'] && (\n            changes['images'].currentValue.length === 0\n            && changes['images'].previousValue\n            && changes['images'].previousValue.length > 0)\n        ) {\n            this.noIdImage = true;\n        } else {\n            this.noIdImage = false;\n        }\n    }\n\n    /*\n     System processing steps\n\n     1. User clicks browse or drag-n-drops an file\n     2. For browse case, the browser is told to only accept mime type image/*, .JPG, .GIF, .PNG, etc,\n     however user can override and for drag-n-drop we don't can't impose this filter\n     4. Using the HTML5 File API, we open a handle on the file\n     5. Read the filename for later display to the user\n     6. Create a hidden Image element in the browser's DOM\n     7. Read the file's bytes as a DataUrl and copy them into the Image element\n     8. Wait until the Image finishes loading the image\n     9. Read the image element's natural width and height\n     10. Pass the File handle into a HTML5 Canvas lib (we need the XIFF headers to auto rotate, XIFF headers are not available in DataUrl)\n     11. The Canvas errors because it's a wrong type, e.g., TIFF, we abort and notify user\n     12. Instruct the Canvas lib to keep resizing the image if it exceeds a maximum width or height,\n     extract meta data, and auto-orient based on XIFF metadata.  It uses a \"contain\" operation which retains\n     it's width to height pixel ratio.\n     13. Call a function on the Canvas element to turn the Canvas into a JPEG of quality 50%.\n     14. Once in a Blob with get the blob size in bytes and a human friendly display size\n     15. In order to more easily manage the image, we convert the Blob to a DataUrl again.\n     16. Pass the DataUrl into a hash algorithm to create an identifier and to check if the image has already been uploaded\n     17. Next we check the final size of the image to ensure it's not to small in resolution\n     (arguably this could've been done earlier), if too small we notify user\n     18. Finally, the image is saved into the user's ongoing EA/PA application including localstorage\n     19. The image is displayed to user as a thumbnail\n\n     */\n\n    ngOnInit(): void {\n\n\n        const dragOverStream =\n            fromEvent(this.dropZone.nativeElement, 'dragover');\n\n        /**\n         * Must cancel the dragover event in order for the drop event to work.\n         */\n        dragOverStream.pipe(map(evt => {\n            return event;\n        })).subscribe(evt => {\n            // console.log('Cancel dragover event.');\n            evt.preventDefault();\n        });\n\n        const dropStream = fromEvent(this.dropZone.nativeElement, 'drop');\n        const filesArrayFromDrop = dropStream.pipe(\n            map(\n                function (event) {\n                    event.preventDefault();\n                    return event.dataTransfer.files;\n                }\n            ));\n\n        const browseFileStream = fromEvent(this.browseFileRef.nativeElement, 'change');\n        // const captureFileStream = fromEvent(this.captureFileRef.nativeElement, 'change');\n\n        merge(merge(browseFileStream).pipe(\n            map(\n                (event) => {\n                    event.preventDefault();\n                    return event.target['files'];\n\n                }\n            )),\n            filesArrayFromDrop).pipe(\n                filter(files => {\n                    console.log('files');\n                    return !!files && files.length && files.length > 0;\n                }),\n                flatMap(\n                    (fileList: FileList) => {\n\n                        return this.observableFromFiles(fileList, new CommonImageScaleFactorsImpl(1, 1));\n                    }\n                ),\n                filter(\n                    (mspImage: CommonImage) => {\n\n                        const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                // TODO - Is this necessary? Can likely be removed as it's exactly identical to the preceding.\n                filter((mspImage: CommonImage) => {\n\n                    const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                filter((mspImage: CommonImage) => {\n\n                    const imageSizeOk = this.checkImageDimensions(mspImage);\n                        if (!imageSizeOk) {\n                            this.handleError(CommonImageError.TooSmall, mspImage);\n                            this.resetInputFields();\n                        }\n                        return imageSizeOk;\n                    }\n                )\n            ).subscribe(\n            (file: CommonImage) => {\n\n                this.handleImageFile(file);\n                this.resetInputFields();\n            },\n\n            (error) => {\n                console.log('Error in loading image: %o', error);\n\n                /**\n                 * Handle the error if the image is gigantic that after\n                 * 100 times of scaling down by 30% on each step, the image\n                 * is still over 1 MB.\n                 */\n                if (error.errorCode) {\n                    if (CommonImageError.TooBig === error.errorCode) {\n                        this.handleError(CommonImageError.TooBig, error.image);\n                    } else if (CommonImageError.CannotOpen === error.errorCode) {\n                        if (!error.image) {\n                            error.image = new CommonImage();\n                            if (error.rawImageFile) {\n                                error.image.name = error.rawImageFile.name;\n                            }\n                        }\n                        this.handleError(CommonImageError.CannotOpen, error.image);\n                    } else if (CommonImageError.CannotOpenPDF === error.errorCode) {\n                        this.handleError(CommonImageError.CannotOpenPDF, error.image, error.errorDescription);\n                    } else {\n                        throw error;\n                    }\n                }\n\n\n            },\n            () => {\n                console.log('completed loading image');\n            }\n        );\n    }\n\n    test(var1) {\n        console.log(var1);\n    }\n\n    ngAfterContentInit() {\n\n        const imagePlaceholderEnterKeyStream = merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'keyup'),\n            fromEvent(this.selectFileLabelRef.nativeElement, 'keyup'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'keyup')\n        ).pipe(filter((evt: KeyboardEvent) => evt.key === 'Enter'));\n\n        merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'click'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'click'),\n            imagePlaceholderEnterKeyStream\n        ).pipe(\n            map((event) => {\n                event.preventDefault();\n                return event;\n            })\n        ).subscribe( (event) => { this.browseFileRef.nativeElement.click(); });\n    }\n\n    /**\n     * Solve size in this equation: size * 0.8to-the-power-of30 ) => {\n            const mspImages = [];\n            scaleFactors = scaleFactors.scaleDown(reductionScaleFactor);\n            for (let fileIndex = 0; fileIndex  {\n\n\n                        // this.logService.log({name: file.name + 'is successfully split into ' + images.length + ' images',\n                            // UUID: self.dataService.getMspUuid()}, 'File_Upload');\n\n                        images.map((image, index) => {\n                            image.name = pdfFile.name;\n                            this.resizeImage( image, self, scaleFactors, observer, pageNumber , true); // index starts from zero\n                            pageNumber = pageNumber + 1  ;\n                        });\n                    }, (error: string) => {\n                        console.log('error' + JSON.stringify(error));\n                        const imageReadError: CommonImageProcessingError =\n                            new CommonImageProcessingError(CommonImageError.CannotOpenPDF, error);\n                        observer.error(imageReadError);\n                    });\n                } else {\n                    // Load image into img element to read natural height and width\n                    this.readImage(file, pageNumber , (image: HTMLImageElement , imageFile: File , nextPageNumber: number)  => {\n                            image.id = imageFile.name; // .name deprecated, changed image.name to image.id\n                            this.resizeImage(image, self, scaleFactors, observer , nextPageNumber );\n                        },\n\n                        // can be ignored for bug, the log line is never called\n                        (error: CommonImageProcessingError) => {\n                            console.log('error' + JSON.stringify(error));\n                            observer.error(error);\n                        });\n                    pageNumber = pageNumber + 1  ;\n                }\n            }\n\n            // retryWhen is potential issue!\n        }).pipe(retryWhen(this.retryStrategy(32)));\n        return fileObservable;\n    }\n\n\n    private resizeImage( image: HTMLImageElement, self: this, scaleFactors: CommonImageScaleFactors, observer: Observer, pageNumber: number = 0 , isPdf: boolean = false) {\n// While it's still in an image, get it's height and width\n        const mspImage: CommonImage = new CommonImage();\n        const reader: FileReader = new FileReader();\n        console.log('image.name:' + image.id); // .name deprecated, changed image.name to image.id\n        // Copy file properties\n        mspImage.name = image.id ;\n        if (isPdf) {\n            mspImage.name = image.name + '-page' + pageNumber;  // Just give name to pdf\n        }\n        // Temporary so we don't have duplicate file names. TODO: Improve.\n        //   mspImage.name += Math.ceil(Math.random()*100);\n        mspImage.attachmentOrder = pageNumber ;\n\n\n        mspImage.naturalWidth = image.naturalWidth;\n        mspImage.naturalHeight = image.naturalHeight;\n\n        console.log(`image file natural height and width:\n            ${mspImage.naturalHeight} x ${mspImage.naturalWidth}`);\n\n        // Canvas will force the change to a JPEG\n        mspImage.contentType = 'image/jpeg'; // previously in appConstants\n\n        // Scale the image by loading into a canvas\n\n        console.log('Start scaling down the image using blueimp-load-image lib: ');\n        const scaledImage = loadImage(\n            image.src, // NOTE: we pass the File ref here again even though its already read because we need the XIFF metadata\n            function (canvas: HTMLCanvasElement, metadata: any) {\n\n                // Canvas may be an Event when errors happens\n                if (canvas instanceof Event) {\n                    self.handleError(CommonImageError.WrongType, mspImage);\n                    self.resetInputFields();\n                    return;\n                }\n                // Convert to blob to get size\n                canvas.toBlob((blob: Blob) => {\n                        // Copy the blob properties\n                        mspImage.size = blob.size;\n\n                        // log image info (but only for the first time before any scaling)\n                        // if (s\n\n                        const fileName = mspImage.name;\n                        const nBytes = mspImage.size;\n                        let fileSize = '';\n                        let fileSizeUnit = '';\n                        let sOutput: string = nBytes + ' bytes';\n                        // optional code for multiples approximation\n                        for (let aMultiples = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\n                                 nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n\n                            sOutput = nApprox.toFixed(3) + ' ' + aMultiples[nMultiple] + ' (' + nBytes + ' bytes)';\n                            fileSize = nApprox.toFixed(0);\n                            fileSizeUnit = aMultiples[nMultiple];\n                            mspImage.sizeUnit = fileSizeUnit;\n                        }\n\n                        console.log(`File ${fileName} is scaled down to: ${sOutput}`);\n                        mspImage.sizeTxt = sOutput;\n\n                        // call reader with new transformed image\n                        reader.onload = function (evt: any) {\n\n                            mspImage.fileContent = evt.target.result;\n                            mspImage.id = sha1(mspImage.fileContent);\n\n                            // keep scaling down the image until the image size is\n                            // under max image size\n\n                            /** previously in appConstants */\n                            const maxSizeBytes = 1048576;\n                            if (mspImage.size > maxSizeBytes) {\n\n                                console.log('File size after scaling down: %d, max file size allowed: %d',\n                                    mspImage.size, maxSizeBytes);\n\n                                const imageTooBigError: CommonImageProcessingError =\n                                    new CommonImageProcessingError(CommonImageError.TooBig);\n\n                                imageTooBigError.maxSizeAllowed = maxSizeBytes;\n                                imageTooBigError.commonImage = mspImage;\n\n                                observer.error(imageTooBigError);\n                            } else {\n                                // log image info\n                                //   self.logImageInfo(\"msp_file-uploader_after_resize_attributes\", self.dataService.getMspUuid(), mspImage);\n                                observer.next(mspImage);\n                            }\n                        };\n                        reader.readAsDataURL(blob);\n                    },\n\n                    // What mime type to make the blob as and jpeg quality\n                    'image/jpeg', 0.5);\n            },\n            {\n                maxWidth: 2600 * scaleFactors.widthFactor,\n                maxHeight: 3300 * scaleFactors.heightFactor,\n                contain: true,\n                canvas: true,\n                meta: true,\n                orientation: true\n            }\n        );\n    }\n\n    /**\n     * Max retry scaling down for maxRetry times.\n     */\n    retryStrategy(maxRetry: number) {\n        return function (errors: Observable) {\n\n            /**Done: COMPLETE THIS! For some reason can't get scan() to work, types always malformed.*/\n\n            // return errors.pipe(\n            //     // scan((acc, curr) => {acc + curr}, 0)\n            //     scan((acc, error, index) => {\n            //         return acc + error;\n            //     }, 0)\n            // );\n\n            // Done: Unsure if we have to re-implement this line. It causes errors, but simply removing it may not be appropriate.\n            // NOTE: RxJS-compat might be saving us here and \"fixing\" the errors. See if errors return when we remove rxjs-compat.\n            // return errors.pipe(scan((acc, curr) => acc + curr, 0))\n\n\n            return errors.pipe(scan(\n                // return errors.pipe(\n                (acc, error: any, index) => {\n                    // console.log('Error encountered: %o', error);;\n\n                    /**\n                     * If the error is about file too big and we have not reach max retry\n                     * yet, theyt keep going to scaling down.\n                     */\n                    if (acc  void,\n                      invalidImageHanlder: (error: CommonImageProcessingError) => void) {\n        const reader = new FileReader();\n\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            console.log('loading image into an img tag: %o', progressEvt);\n            // Load into an image element\n            const imgEl: HTMLImageElement = document.createElement('img');\n            imgEl.src = (reader.result as string);\n\n            // Wait for onload so all properties are populated\n            imgEl.onload = (args) => {\n                console.log('Completed image loading into an img tag: %o', args);\n                return callback(imgEl, imageFile, nextPageNumber);\n            };\n\n            imgEl.onerror =\n                (args) => {\n\n                    // log it to the console\n                    console.log('This image cannot be opened/read, it is probably an invalid image. %o', args);\n\n                    // throw new Error('This image cannot be opened/read');\n                    const imageReadError: CommonImageProcessingError =\n                        new CommonImageProcessingError(CommonImageError.CannotOpen);\n\n                    imageReadError.rawImageFile = imageFile;\n\n                    return invalidImageHanlder(imageReadError);\n                };\n        };\n\n        reader.readAsDataURL(imageFile);\n    }\n\n    private readPDF(pdfFile: File, pdfScaleFactor: number,\n                    callback: (image: HTMLImageElement[], pdfFile: File) => void, error: (errorReason: any) => void) {\n\n        PDFJS.disableWorker = true;\n        PDFJS.disableStream = true;\n\n        const reader = new FileReader();\n        let currentPage = 1;\n        const canvas = document.createElement('canvas');\n        const imgElsArray: HTMLImageElement[] = [];\n        const ctx = canvas.getContext('2d');\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            const docInitParams = {data: reader.result};\n            // TODO - The 'as any' was added when porting to common library from MSP\n            PDFJS.getDocument((docInitParams as any)).then((pdfdoc) => {\n                const numPages = pdfdoc.numPages;\n                if (currentPage = 50) {\n\n            // log it\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(),\n            //     mspImage, `Number of image files exceeds max of ${50}`);\n\n            // log to console\n            console.log(`Max number of image file you can upload is ${50}.\n      This file ${mspImage.name} was not uploaded.`);\n        } else {\n            this.images.push(mspImage);\n            this.imagesChange.emit(this.images);\n            this.showError = false;\n            this.noIdImage = false;\n        }\n    }\n\n    handleError(error: CommonImageError, mspImage: CommonImage, errorDescription?: string) {\n\n        if (!mspImage) {\n            mspImage = new CommonImage();\n        }\n        // just add the error to mspImage\n        mspImage.error = error;\n\n        // log the error\n        if (error !== CommonImageError.PDFnotSupported) {\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(), mspImage,\n            //     '  mspImageFile: ' + mspImage.name + '  mspErrorNum: ' + error + '  mspError: ' +\n            //     error + '-' + errorDescription);\n        }\n\n        // console.log(\"error with image: \", mspImage);\n        this.errorDocument.emit(mspImage);\n    }\n\n    /**\n     * Reset input fields so that user can delete a file and\n     * immediately upload that file again.\n     */\n    resetInputFields() {\n        // let brosweFileInputElement = this.browseFileRef.nativeElement;\n        // let captureFileInputElement = this.captureFileRef.nativeElement;\n        this.browseFileRef.nativeElement.value = '';\n        // this.captureFileRef.nativeElement.value = '';\n    }\n\n    deleteImage(mspImage: CommonImage) {\n        this.resetInputFields();\n        this.images = this.images.filter(x => x.uuid !== mspImage.uuid);\n        this.imagesChange.emit(this.images);\n\n        // If there are no images yet, we have to reset the input so it triggers 'required'.\n        if ( this.required && this.images.length  {\n        //         // console.log('log rest service response: ');\n        //         // console.log(response);\n        //     },\n        //     (error) => {\n        //         console.log('HTTP error response from logging service: ');\n        //         console.log(error);\n        //     },\n        //     () => {\n        //         // console.log('log rest service completed!');\n        //     }\n        // );\n    }\n\n\n\n    /**\n     * Return true if the image size is within range\n     * @param file\n     */\n    checkImageDimensions(file: CommonImage): boolean {\n        if (file.naturalHeight  0;\n        }\n        return true;\n    }\n    // getApplicationType(): ApplicationBase  {\n    //     if (this.router.url.indexOf('/assistance/') !== -1) {\n    //         return this.dataService.finAssistApp;\n    //     }\n    //     if (this.router.url.indexOf('/application/') !== -1) {\n    //         return this.dataService.getMspApplication();\n    //     }\n    //     if (this.router.url.indexOf('/account/') !== -1) {\n    //         return this.dataService.getMspAccountApp();\n    //     }\n    // }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormActionBarComponent.html":{"url":"components/FormActionBarComponent.html","title":"component - FormActionBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormActionBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-action-bar\n            \n\n            \n                styleUrls\n                ./form-action-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-action-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'common-form-action-bar',\n  templateUrl: './form-action-bar.component.html',\n  styleUrls: ['./form-action-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormActionBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    if (!this.isLoading && this.canContinue) {\n      this.btnClick.emit($event);\n    }\n    $event.stopPropagation();\n    return false;\n  }\n}\n\n    \n\n    \n        \n    \n       {{submitLabel}} \n      \n    \n\n\n\n    \n\n    \n\n    \n                \n                    ./form-action-bar.component.scss\n                \n                @import 'variables.scss';\n\n.form-action-bar {\n    display: flex;\n    justify-content: flex-end;\n    padding: 1em;\n    background-color: hsla(210, 30%, 85%, 1);\n    transition: background-color 0.3s;\n    &.disabled { background-color: hsla(210, 10%, 85%, 1); }\n    \n    // If browser does not support positiion sticky (IE11), gracefully degrade\n    // back to default positioning (static). We do not use position: fixed, as\n    // that leads this bar to overlap the page footer.\n    position: -webkit-sticky;\n    position: sticky;\n    bottom: 0;\n    z-index: 10;\n    // Positioning  values match .container-fluid in app.component.scss\n    left: $container-gutter-size;\n    right: $container-gutter-size;\n\n    @include media-breakpoint-down(md){\n        left: ($container-gutter-size / 2);\n        right: ($container-gutter-size / 2);\n    }\n\n    @include media-breakpoint-down(sm){\n        left: 0;\n        right: 0;\n    }\n}\n\n.submit {\n    min-width: 240px;\n\n    @include media-breakpoint-down(sm){\n        min-width: 100%;\n    }\n}\n\n.btn{\n    white-space:normal !important;\n    word-wrap: break-word;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{submitLabel}}               '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormActionBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSubmitBarComponent.html":{"url":"components/FormSubmitBarComponent.html","title":"component - FormSubmitBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSubmitBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n\n\n    \n        Description\n    \n    \n        FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n(ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\nin question.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-submit-bar\n            \n\n            \n                styleUrls\n                ./form-submit-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-submit-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                increaseWidth\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Is the component nested inside a form, and not properly full-width in a\npage layout? We add negative margins to space out.\nCurrently tihs only works for the 'blank' layout type for the page\nframework, but would be easy to extend by adding more negative classes as\nneed be.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n/**\n * FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\n * in question.\n */\n@Component({\n  selector: 'common-form-submit-bar',\n  templateUrl: './form-submit-bar.component.html',\n  styleUrls: ['./form-submit-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormSubmitBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Is the component nested inside a form, and not properly full-width in a\n   * page layout? We add negative margins to space out.\n   *\n   * Currently tihs only works for the 'blank' layout type for the page\n   * framework, but would be easy to extend by adding more negative classes as\n   * need be.\n   */\n  @Input() increaseWidth: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n        \n           {{submitLabel}} \n          \n        \n    \n    \n    \n        \n    \n    \n\n    \n                \n                    ./form-submit-bar.component.scss\n                \n                @import 'variables.scss';\n\n.form-action-bar {\n    display: flex;\n    justify-content: flex-end;\n    padding: 1em;\n    background-color: hsla(210, 30%, 85%, 1);\n    transition: background-color 0.3s;\n    &.disabled { background-color: hsla(210, 10%, 85%, 1); }\n    \n    // If browser does not support positiion sticky (IE11), gracefully degrade\n    // back to default positioning (static). We do not use position: fixed, as\n    // that leads this bar to overlap the page footer.\n    position: -webkit-sticky;\n    position: sticky;\n    bottom: 0;\n    z-index: 10;\n    // Positioning  values match .container-fluid in app.component.scss\n    left: $container-gutter-size;\n    right: $container-gutter-size;\n\n    @include media-breakpoint-down(md){\n        left: ($container-gutter-size / 2);\n        right: ($container-gutter-size / 2);\n    }\n\n    @include media-breakpoint-down(sm){\n        left: 0;\n        right: 0;\n    }\n}\n\n.submit {\n    min-width: 240px;\n\n    @include media-breakpoint-down(sm){\n        min-width: 100%;\n    }\n}\n\n.btn{\n    white-space:normal !important;\n    word-wrap: break-word;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{submitLabel}}                                           '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSubmitBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoAddressResult.html":{"url":"interfaces/GeoAddressResult.html","title":"interface - GeoAddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoAddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/services/src/geocoder.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        fullAddress\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    private BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    private ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n\n    /** Defaults for service */\n    public defaultCountry: string = 'Canada';\n    public defaultProv: string = 'British Columbia';\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET,BLOCK,INTERSECTION')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    private processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            return {\n                fullAddress: props.fullAddress,\n                city,\n                street,\n                country: this.defaultCountry, // Default to Canada\n                province: this.defaultProv    // Default to BC\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocoderService.html":{"url":"injectables/GeocoderService.html","title":"injectable - GeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/services/src/geocoder.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                ADDRESS_URL\n                            \n                            \n                                    Private\n                                BASE_URL\n                            \n                            \n                                    Public\n                                defaultCountry\n                            \n                            \n                                    Public\n                                defaultProv\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                lookup\n                            \n                            \n                                    Private\n                                processResponse\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/services/src/geocoder.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/geocoder.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \nlookup(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/geocoder.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processResponse(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/services/src/geocoder.service.ts:58\n                \n            \n\n\n            \n                \n                    Formats the response from ADDRESS_URL, trimming irrelevant fields.\nThis works for other requests for the same API too, however it may error\nout on some items if matchPrecisionNot is not set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response from ADDRESS_URL\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoAddressResult[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:22\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:59\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/services/src/geocoder.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ADDRESS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}/addresses.json?`\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/services/src/geocoder.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocoder.api.gov.bc.ca'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/services/src/geocoder.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultCountry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Canada'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/services/src/geocoder.service.ts:28\n                            \n                        \n\n                \n                    \n                        Defaults for service \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultProv\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'British Columbia'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/services/src/geocoder.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:16\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:11\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    private BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    private ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n\n    /** Defaults for service */\n    public defaultCountry: string = 'Canada';\n    public defaultProv: string = 'British Columbia';\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET,BLOCK,INTERSECTION')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    private processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            return {\n                fullAddress: props.fullAddress,\n                city,\n                street,\n                country: this.defaultCountry, // Default to Canada\n                province: this.defaultProv    // Default to BC\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MaskModel.html":{"url":"classes/MaskModel.html","title":"class - MaskModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MaskModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/models/src/mask.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onUpdate\n                            \n                            \n                                upperCasePipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/models/src/mask.model.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/mask.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/mask.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/mask.model.ts:34\n                \n            \n\n\n            \n                \n                    Updates the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/mask.model.ts:27\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/models/src/mask.model.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/models/src/mask.model.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/models/src/mask.model.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/models/src/mask.model.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import {EventEmitter, Input, Output} from '@angular/core';\nimport { Base } from './base';\n\nexport const LETTER = /[A-Z]/i; // Ignore case here, then upperCase it via pipe.\nexport const NUMBER = /\\d/;\nexport const SPACE = ' ';\n\nexport class MaskModel extends Base {\n\n  @Input() value: string;\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = true;\n\n  public mask: any;\n  public placeholder: string;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  /**\n   * Updates the value\n   */\n  onUpdate( value: string ) {\n\n    // Emit value without spaces\n    this.valueChange.emit( value );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFrameworkComponent.html":{"url":"components/PageFrameworkComponent.html","title":"component - PageFrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-framework/page-framework.component.ts\n\n\n    \n        Description\n    \n    \n        The \"Page Framework\" is a template to be used on FPCare pages to ensure\nconsistent layout.  It applies to most pages, but should NOT be used on\nDashboards, or full-width table components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \nThis will go in the middle column\nSo will this\n This will go in the side column, or tips.\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-framework\n            \n\n            \n                styleUrls\n                ./page-framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"single\" | \"double\" | \"blank\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The \"Page Framework\" is a template to be used on FPCare pages to ensure\n * consistent layout.  It applies to most pages, but should NOT be used on\n * Dashboards, or full-width table components.\n *\n * @example\n * \n *        This will go in the middle column\n *        So will this\n *         This will go in the side column, or tips.\n * \n *\n * @export\n */\n@Component({\n  selector: 'common-page-framework',\n  templateUrl: './page-framework.component.html',\n  styleUrls: ['./page-framework.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageFrameworkComponent implements OnInit {\n\n  @Input() layout: 'single' | 'double' | 'blank' | 'default' = 'default';\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n  \n  \n\n    \n\n    \n                \n                    ./page-framework.component.scss\n                \n                @import 'variables.scss';\n\ncommon-page-framework {\n  background: $white;\n  display: block;\n}\n\n// for use as titles in asides / info boxes\nh5, .h5 {\n  font-size: $h5-font-size; // 1rem;\n  font-weight: bold;\n  margin-bottom: 0;\n\n  p + & {\n    margin-top: 1.5rem;\n  }\n}\n\n.aside-col aside {\n  background: $gray;\n  padding: 1em;\n  border-radius: 5px;\n  @include media-breakpoint-up(md){\n    margin-top: 1rem; // Align with the top of the title (for desktop)\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageSectionComponent.html":{"url":"components/PageSectionComponent.html","title":"component - PageSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-section/page-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-section\n            \n\n            \n                styleUrls\n                ./page-section.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/page-section/page-section.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"double\" | \"tips\" | \"noTips\"\n\n                    \n                \n                \n                    \n                        Default value : 'tips'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-section/page-section.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-section/page-section.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'common-page-section',\n  templateUrl: './page-section.component.html',\n  styleUrls: ['./page-section.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PageSectionComponent implements OnInit {\n\n  @Input() layout: 'double' | 'tips' | 'noTips' = 'tips';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n      \n      \n    \n  \n\n\n\n\n\n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./page-section.component.scss\n                \n                @import 'variables.scss';\n\ncommon-page-section {\n  display: block;\n}\n\n// for use as titles in asides / info boxes\nh5, .h5 {\n  font-size: $h5-font-size; // 1rem;\n  font-weight: bold;\n  margin-bottom: 0;\n\n  p + & {\n    margin-top: 1.5rem;\n  }\n}\n\n.aside-col aside {\n  background: $gray;\n  padding: 1em;\n  border-radius: 5px;\n  @include media-breakpoint-up(md){\n    margin-top: 1rem; // Align with the top of the title (for desktop)\n  }\n\n  ul {\n    padding-left: 0em;\n    list-style-type: none;\n    > li:before {\n      content: \" - \";\n      text-indent: -5px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/password/password.component.ts\n\n\n    \n        Description\n    \n    \n        PasswordComponent is a text input for a user's password. It includes:\n\nA password strength bar\nMinimum length validations\n\nNote - if your application has requirements to check things like username is not\npresent in password, we recommend doing this in the (passwordChange) callback.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                criteriaMsg\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                    Public\n                                hideValue\n                            \n                            \n                                    Private\n                                minLenMsgSeg1\n                            \n                            \n                                    Private\n                                minLenMsgSeg2\n                            \n                            \n                                    Public\n                                pswdStrength\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                strengthPercentage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPasswordStrength\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputBlur\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                label\n                            \n                            \n                                maxLen\n                            \n                            \n                                minLen\n                            \n                            \n                                objectID\n                            \n                            \n                                password\n                            \n                            \n                                pwdCriteria\n                            \n                            \n                                showPasswordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                passwordChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/password/password.component.ts:81\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         PasswordErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '32'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pwdCriteria\n                    \n                \n                \n                    \n                        Type :     string | RegExp\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPasswordStrength\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:62\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:67\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:paste(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:138\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPasswordStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordStrength(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:153\n                \n            \n\n\n            \n                \n                    Get the strength of the password\n0 = too guessable: risky password. (guesses = 10^10)  https://github.com/dropbox/zxcvbn\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonInputBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:127\n                \n            \n\n\n            \n                \n                    Passes the value entered back to the calling component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value the was entered by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteriaMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' contains invalid characters.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PasswordErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' must be at least '\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' characters in length.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pswdStrength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' is required.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            strengthPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../../models/src/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n\n  \n    = 4? 'bg-success' : (pswdStrength >= 3? 'bg-warning' : 'bg-danger')}}\"\n        role=\"progressbar\"\n        [style.width]='strengthPercentage + \"%\"'\n        [attr.aria-valuenow]=\"strengthPercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\">\n    \n  \n  = 4? 'text-success' : (pswdStrength >= 3? 'text-warning' : 'text-danger')}}\">\n\n\n\n  \n    {{errMsg.required}}\n  \n  \n      {{errMsg.minLength}}\n  \n  \n      {{errMsg.criteria}}\n  \n\n\n\n    \n\n    \n                \n                    ./password.component.scss\n                \n                @import 'variables.scss';\n\n/* margin top/bottom moves eye to middle of text box floating right */\n.password-field-icon {\n    float: right;\n    margin-left: -25px;\n    margin-top: -25px;\n    margin-right: .5rem;\n    position: relative;\n    z-index: 2;\n  }\n\n  .password-field {\n    padding-right: 2rem;\n  }\n\n  .password-strength-bar {\n      min-width: 0%;\n      max-width: 75%;\n      height: .5rem;\n      margin-top: 1em;\n  }\n\n  .password-progress-label {\n    float: right;\n    margin-left: -15px;\n    margin-top: -15px;\n    position: relative;\n    z-index: 2;\n  }\n\n  .password-strength-bar + .text-success::after {\n    content: 'Good';\n  }\n\n  .password-strength-bar + .text-warning::after {\n    content: 'OK';\n  }\n\n .password-strength-bar + .text-danger::after {\n    content: 'Bad';\n  }\n\n  input {\n    width: 100%;\n  }\n\n\n// Remove the (duplicate) eye that IE automatically adds to password inputs.\ninput[type=password]::-ms-reveal,\ninput[type=password]::-ms-clear\n{\n    display: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      = 4? \\'bg-success\\' : (pswdStrength >= 3? \\'bg-warning\\' : \\'bg-danger\\')}}\"        role=\"progressbar\"        [style.width]=\\'strengthPercentage + \"%\"\\'        [attr.aria-valuenow]=\"strengthPercentage\"        aria-valuemin=\"0\"        aria-valuemax=\"100\">        = 4? \\'text-success\\' : (pswdStrength >= 3? \\'text-warning\\' : \\'text-danger\\')}}\">      {{errMsg.required}}          {{errMsg.minLength}}          {{errMsg.criteria}}  '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordErrorMsg.html":{"url":"interfaces/PasswordErrorMsg.html","title":"interface - PasswordErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/password/password.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for passing in error messages\nExample:\n  errorMessages = {\n       required: this.componentLabel + ' is required.',\n       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n       criteria: this.componentLabel + ' does not meet password criteria.'\n     }\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        minLength\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                    \n                                \n                                \n                                    \n                                        minLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../../models/src/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/models/src/person.model.ts\n        \n\n            \n                Description\n            \n            \n                Person, each project can extend this person class\nNPM package dependencies:\n  a) moment\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateOfBirth\n                            \n                            \n                                    Public\n                                dobFormat\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                getAge\n                            \n                            \n                                isDobEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dateOfBirthShort\n                                \n                                \n                                    formatDateOfBirth\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SimpleDate\n\n                        \n                    \n                    \n                        \n                            Default value : { year: null, month: null, day: null }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/person.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YYYY/MM/DD'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/person.model.ts:19\n                            \n                        \n\n                \n                    \n                        Format to display birthdate \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/person.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/person.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/models/src/person.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Person)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/person.model.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAge\n                        \n                        \n                    \n                \n            \n            \n                \ngetAge()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/person.model.ts:85\n                \n            \n\n\n            \n                \n                    Calculates the age from date of birth \n\n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDobEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisDobEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/models/src/person.model.ts:45\n                \n            \n\n\n            \n                \n                    Indicates whether or not the date of birth is empty \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dateOfBirthShort\n                    \n                \n\n                \n                    \n                        getdateOfBirthShort()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/models/src/person.model.ts:25\n                                \n                            \n                    \n                        \n                                Returns DoB in YYYYMMDD format, used by API. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formatDateOfBirth\n                    \n                \n\n                \n                    \n                        getformatDateOfBirth()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/models/src/person.model.ts:35\n                                \n                            \n                    \n                        \n                                Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/models/src/person.model.ts:53\n                                \n                            \n                    \n                        \n                                Concatenates the first and last name together \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(fullName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/models/src/person.model.ts:71\n                                \n                            \n                    \n                        \n                                Sets the full name for the person (first, middle and last names)\nNOTE: Just for development with dummy data and unit tests\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fullName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import * as moment_ from 'moment';\nimport { Base } from './base';\nimport { SimpleDate } from './simple-date.interface';\nconst moment = moment_;\n\n/**\n * Person, each project can extend this person class\n * NPM package dependencies:\n *  a) moment\n */\nexport class Person extends Base {\n\n  // Parts of a person's name\n  public firstName: string;\n  public middleName: string;\n  public lastName: string;\n\n  /** Format to display birthdate */\n  public dobFormat = 'YYYY/MM/DD';\n\n  // Initialize dob to nulls\n  public dateOfBirth: SimpleDate = { year: null, month: null, day: null };\n\n  /** Returns DoB in YYYYMMDD format, used by API. */\n  get dateOfBirthShort(): string {\n    return this.isDobEmpty() ? null :\n        moment( {\n          year: this.dateOfBirth.year,\n          month: this.dateOfBirth.month - 1,\n          day: this.dateOfBirth.day\n        }).format( 'YYYYMMDD' );\n  }\n\n  /** Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes */\n  get formatDateOfBirth(): string {\n    return this.isDobEmpty() ? null :\n        moment( {\n          year: this.dateOfBirth.year,\n          month: this.dateOfBirth.month - 1,\n          day: this.dateOfBirth.day\n        }).format( this.dobFormat );\n  }\n\n  /** Indicates whether or not the date of birth is empty */\n  isDobEmpty(): boolean {\n    return Object.keys( this.dateOfBirth )\n        .map( key => this.dateOfBirth[key] )\n        .filter( x => x ) // Filter out null/undefined\n        .length !== 3;\n  }\n\n  /** Concatenates the first and last name together */\n  get name(): string {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /**\n   * Sets the full name for the person (first, middle and last names)\n   * NOTE: Just for development with dummy data and unit tests\n   */\n  set name( fullName: string ) {\n\n    const names = fullName.split( ' ') ;\n    this.firstName = names[0];\n\n    if ( names.length === 2 ) {\n      this.lastName = names[1];\n    } else if ( names.length === 3 ) {\n      this.middleName = names[1];\n      this.lastName = names[2];\n    }\n  }\n\n  /** Calculates the age from date of birth */\n  getAge(): Number {\n    const dobDt = new Date( this.dateOfBirth.year, this.dateOfBirth.month, this.dateOfBirth.day );\n    return Math.ceil( moment( ).diff( dobDt, 'year', true ) );\n  }\n\n  /* Copy function */\n  copy( object: Person ) {\n    this.firstName = object.firstName;\n    this.middleName = object.middleName;\n    this.lastName = object.lastName;\n    this.dateOfBirth.month = object.dateOfBirth.month;\n    this.dateOfBirth.day = object.dateOfBirth.day;\n    this.dateOfBirth.year = object.dateOfBirth.year;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostalCodeComponent.html":{"url":"components/PostalCodeComponent.html","title":"component - PostalCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostalCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/postal-code/postal-code.component.ts\n\n\n\n    \n        Extends\n    \n    \n                MaskModel\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-postal-code\n            \n\n            \n                styleUrls\n                ./postal-code.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./postal-code.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: NgForm }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pcFormat\n                            \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onUpdate\n                            \n                            \n                                upperCasePipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayMask\n                            \n                            \n                                label\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                disabled\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/postal-code/postal-code.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Postal Code'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'A1A 1A1'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:14\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:11\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:12\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MaskModel\n\n                \n            \n            \n                \n                        Defined in         MaskModel:34\n\n                \n            \n\n\n            \n                \n                    Updates the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MaskModel\n\n                \n            \n            \n                \n                        Defined in         MaskModel:27\n\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pcFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { MaskModel, LETTER, NUMBER, SPACE } from '../../../models/src/mask.model';\n\n@Component({\n  selector: 'common-postal-code',\n  templateUrl: './postal-code.component.html',\n  styleUrls: ['./postal-code.component.scss'],\n\n  // Re-use the same ngForm that it's parent is using. The component will show\n  // up in its parents `this.form`, and will auto-update `this.form.valid`\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm }]\n})\nexport class PostalCodeComponent extends MaskModel implements OnInit {\n\n  @Input() label: string = 'Postal Code';\n  @Input() displayMask: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() placeholder: string = 'A1A 1A1';\n\n  public pcFormat: RegExp = /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/;\n\n\n  constructor() {\n    super();\n    this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];\n   }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      Must be in the format {{placeholder}}.\n    \n  \n\n\n\n  \n\n  \n  \n    \n      Postal Code is required.\n    \n  \n\n\n    \n\n    \n                \n                    ./postal-code.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{label}} is required.              Must be in the format {{placeholder}}.                      Postal Code is required.      '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostalCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProvinceList.html":{"url":"interfaces/ProvinceList.html","title":"interface - ProvinceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProvinceList\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        description\n                                \n                                \n                                        provinceCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provinceCode\n                                    \n                                \n                                \n                                    \n                                        provinceCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ViewChild,\n  ElementRef,\n  OnChanges\n} from '@angular/core';\nimport { ControlContainer, NgForm, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Address } from '../../../models/src/address.model';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  switchMap,\n  catchError\n} from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap';\nimport { Base } from '../../../models/src/base';\nimport { GeocoderService, GeoAddressResult } from '../../../services/src/geocoder.service';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport interface ProvinceList {\n  country: string;\n  provinceCode: string;\n  description: string;\n}\n\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddressComponent),\n      multi: true\n    }\n  ],\n})\nexport class AddressComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n    // Field lengths\n    public CITY_MAXLEN = '100';\n    public PROV_MAXLEN = '250';\n    public STREET_RURAL_MAXLEN = '1000';\n\n\n  // TODO: Create Unit tests for this component\n  // Exists for unit testing to validate errors set\n  @ViewChild('provRef') provRef: ElementRef;\n  @ViewChild('streetRef') streetRef: ElementRef;\n  @ViewChild('cityRef') cityRef: ElementRef;\n  @ViewChild('postalRef') postalRef: ElementRef;\n\n  @Input() disabled: boolean = false;\n  @Input() isRequired: boolean = false;\n  @Input() address: Address = new Address();\n  @Input() countryList: CountryList[];\n  @Input() defaultCountry: string;\n  @Input() provinceList: ProvinceList[];\n  @Input() defaultProvince: string;\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n\n  public onModelChange: any;\n  public onTouch: any;\n\n  /** Search string to store result from GeoCoder request */\n  public search: string;\n  /**\n   * The list of results, from API, that is passed to the typeahead list\n   * Result from GeoCoderService address lookup\n   */\n  public typeaheadList$: Observable;\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  public provList: ProvinceList[];\n\n  constructor(private geocoderService: GeocoderService) {\n    super();\n  }\n\n  ngOnInit() {\n    // Set up for using GeoCoder\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => {\n        return this.geocoderService.lookup(searchPhrase);\n      }),\n      // tap(log => console.log('taplog', log)),\n      catchError(err => this.onError(err))\n    );\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.address.province = this.setDefaultProvinceAsOption(value);\n    this.address.country = value;\n    this.updateProvList();\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  setProvince(value: string) {\n    this.address.province = value;\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  setStreetAddress(value: string) {\n    this.address.street = value;\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  setCity(value: string) {\n    this.address.city = value;\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  get postalCode() {\n    return this.address.postal;\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  set postalCode(value: string) {\n    this.address.postal = value.toUpperCase();\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  isCanada(): boolean {\n    return this.address && 'CAN' === this.address.country;\n  }\n\n  isCanadaUSA(): boolean {\n    return (this.address && 'USA' === this.address.country) || this.isCanada();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if ( !this.address.country ) {\n        // Set defaults\n        this.address.country = this.setDefaultCountryAsOption();\n      }\n      // Set defaults\n      this.address.province = this.setDefaultProvinceAsOption( this.address.country );\n\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if ( !this.address.province ) {\n        // Set defaults\n        this.address.province = this.setDefaultProvinceAsOption( this.address.country );\n      }\n      this.updateProvList();\n    }\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.address.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption( country: string ): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n             val.description === this.defaultProvince) &&\n             val.country === country\n    );\n    return (provObj ? provObj.provinceCode : null );\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    const countryObj = !this.countryList\n    ? null\n    : this.countryList.find(\n        val =>\n          val.countryCode === this.defaultCountry ||\n          val.description === this.defaultCountry\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    return this.isCanada() && 'BC' === this.address.province;\n  }\n\n  onKeyUp(event: KeyboardEvent): void {\n    /**\n     * Filter out 'enter' and other similar keyboard events that can trigger\n     * when user is selecting a typeahead option instead of entering new text.\n     * Without this filter, we do another HTTP request + force disiplay the UI\n     * for now reason\n     */\n    if (event.keyCode === 13 || event.keyCode === 9) {\n      // enter & tab\n      return;\n    }\n\n    this.searchText$.next(this.search);\n  }\n\n  onError(err: any): Observable {\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  onSelect(event: TypeaheadMatch): void {\n    const data: GeoAddressResult = event.item;\n\n    this.search = data.street;\n    this.address.street = data.street;\n    this.address.city = data.city;\n    this.address.province = 'BC';\n    this.address.country = 'CAN';\n    this.addressChange.emit(this.address);\n    this.onModelChange(this.address);\n    this.onTouch();\n  }\n\n  writeValue(addr: Address) {\n    this.address = addr;\n  }\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerPayload.html":{"url":"injectables/ServerPayload.html","title":"injectable - ServerPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                expiry\n                            \n                            \n                                nonce\n                            \n                            \n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nonce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedCoreModule.html":{"url":"modules/SharedCoreModule.html","title":"module - SharedCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nAddressComponent\n\nAddressComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDayValidationDirective\n\nDayValidationDirective\n\nSharedCoreModule -->\n\nDayValidationDirective->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nYearValidateDirective\n\nYearValidateDirective\n\nSharedCoreModule -->\n\nYearValidateDirective->SharedCoreModule\n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDayValidationDirective \n\nDayValidationDirective \n\nDayValidationDirective  -->\n\nSharedCoreModule->DayValidationDirective \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nYearValidateDirective \n\nYearValidateDirective \n\nYearValidateDirective  -->\n\nSharedCoreModule->YearValidateDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/lib/shared-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddressComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DayValidationDirective\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            YearValidateDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddressComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DayValidationDirective\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            YearValidateDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreBreadcrumbComponent } from './components/core-breadcrumb/core-breadcrumb.component';\nimport { FormActionBarComponent } from './components/form-action-bar/form-action-bar.component';\nimport { PageFrameworkComponent } from './components/page-framework/page-framework.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { WizardProgressBarComponent } from './components/wizard-progress-bar/wizard-progress-bar.component';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { ProgressbarModule, ModalModule, TypeaheadMatch, TypeaheadModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { DateComponent } from './components/date/date.component';\nimport { DayValidationDirective } from './components/date/day-validation.directive';\nimport { DateFieldFormatDirective } from './components/date/date-field-format.directive';\nimport { YearValidateDirective } from './components/date/year-validate.directive';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { FormSubmitBarComponent } from './components/form-submit-bar/form-submit-bar.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { PostalCodeComponent } from './components/postal-code/postal-code.component';\nimport { PageSectionComponent } from './components/page-section/page-section.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { AddressComponent } from './components/address/address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule,\n    NgxMyDatePickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgSelectModule,\n    TypeaheadModule.forRoot()\n  ],\n  declarations: [\n    CoreBreadcrumbComponent,\n    FormActionBarComponent,\n    PageFrameworkComponent,\n    PasswordComponent,\n    WizardProgressBarComponent,\n    DateComponent,\n    DayValidationDirective,\n    DateFieldFormatDirective,\n    YearValidateDirective,\n    DatepickerComponent,\n    FileUploaderComponent,\n    ThumbnailComponent,\n    FormSubmitBarComponent,\n    PostalCodeComponent,\n    PageSectionComponent,\n    DropdownComponent,\n    ToggleComponent,\n    AddressComponent\n  ],\n  exports: [\n    CoreBreadcrumbComponent,\n    FormActionBarComponent,\n    PageFrameworkComponent,\n    PasswordComponent,\n    WizardProgressBarComponent,\n    DateComponent,\n    DayValidationDirective,\n    DateFieldFormatDirective,\n    YearValidateDirective,\n    DatepickerComponent,\n    FileUploaderComponent,\n    ThumbnailComponent,\n    FormSubmitBarComponent,\n    PostalCodeComponent,\n    PageSectionComponent,\n    DropdownComponent,\n    ToggleComponent,\n    AddressComponent\n  ],\n  providers: [\n    NgForm\n  ]\n})\nexport class SharedCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDate.html":{"url":"interfaces/SimpleDate.html","title":"interface - SimpleDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/models/src/simple-date.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface used in the following components/models:\n  a) person.model.ts\n  b) date.component.ts\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDate {\n  day: number;\n  month: number;\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailComponent.html":{"url":"components/ThumbnailComponent.html","title":"component - ThumbnailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/thumbnail/thumbnail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-thumbnail\n            \n\n            \n                styleUrls\n                ./thumbnail.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullSizeViewModal\n                            \n                            \n                                scaledWidth\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                hideFullSizeView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showFullSizeView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageObject\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageObject\n                    \n                \n                \n                    \n                        Type :         CommonImage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nhideFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nshowFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullSizeViewModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fullSizeViewModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaledWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, OnInit, Input, Output, EventEmitter, ViewContainerRef } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { CommonImage } from '../../../images/src/images';\n\n@Component({\n  selector: 'common-thumbnail',\n  templateUrl: './thumbnail.html',\n  styleUrls: ['./thumbnail.scss']\n})\nexport class ThumbnailComponent implements OnInit {\n  @Input() imageObject: CommonImage;\n  @Input() reviewMode: boolean = false;\n  @Output() deleteImage: EventEmitter = new EventEmitter();\n  @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n\n  private viewContainerRef: ViewContainerRef;\n  constructor(viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  scaledWidth: number = 300;\n  ngOnInit() {\n\n    const scaledWidthString: string = (180 * this.imageObject.naturalWidth / this.imageObject.naturalHeight).toFixed(0);\n    // console.log('scaled width: ' + scaledWidthString);\n    this.scaledWidth = parseInt(scaledWidthString, 10);\n\n    if (this.scaledWidth > 250) {\n      // console.log('Scaled width > 250, drop it down to 250');\n      this.scaledWidth = 250;\n    } else if (this.scaledWidth \n    \n\n    \n        \n   300}\"\n    (click)=\"showFullSizeView()\">\n  \n    Remove\n  \n\n\n\n  \n    \n      \n        {{imageObject.name}}\n        \n          &times;\n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./thumbnail.scss\n                \n                @import 'variables.scss';\n\n.thumbnail-container {\n  transition: 0.3s;\n  transform: translateY(0);\n\n  .image-thumbnail, .image-thumbnail-width-priority {\n    padding: 2px 2px 0 2px;\n    border-radius: 5px 5px 0px 0px;\n\n    &:hover {\n      cursor: -webkit-zoom-in;\n      cursor: zoom-in;  \n    }\n  }\n\n  .image-thumbnail {\n    max-height: 100px;\n    height: auto;\n    max-width: 100%;\n  }\n  .image-thumbnail-width-priority {\n    max-width: 270px;\n    width: auto;\n    max-height: 100%;\n  }\n\n  &:hover {\n    box-shadow: 0px 15px 10px -10px rgba(0, 0, 0, 0.1);\n    transform: translateY(-5px);\n\n    .action-strip {\n      background: darken($gray, 2.5%);\n    }\n  }\n\n  .action-strip {\n    height: 2em;\n    border-radius: 0px 0px 5px 5px;\n    text-align: right;\n    font-size: small;\n    margin: 0 2px 0 2px;\n    color: $color-danger;\n    padding: 0.3em;\n    transition: 0.3s;  \n  \n    a {\n      text-decoration: none;\n    }\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   300}\"    (click)=\"showFullSizeView()\">      Remove                      {{imageObject.name}}                  ×                                                                                '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/toggle/toggle.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-toggle\n            \n\n            \n                styleUrls\n                ./toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/toggle/toggle.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Base } from '../../../models/src/base';\n\n@Component({\n  selector: 'common-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent extends Base implements OnInit {\n\n  @Input() data: boolean;\n  @Input() label: string;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n   {{label}}\n   \n      \n      No\n   \n   \n      \n      Yes\n   \n\n\n\n    \n\n    \n                \n                    ./toggle.component.scss\n                \n                @import 'variables.scss';\n\n$toggle--top: 0rem;\n$toggle--width: 1.3rem;\n$toggle--height: 1.3rem;\n$toggle--left-distance: 1.75rem;\n\n.toggle--legend {\n  font-size: inherit;\n  font-weight: bold;\n}\n\n.custom-control {\n  padding-right: 1.5rem;\n  padding-left: 0rem;\n}\n.custom-control-label {\n  cursor: pointer;\n}\n\n.custom-radio .custom-control-label::before {\n  border-color: black;\n  border-style: solid;\n  border-width: 1.5px;\n}\n\n.custom-control-label::before {\n  top: $toggle--top;\n  width: $toggle--width;\n  height: $toggle--height;\n  background-color: $color-white;\n  left: $toggle--left-distance;\n}\n\n.custom-control-label::after {\n  top: $toggle--top;\n  width: $toggle--width;\n  height: $toggle--height;\n  left: $toggle--left-distance;\n}\n\n.custom-radio .custom-control-input:checked ~ .custom-control-label::before {\n  background-color: $color-white;\n  border-color: $color-primary;\n}\n\n.custom-control-input:checked ~ .custom-control-label::before {\n  color: $white;\n  background-color: $color-white;\n  border-color: $color-primary;\n}\n\n// hex 000099 - blue - appears 000036 is darker using this url.\n.custom-radio .custom-control-input:checked ~ .custom-control-label::after {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-3.75 -3.75 8.25 8.25'%3E%3Ccircle r='3.5' fill='%23000099'/%3E%3C/svg%3E\") !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{label}}               No                  Yes   '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardProgressBarComponent.html":{"url":"components/WizardProgressBarComponent.html","title":"component - WizardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n\n\n    \n        Description\n    \n    \n        NPM Dependencies:\n  a) rxjs\n  b) ngx-bootstrap\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-wizard-progress-bar\n            \n\n            \n                styleUrls\n                ./wizard-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeIndex\n                            \n                            \n                                    Private\n                                routerEvents$\n                            \n                            \n                                stepContainer\n                            \n                            \n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateProgressPercentage\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollStepIntoView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressSteps\n                    \n                \n                \n                    \n                        Type :         WizardProgressItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateProgressPercentage\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateProgressPercentage()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActiveIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetActiveIndex(url)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollStepIntoView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollStepIntoView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Primarily for mobile, this horizontally scrolls the step into view.\nNote - be very careful with any changes to this function because it steps\noutside of Angular to call native browser functions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('steps')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef,\n         ViewChildren, QueryList, ChangeDetectionStrategy,\n         ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { WizardProgressItem } from '../../../models/src/container';\n\n/**\n * NPM Dependencies:\n *  a) rxjs\n *  b) ngx-bootstrap\n */\n\n@Component({\n  selector: 'common-wizard-progress-bar',\n  templateUrl: './wizard-progress-bar.component.html',\n  styleUrls: ['./wizard-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardProgressBarComponent implements OnInit, OnDestroy {\n  @Input() progressSteps: WizardProgressItem[] = [];\n  @ViewChild('stepContainer') stepContainer: ElementRef;\n  @ViewChildren('steps') steps: QueryList>;\n\n  public activeIndex: number;\n\n  private routerEvents$: Subscription;\n\n  constructor(private router: Router, private cd: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n\n    // Update the progress bar view on route change and _only_ route chaange.\n    // Skip most of Angular's ChangeDetection in favour of manually optimizing.\n    this.routerEvents$ = this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n      map((ev: NavigationEnd) => ev.url)\n    ).subscribe(url => {\n      this.activeIndex = this.getActiveIndex(url);\n      this.cd.detectChanges();\n      this.scrollStepIntoView();\n    });\n\n    // Must schedule first run manually, or bar won't be set.\n    this.activeIndex = this.getActiveIndex(this.router.url);\n  }\n\n  ngOnDestroy() {\n    this.cd.detach();\n    this.routerEvents$.unsubscribe();\n  }\n\n  calculateProgressPercentage(): Number {\n    const denominator = this.progressSteps.length;\n    const numerator = this.activeIndex + 1;\n\n    if (denominator === 0 || numerator > denominator) {\n      return 100;\n    }\n\n    // Because we've switched from space-evenly to space-around (for IE), we\n    // have to handle the half-space that space-around adds to the start/end of\n    // the container\n    const halfSpace = 1 / (denominator * 2);\n    return Math.round(((numerator / denominator) - halfSpace) * 100);\n  }\n\n  getActiveIndex(url): number {\n    return this.progressSteps.findIndex(x => url.includes(x.route));\n  }\n\n   /**\n   * Primarily for mobile, this horizontally scrolls the step into view.\n   *\n   * Note - be very careful with any changes to this function because it steps\n   * outside of Angular to call native browser functions.\n   */\n  private scrollStepIntoView() {\n    const target = this.steps.toArray()[this.activeIndex];\n    const container = document.getElementsByClassName('horizontal-scroll');\n    if (container.length === 1) {\n      // Since we're already breaking out of Angular, we try and be safe by using a try/catch.\n      // Otherwise an error here could halt execution,\n      try {\n        container[0].scrollLeft = Math.abs(target.nativeElement.offsetLeft - (window.outerWidth / 2));\n      } catch (error) {}\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n      {{step.title}}\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./wizard-progress-bar.component.scss\n                \n                @import 'variables.scss';\n\n:host {\n  flex: 1;\n\n  //Styling to handle .horizontal-overflow (in core-breadcrumb.component.scss)\n  padding: 0 2em;\n  min-height: 2em;\n  min-width: 650px;\n}\n\n.step-container {\n  display: flex;\n  // IE10 doesn't support space-evenly, so use space-between\n  justify-content: space-around;\n}\n\nprogressbar {\n  background-color: $gray-500;\n  height: 0.5rem;\n}\n\n.step {\n  $markerSize: 1em;\n  position: relative;\n  transform: translateX(-$markerSize / 2);\n  margin-top: 0.25rem;\n\n  &:before {\n    content: \" \";\n    position: absolute;\n    width: $markerSize;\n    height: $markerSize;\n    border-radius: 100%;\n    background: white;\n    border: 3px solid $color-primary;\n\n    // Center above\n    right: 0;\n    left: 0;\n    margin: 0 auto;\n    bottom: 100%;\n  }\n\n  &:not(.active) .step-text { opacity: 0.8;}\n  &:not(.active):before { background: $gray-400; }\n\n  // Take the text out of the CSS layout with position absolute so that the\n  // width of the text does not mess up the math of the positioning of the\n  // elements.\n  .step-text {\n    position: absolute;\n    transform: translateX(-33%);\n    white-space: nowrap;\n    font-size: small;\n  }\n}\n\n\n.progress-background {\n  width: 100%;\n  background-color: blue;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{step.title}}      '\n    var COMPONENTS = [{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate]'}];\n    var ACTUAL_COMPONENT = {'name': 'WizardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardProgressItem.html":{"url":"interfaces/WizardProgressItem.html","title":"interface - WizardProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/models/src/container.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        route\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/YearValidateDirective.html":{"url":"directives/YearValidateDirective.html","title":"directive - YearValidateDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  YearValidateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/year-validate.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => YearValidateDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonYearValidate]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonYearValidate\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonYearValidate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/year-validate.directive.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n// TODO:  Create a message structure to pass in error messages similar to password module.\n\n@Directive({\n  selector: '[commonYearValidate]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => YearValidateDirective), multi: true}\n  ]\n})\nexport class YearValidateDirective implements Validator  {\n\n  @Input() commonYearValidate: string;\n\n  validate( control: FormControl ): {[key: string]: any} | null {\n    const date = control.parent.value;\n\n    // console.log( 'validate year: ', control.value );\n\n    if ( !control.value ) {\n      return null; // empty value\n    }\n\n    const year: number = parseInt( control.value, 10 );\n\n    // Only process if value is numeric\n    if ( !isNaN(  year ) ) {\n      const currentYear = moment().get( 'y' );\n\n      if ( currentYear - year > 150 ) {\n        return { 'yearDistantPast': true };\n      }\n\n      if ( year - currentYear > 150 ) {\n        return { 'yearDistantFuture': true} ;\n      }\n\n      // Check whether dates can be present or past\n      if ( this.commonYearValidate && this.commonYearValidate !== 'any' &&\n           !isNaN( date.day )  && !isNaN( date.month ) ) {\n\n        const diff = moment( { year: year, month: date.month, day: date.day } )\n          .diff( moment(), 'days', true );\n\n         /**\n          * Validate current date as if it's a future date, and reject it when only\n          * accepting past dates.  We accomplish this by comparing diff against 1.\n          */\n          if ( diff = -1 && this.commonYearValidate === 'past' ) {\n            return { 'noFutureDatesAllowed': true };\n          }\n      }\n\n      return null;\n    }\n\n    return { 'invalidValue': true };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nUnreleased \"moh-common-lib\" (2019-05-07)\nBug Fixes\n\nAddressComponent: Include Typeahead module necessary to compile. (7d2e7cd)\n\nFeatures\n\nAddressComponent: Create AddressComponent copied from prime-web. (238c01d)\nAddressComponent: Implement NG_VALUE_ACCESSOR for reactive forms. (8d79d30)\nE2E: Create AbstractTestPage in moh-common-lib/e2e (95f2a31)\n\n0.0.30 \"moh-common-lib\" (2019-04-25)\nBug Fixes\n\nDatepicker: Name attr is always unique thanks to UUID (1ea543d)\n\n0.0.29 \"moh-common-lib\" (2019-04-17)\nBug Fixes\n\nPostalCodeComponent: Placeholder default fixed, changed to @Input7))\n\n0.0.28 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nPostalCode: Add 'maxlen' attribute when not using mask (532a3ec)\n\n0.0.27 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: Implement NG_VALUE_ACCESSOR handlers and remove logs (cb65dc6)\n\n0.0.26 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: experimental Add NG_VALUE_ACCESSOR into DatePicker (f603e99)\n\n0.0.25 \"moh-common-lib\" (2019-04-12)\nBug Fixes\n\nFileUploaderComponent: Fix runtime issue with missing reference (a9cafca)\n\n0.0.24 \"moh-common-lib\" (2019-04-10)\nBug Fixes\n\nCommonLogger: Commmon Logger now can be used with application-defined interfaces. (4766a2b)\n\n0.0.23 \"moh-common-lib\" (2019-04-10)\nFeatures\n\nCommonLogger: CommonLogger is exported from moh-common-lib/services (85eab15)\n\n0.0.22 \"moh-common-lib\" (2019-04-08)\nBug Fixes\n\npostal-code-component: Postal Code Component Validation made to match FPC. (3d0a6bc)\n\n0.0.21 \"moh-common-lib\" (2019-04-02)\nBuild\n\nUpdate build scripts and commit hooks. (ca8bd7c)\nchangelog: Improve changelog generation, adding new categories (d5bf00b)\npackage.json: npm scripts for version should now build and package docs. (3ac6d4d)\n\nDocumentation\n\ncontributing: CONTRIBUTING.MD includes instructions on git hooks (c6befdf)\n\nFeatures\n\nToggleComponent: Import ToggleComponent from FPC (df26aa1)\n\n0.0.20 \"moh-common-lib\" (2019-04-01)\nBug Fixes\n\nMove WizardProgressItem to moh-common-lib/models and export (7fd6537)\nbuild: Refactor SimpleDate location but keep same public export API (7eaf326)\nbuild: Refactor SimpleDate location but keep same public export API (d5f44c4)\n\nFeatures\n\nbuild: Add npm run clean command to rimraf dist folders (65b8144)\nbuild: Auto-add githooks after running npm install. (3b90e60)\n\n0.0.19 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\nfile-uploader: Images array will be initialized if not provided (4e8eb9b)\n\nFeatures\n\ncomponent: Create DropdownComponent (7f968a4)\ncomponents: PasswordComponent emits on blur; page-section imported. (dbb94e1)\n\n0.0.18 \"moh-common-lib\" (2019-03-28)\nFeatures\n\ncaptcha: CaptchaModule successfully configured. (e762fc1)\n\n0.0.17 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\ncaptcha: Fix compile time bug in CAPTCHA (6caf36c)\nchangelog: Truncate duplicate sections in CHANGELOG.md (c054ca5)\ncomponent: FileUploader required properly flags on return (6242bea)\ndocs: Rename documentation/ to docs/ (650025e)\nschematics: moh-start schematic sets skipLibCheck=false in tsconfig (48dfa9d)\nsecurity: Fixed issues from npm audit. (479804f)\n\nBuild\n\npackaging: Release tagging, auto-version increment, and changelog. (8a22405)\npackaging: Update build scripts for changelog and commit hooks (aee4761)\nChange changelog generation and commit (48966c0)\n\nDocumentation\n\nlib: Generate first docs, update pageframework jsdocs (bf3cf23)\nAdd Getting Started and update main readme (2c5c994)\nCreate local-development subfolder of markdown files (2625608)\nRe-generate docs after updating PasswordComponent (017bd5f)\nUpdate link to issues instead of PR (4b884a6)\nUpdate readme to absolute paths to GitHub pages (8004583)\n\nFeatures\n\nbuild: Create \"setup:git-hooks\" npm script (1a288cd)\ncaptcha: CaptchaModule properly configured so docs are now correct. (35d0bba)\ncomponent: Create common-dropdown component (01d17d3)\ncomponents: Add 'form-bar' CSS class to both form bars (6d5649d)\ndocs: Create docs config file, .compodoccrc.json (c8cd6f4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            CaptchaDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            ServerPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha.component.ts\n            \n            component\n            CaptchaComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/e2e/src/abstract-test-page.ts\n            \n            class\n            AbstractTestPage\n            \n                62 %\n                (10/16)\n            \n        \n        \n            \n                \n                projects/common/images/src/images.ts\n            \n            class\n            CommonImage\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                projects/common/images/src/images.ts\n            \n            class\n            CommonImageProcessingError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/images/src/images.ts\n            \n            class\n            CommonImageScaleFactorsImpl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/images/src/images.ts\n            \n            interface\n            CommonImageScaleFactors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                21 %\n                (9/42)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            CountryList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            ProvinceList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n            \n            component\n            CoreBreadcrumbComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date-field-format.directive.ts\n            \n            directive\n            DateFieldFormatDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                33 %\n                (7/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            interface\n            DateErrorMsg\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/day-validation.directive.ts\n            \n            directive\n            DayValidationDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/day-validation.directive.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/year-validate.directive.ts\n            \n            directive\n            YearValidateDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/year-validate.directive.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            component\n            DatepickerComponent\n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            component\n            FileUploaderComponent\n            \n                24 %\n                (9/37)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            interface\n            FileUploaderMsg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            loadImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            PDFJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            sha1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n            \n            component\n            FormActionBarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n            \n            component\n            FormSubmitBarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-framework/page-framework.component.ts\n            \n            component\n            PageFrameworkComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-section/page-section.component.ts\n            \n            component\n            PageSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            interface\n            PasswordErrorMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            variable\n            zxcvbn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/postal-code.component.ts\n            \n            component\n            PostalCodeComponent\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                projects/common/lib/components/thumbnail/thumbnail.component.ts\n            \n            component\n            ThumbnailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n            \n            component\n            WizardProgressBarComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/models/src/abstract-form.ts\n            \n            class\n            AbstractForm\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/common/models/src/address.model.ts\n            \n            class\n            Address\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                projects/common/models/src/base.ts\n            \n            class\n            Base\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/common/models/src/container.ts\n            \n            class\n            Container\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/common/models/src/container.ts\n            \n            interface\n            WizardProgressItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/models/src/mask.model.ts\n            \n            class\n            MaskModel\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/common/models/src/mask.model.ts\n            \n            variable\n            LETTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/models/src/mask.model.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/models/src/mask.model.ts\n            \n            variable\n            SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/models/src/person.model.ts\n            \n            class\n            Person\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                projects/common/models/src/person.model.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/models/src/simple-date.interface.ts\n            \n            interface\n            SimpleDate\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            function\n            copyLicense\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            LICENSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            year\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            modifyJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/MyriadWebPro_ttf_base64.ts\n            \n            variable\n            MyriadWebProTTF_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/favicon_ico.ts\n            \n            variable\n            favicon_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/gov3_bc_logo_png_base64.ts\n            \n            variable\n            BCLogoBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/overrides_scss.ts\n            \n            variable\n            overridesScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/styles.ts\n            \n            variable\n            stylesSCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/variables_scss.ts\n            \n            variable\n            variableScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            createIfMissing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            installPackageJsonDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            mohStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            overwriteFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateAngularJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            addPackageToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            getPackageVersionFromPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            buildTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            gitCommit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            message\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            projectVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            addPackageJsonScript\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            copyVersionFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updateAppComponentTs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updatePackageJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            versionJS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/services/src/abstract-api-service.ts\n            \n            class\n            AbstractHttpService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/common/services/src/geocoder.service.ts\n            \n            injectable\n            GeocoderService\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                projects/common/services/src/geocoder.service.ts\n            \n            interface\n            GeoAddressResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/services/src/logger.service.ts\n            \n            injectable\n            CommonLogger\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                projects/common/services/src/logger.service.ts\n            \n            interface\n            CommonLogMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/services/src/logger.service.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-select/ng-select : ^2.16.2\n        \n            @types/pdfjs-dist : ^0.1.2\n        \n            angular2-text-mask : ^9.0.0\n        \n            blueimp-load-image : ^2.20.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            moment : ^2.24.0\n        \n            ngx-bootstrap : ^3.2.0\n        \n            pdfjs-dist : ^2.0.550\n        \n            rxjs : 6.4.0\n        \n            sha1 : ^1.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CAPTCHA_STATE   (projects/.../captcha.component.ts)\n                        \n                        \n                            CommonImageError   (projects/.../images.ts)\n                        \n                        \n                            DatepickerSizes   (projects/.../datepicker.component.ts)\n                        \n                        \n                            SeverityLevels   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/captcha/src/captcha.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CAPTCHA_STATE\n                    \n                \n                    \n                        \n                            7 mutually exclusive states, the program can only be in one of these state\nat any given point..\n\n                        \n                    \n                        \n                            \n                                 FETCHING_CAPTCHA_IMG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUCCESS_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VERIFYING_ANSWER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 SUCCESS_VERIFY_ANSWER_CORRECT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 ERROR_VERIFY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/common/images/src/images.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonImageError\n                    \n                \n                        \n                            \n                                 WrongType\n                            \n                        \n                        \n                            \n                                 TooSmall\n                            \n                        \n                        \n                            \n                                 TooBig\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                 CannotOpen\n                            \n                        \n                        \n                            \n                                 PDFnotSupported\n                            \n                        \n                        \n                            \n                                 CannotOpenPDF\n                            \n                        \n            \n        \n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n    \n        \n            \n                \n                    \n                        \n                        DatepickerSizes\n                    \n                \n                        \n                            \n                                 MINI\n                            \n                        \n                        \n                            \n                                Value : mini\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n            \n        \n\n    projects/common/services/src/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        SeverityLevels\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addPackageJsonScript   (projects/.../index.ts)\n                        \n                        \n                            addPackageToPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            copyLicense   (projects/.../index.ts)\n                        \n                        \n                            copyVersionFile   (projects/.../index.ts)\n                        \n                        \n                            createIfMissing   (projects/.../index.ts)\n                        \n                        \n                            getPackageVersionFromPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            installPackageJsonDependencies   (projects/.../index.ts)\n                        \n                        \n                            modifyJSON   (projects/.../json.ts)\n                        \n                        \n                            mohStart   (projects/.../index.ts)\n                        \n                        \n                            overwriteFile   (projects/.../index.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../json.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../package-config.ts)\n                        \n                        \n                            updateAngularJson   (projects/.../index.ts)\n                        \n                        \n                            updateAppComponentTs   (projects/.../index.ts)\n                        \n                        \n                            updatePackageJson   (projects/.../index.ts)\n                        \n                        \n                            updateTsConfig   (projects/.../index.ts)\n                        \n                        \n                            versionJS   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/schematics/src/version-js/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageJsonScript\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageJsonScript(tree, scriptName, script)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scriptName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    script\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyVersionFile\n                        \n                        \n                    \n                \n            \n            \n                \ncopyVersionFile(options: any, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAppComponentTs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAppComponentTs(tree, _context)\n                \n            \n\n\n\n\n            \n                \n                    Updates app.component.ts to console.log out the generated version file \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePackageJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePackageJson(tree, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            versionJS\n                        \n                        \n                    \n                \n            \n            \n                \nversionJS(options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copy over version.js to src/version.js, and update the package.json.\nMust be called with repo, e.g. --repo=https://github.com/bcgov/prime-web/\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/package-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageToPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageToPackageJson(host, pkg, version, forceOverwrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Adds a package to the package.json in the given host tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pkg\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forceOverwrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPackageVersionFromPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \ngetPackageVersionFromPackageJson(tree, name)\n                \n            \n\n\n\n\n            \n                \n                    Gets the version of the specified package by looking at the package.json in the given tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/copy-license/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            copyLicense\n                        \n                        \n                    \n                \n            \n            \n                \ncopyLicense(_options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copies over an APACHE-2 License to the top level of a project.  This rule\nwill overwrite any pre-existing LICENSE file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createIfMissing\n                        \n                        \n                    \n                \n            \n            \n                \ncreateIfMissing(host, targetPath, content: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            installPackageJsonDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ninstallPackageJsonDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mohStart\n                        \n                        \n                    \n                \n            \n            \n                \nmohStart(_options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            overwriteFile\n                        \n                        \n                    \n                \n            \n            \n                \noverwriteFile(host, targetPath, content)\n                \n            \n\n\n\n\n            \n                \n                    Use a string to overwrite a file. Checks to make sure file does not have content. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAngularJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAngularJson(host)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTsConfig\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTsConfig(host, _context)\n                \n            \n\n\n\n\n            \n                \n                    Configures settings in tsconfig.json that are required to properly import\nfrom moh-common-lib\nSpecifically, skibLibCheck\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/helpers/json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            modifyJSON\n                        \n                        \n                    \n                \n            \n            \n                \nmodifyJSON(host, fileName, transformFn)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transformFn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoH Common Styles\nDocumentation\nDocumentation: https://bcgov.github.io/moh-common-styles/index.html\nRequirements\n\nnode (using 8.9.4, but older versions may be compatible)\nnpm (6.4.1, but older versions may be compatible)\n\nInstallation\nnpm install --save moh-common-libSetup (Shared Components)\nTo setup the shared components:\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})You can read more at the Getting Started Guide\nFeedback, Mistakes, and Pull Requests\nThis library and the documentation are still very young and there are bound to be growing pains. The only way I can fix them is if you let \nIf you find any mistakes with either this documentation or the underlying library please submit an Issue on GitHub. If, you can come ask me, Adam Coard, in person or drop me an email.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright © 2017, Province of British Columbia, Canada.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDayValidationDirective\n\nDayValidationDirective\n\nSharedCoreModule -->\n\nDayValidationDirective->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nYearValidateDirective\n\nYearValidateDirective\n\nSharedCoreModule -->\n\nYearValidateDirective->SharedCoreModule\n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDayValidationDirective \n\nDayValidationDirective \n\nDayValidationDirective  -->\n\nSharedCoreModule->DayValidationDirective \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nYearValidateDirective \n\nYearValidateDirective \n\nYearValidateDirective  -->\n\nSharedCoreModule->YearValidateDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nAssumption: you've already installed moh-common-lib.\nImporting the Library (moh-common-lib)\nImport components via the SharedCoreModule.\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})By adding this module you will automatically get access to core components, each starting with  \"common-*\". View all components\nThis does not import Services, Models, and some specific components like FileUploader and Captcha. Those will be detailed below.\nImporting Dos and Don'ts\nAll imports from moh-common-lib should go to one of the secondary entry points listed above (e.g. /models or /captcha). You should never import from a deeper level. When auto-importing make sure to double-check the import paths because VS Code often likes to setup incorrect imports.\n// GOOD\nimport { GeocoderService } from 'moh-common-lib/services';\n\n// BAD\nimport { GeoAddressResult } from 'moh-common-lib/services/geocoder.service';If you need access to an export and can only get it this way, let us know and we can export it properly.\nImporting a Service (moh-common-lib/services)\nIf a service is usable as-is, you can find them in the Injectables section of the documentation in the menu.\nimport { GeocoderService } from 'moh-common-lib/services';Setting up an API Service (moh-common-lib/services)\nIn some cases, we provide abstract classes that provide the foundation of services you will create.   \nFor example, the AbstractHTTPService:\nimport { AbstractHttpService } from 'moh-common-lib/services';\n\n@Injectable()\nexport class APIService extends AbstractHTTPService {}\n// You will have to setup _headers, and handleError(), \n// and create your own methods for each API Request using this.get() and this.post()These Abstract classes are not injectables and as such are found under Classes.  The Classes folder section also includes other non-service classes, like models.\nImporting a Model (moh-common-lib/models)\nModels are all found under Classes.\nimport { Address } from 'moh-common-lib/models';\nconst addr = new Address();The address, and others like it, is a pure TypeScript model with no specific Angular integration. However, other components may expect an Address as an @Input.\nFile Uploader classes, interfaces, etc. (moh-common-lib/images)\nAll classes, interfaces, and enums related to the FileUploader are all in moh-common-lib/images\nimport { CommonImage, CommonImageError, CommonImageScaleFactorsImpl } from 'moh-common-lib/images';This does NOT include the actual FileUploader, which is currently in the SharedCoreModule.\nCAPTCHA\nNote: This is still in development and may not be working\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development.html":{"url":"additional-documentation/local-development.html","title":"additional-page - Local Development","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocal Development\n\ncomponents\nschematics\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/schematics.html":{"url":"additional-documentation/local-development/schematics.html","title":"additional-page - Schematics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchematics\nThis file will help you get setup with building and running schematics. This is not necessary for publishing NPM builds of components, but is relevant if you wish to use these schematics for code-generation.\nWriting code & compiling changes\nMake sure to write all changes to .ts files, e.g. index.ts.   The schematics folder, and all schemtaics, must be in projects/common/schematics\n    npm run build # compiles one time - must be run in schematics folder\n    npm run build -- -w # watches for changes and re-compiles - in schematics folder\n    npm run build:schematics # helper command - can be run anywhere in project, even top levelThen use the above to compile to .d.ts, .js, and .map.js files. It's important to compile the files before running any schematics either locally or before publishing to npm, etc. \nUnsure: Potentially you may need to run npm install prior to your first build.\nLinking Schematics\nLinking schematics only has to be done once. You'll only have to do it again if you move this folder.\nWe have to link from the projects/common/schematics folder. You can tell it's the correct folder because it has package.json in it.\n    cd moh-common-styles/projects/common/schematics\n    npm link # creates moh-common-schematics link, name from package.jsonCreating a new project and running schematics\n    ng new example --style=scss --routing=true // both params required\n    npm link moh-common-schematics # creates a symlink to the schematics folder above\n    ng g moh-common-schematics:moh-start # runs the schematicCreating a new schematic\nFirst, you must make sure the schematics-cli is installed on your machine.\n    npm install -g @angular-devkit/schematics-cliTo create a new schematic, make sure to run the command from the right folder.  It should be in the same folder as the moh-common-schematics package.json. projects/common/schematics\n    cd projects/common/schematics\n    schematics blank  --name=schematic-name-exampleTODO\n\n ~~*High Priority Fix compilation errors when lodaing moh-common-lib (WizardProgressBar) in moh-start by adding to tsconfig:*~~ [2019-03-06]\n  \"typeRoots\": [ \"../node_modules/@types\" ],\n  \"skipLibCheck\": true\n Making changes to schematic + re-compiling (npm run build + watch command)\n\n Include integration with upcoming moh-common-styles library\n\n resolve issue with component viewProviders, ControlContainer + ngForms for \"nested\" components\n\n uncomment pollyfills.ts\n\n Package.json scripts from fpc (e.g. version, preversion)\n\n Document need for openshift/ folder to still be manually setup\n\n Configurable project name, e.g. change page title.\n\n Split moh-start schematic into multiple schematics, de-compose them. Will make path to future 'update' calls simpler (update-scss, update-assets, update-dependencies). Moh-start should just call each of them.\n\n Convert moh-start to use templates instead of base64 encoding (like version-js does)\n\n Add momentjs as dependency to package.json\n\n Add NgForm and other modules to appropriate angular modules\n\n angular.json - add preserveSymlinks to new projects\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/components.html":{"url":"additional-documentation/local-development/components.html","title":"additional-page - Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComponents\nThis file will help you get setup with local development for components, modules, and other importable objects. This includes local builds, but it is also a required step in order to create builds for NPM.\nThis does not include schematics which are not imported by projects but rather ran on them or used to generate code. \nNew Project Setup + Schematics\nThis project has 2 main parts to it, and this readme is broken in 2 to reflect that.\n\nThe Library - moh-common-lib - relates to this project as a component library for an Angular application, to appear in the node_modules/ folder of an Angular application\nThe Schematics - moh-common-schematics - relates to this project as a collection of Angular schematics and scripts to setup a whole project or files within a project. These schematics live in this project, but operate on an Angular application.\n\nThere are two different npm links for each of these facets.  Each one corresponds to a different package.json:\n\nmoh-common-lib (library) > projects/common/package.json\nmoh-common-schematics (schematics) > projects/common/schematics/package.json\n\nFor more information on schematics, look at the Schematics documentation.\nThe Library\nBuilding the Library\nFirst make sure to run npm install prior to building, to install necessary dependencies.  You must build the library prior to using and linking in local development.\n> ng build moh-commmon-libIf it runs well, the end of the output should show the following:\nBuilt moh-common-lib\nBuilt Angular Package!\n- from: /space/workspace/moh-common-styles/projects/common\n- to:   /space/workspace/moh-common-styles/dist/commonWe can see build artifacts are created in the \"to\" folder. For local development, we will npm link directly to that folder; when publishing to npm we will publish tohse artifacts.\nSetting up npm link for library\nOh the command line navigate to the \"to\" folder from above, the dist folder for the common project: moh-common-styles/dist/common. Then run the following command:\n> npm linkNote - the dist/common folder MUST have a package.json in it. The name in the package.json will be used as a reference when linking to this folder from other folders (e.g. when configuring PRIME to use this common library). In our case the name is moh-common-lib. Assuming all goes well you should see output at the end like this (paths may differ):\n.../example/path.../node/v8.9.4/lib/node_modules/moh-common-lib -> /space/workspace/moh-common-styles/projects/common\nIf the folder does not exist, or is empty, make sure to build the library.\nSetting up npm link for library\nThen navigate to the application which will consume the library, make sure you're in the same folder as that application's package.json (this should be the top level, e.g. prime-web/).  From there, run npm link moh-common-lib.  That's it, the build artifacts from the library will now appear in node_modules/ and can be imported like any other library.  Now in the application you can write...\nTypeScript\nimport { example } from 'moh-common-lib'\nIf you've made any changes to the library make sure to re-build with ng build moh-commmon-lib from the library folder.\nAs for what specifically you can import from 'moh-common-lib', that is all defined in projects/common/src/public_api.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
