var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractForm.html",[0,0.006,1,3.234]],["body/classes/AbstractForm.html",[0,0.008,1,4.984,2,2.051,3,0.208,4,0.226,5,0.104,6,7.046,7,4.315,8,0.208,9,0.718,10,2.441,11,1.592,12,6.627,13,0.718,14,5.792,15,3.303,16,5.061,17,3.223,18,7.354,19,4.984,20,0.897,21,3.337,22,4.714,23,0.653,24,6.328,25,0.986,26,0.013,27,0.516,28,0.376,29,0.688,30,1.212,31,4.948,32,6.328,33,1.628,34,2.843,35,5.518,36,2.583,37,1.901,38,6.328,39,4.948,40,4.585,41,5.518,42,4.267,43,0.688,44,0.636,45,1.139,46,4.948,47,3.4,48,4.984,49,6.328,50,1.449,51,4.267,52,1.684,53,4.156,54,4.948,55,5.518,56,1.684,57,0.863,58,5.518,59,2.343,60,4.984,61,6.328,62,6.328,63,4.585,64,1.233,65,1.099,66,4.948,67,4.267,68,3.576,69,6.328,70,6.328,71,0.51,72,4.948,73,6.328,74,3.241,75,3.775,76,4.984,77,4.162,78,2.318,79,0.243,80,2.134,81,0.447,82,1.023,83,2.422,84,0.19,85,2.952,86,4.948,87,0.989,88,3.337,89,0.662,90,3.129,91,4.948,92,4.948,93,4.948,94,1.766,95,4.948,96,4.948,97,4.948,98,4.948,99,0.008,100,0.01,101,0.008]],["title/classes/AbstractHttpService.html",[0,0.006,102,2.206]],["body/classes/AbstractHttpService.html",[0,0.01,2,1.844,3,0.187,4,0.203,5,0.093,8,0.187,9,0.67,13,0.801,15,3.592,17,3.461,20,0.572,23,0.638,25,1.219,26,0.013,27,0.599,28,0.395,29,0.799,30,0.92,43,0.619,44,0.572,45,1.063,57,0.834,68,3.336,78,3.609,79,0.231,84,0.171,85,2.653,89,0.944,99,0.007,100,0.009,101,0.007,102,3.172,103,6.237,104,3.71,105,3.878,106,1.18,107,4.255,108,3.044,109,3.953,110,5.219,111,4.468,112,4.872,113,4.649,114,2.652,115,5.786,116,3.503,117,3.989,118,5.903,119,4.464,120,4.447,121,5.091,122,4.277,123,4.649,124,4.649,125,5.786,126,5.323,127,4.447,128,5.219,129,4.277,130,4.667,131,4.759,132,2.267,133,3.733,134,4.649,135,4.277,136,2.652,137,2.812,138,4.237,139,3.521,140,4.464,141,4.447,142,4.649,143,5.219,144,4.646,145,4.277,146,3.521,147,1.583,148,4.649,149,3.98,150,2.447,151,4.649,152,4.649,153,4.649,154,4.953,155,4.447,156,4.649,157,4.447,158,3.878,159,4.447,160,3.521,161,5.147,162,2.185,163,2.999,164,2.389,165,1.998,166,3.878,167,4.447,168,2.389,169,2.389,170,3.878,171,3.222,172,4.447,173,1.236,174,5.903,175,5.903,176,4.447,177,2.999,178,4.447,179,5.903,180,5.903,181,2.083,182,4.447,183,3.503,184,2.812,185,4.447,186,4.447,187,2.083,188,3.503,189,3.878,190,4.447,191,2.447,192,5.147,193,3.222,194,3.222,195,3.222]],["title/injectables/AbstractPgCheckService.html",[196,1.52,197,2.597]],["body/injectables/AbstractPgCheckService.html",[0,0.011,3,0.226,4,0.246,5,0.113,8,0.226,13,0.861,15,3.783,23,0.619,25,0.84,26,0.013,27,0.44,28,0.266,29,0.586,30,1.238,57,0.861,71,0.57,74,3.884,78,3.128,79,0.188,81,0.487,84,0.207,99,0.008,100,0.01,101,0.008,103,6.14,106,1.077,108,3.426,196,2.472,197,5.023,198,3.045,199,5.256,200,4.698,201,4.524,202,4.286,203,4.222,204,2.353,205,6.613,206,6.677,207,6.677,208,6.677,209,0.893,210,3.773,211,5.259,212,5.822,213,2.879,214,4.524,215,2.001,216,5.822,217,2.384,218,2.144,219,5.822,220,1.206,221,5.973,222,5.973,223,5.714,224,5.973,225,5.388,226,5.388,227,4.698,228,5.388,229,5.388]],["title/classes/AbstractTestPage.html",[0,0.006,230,2.975]],["body/classes/AbstractTestPage.html",[0,0.009,2,1.129,3,0.212,4,0.124,5,0.106,8,0.114,9,0.472,11,0.803,13,0.472,15,2.534,16,4.05,19,3.274,23,0.65,25,1.119,26,0.013,27,0.665,28,0.378,29,0.781,34,2.876,43,0.785,44,0.952,53,3.188,56,1.644,57,0.912,59,1.539,60,5.655,64,1.204,65,1.084,71,0.614,76,4.443,77,2.48,78,2.643,79,0.095,84,0.105,89,0.919,99,0.004,100,0.006,101,0.004,106,1.406,131,2.803,133,2.629,136,1.867,150,1.723,169,4.14,173,0.508,191,2.339,210,2.349,215,1.691,220,0.926,230,4.088,231,6.978,232,5.84,233,2.375,234,3.625,235,1.031,236,3.274,237,4.919,238,4.343,239,1.876,240,2.349,241,2.349,242,6.404,243,5.641,244,3.012,245,4.157,246,1.485,247,4.396,248,5.041,249,5.641,250,5.641,251,4.157,252,4.157,253,5.641,254,4.157,255,5.641,256,4.157,257,5.641,258,5.641,259,6.404,260,6.404,261,5.641,262,5.641,263,4.157,264,4.157,265,4.157,266,4.157,267,6.075,268,4.157,269,1.207,270,2.723,271,4.157,272,2.48,273,2.629,274,2.889,275,2.803,276,3.188,277,4.157,278,3.568,279,2.723,280,3.012,281,3.625,282,3.625,283,4.157,284,4.157,285,3.625,286,2.723,287,2.803,288,3.625,289,4.157,290,3.274,291,3.625,292,5.641,293,2.723,294,3.012,295,1.154,296,4.443,297,3.012,298,3.625,299,4.157,300,4.057,301,2.723,302,5.044,303,4.157,304,5.988,305,5.044,306,4.976,307,4.157,308,2.723,309,1.723,310,4.443,311,4.683,312,6.604,313,0.241,314,6.868,315,2.723,316,4.157,317,2.723,318,3.012,319,2.327,320,3.653,321,2.723,322,2.723,323,4.157,324,2.723,325,4.157,326,1.089,327,4.443,328,2.723,329,2.723,330,4.157,331,2.723,332,4.157,333,2.629,334,4.157,335,3.031,336,2.534,337,2.889,338,4.443,339,4.402,340,5.641,341,4.157,342,4.919,343,4.157,344,2.723,345,3.274,346,4.443,347,2.723,348,3.274,349,3.274,350,3.274,351,3.012,352,2.349,353,4.157,354,1.723,355,4.157,356,4.157,357,3.625,358,4.157,359,5.641,360,1.597,361,3.625,362,2.48,363,4.157,364,2.629,365,3.625,366,3.625,367,3.012,368,2.723,369,2.723,370,2.803,371,4.157,372,2.723,373,1.947,374,4.157,375,5.641,376,2.723,377,5.041,378,3.365,379,1.793,380,0.86,381,3.625,382,2.349,383,2.129,384,2.629,385,1.658,386,3.568,387,3.274,388,3.012,389,3.625,390,3.274,391,3.274,392,4.157,393,3.625,394,4.157,395,3.274,396,3.365,397,3.274,398,5.641,399,4.919,400,2.761,401,4.64,402,4.088,403,4.157,404,2.723,405,1.867,406,4.157,407,0.697,408,4.157,409,2.48,410,2.629,411,3.625,412,4.157,413,4.157,414,2.723,415,4.827,416,1.031,417,4.157,418,2.723,419,3.625,420,4.157,421,2.233,422,1.625,423,0.623,424,4.157,425,2.723,426,2.723,427,2.723,428,2.723,429,2.723,430,2.723,431,2.723,432,2.723,433,2.723,434,2.723,435,2.723,436,2.723,437,2.723,438,2.723,439,2.145,440,4.157,441,4.157,442,4.157,443,2.723,444,2.723,445,2.723,446,2.723,447,2.375,448,1.333,449,4.157,450,2.723,451,2.723,452,4.157,453,2.723,454,2.723,455,2.723,456,2.723,457,2.723,458,2.723,459,2.723,460,2.723,461,2.723,462,2.723,463,2.723,464,2.723,465,2.723]],["title/components/AccordionCommonComponent.html",[313,0.128,466,0.909]],["body/components/AccordionCommonComponent.html",[0,0.007,3,0.202,4,0.22,5,0.13,8,0.202,9,0.706,11,1.201,13,0.706,20,0.886,23,0.615,26,0.013,27,0.562,28,0.341,30,0.969,33,1.376,43,0.865,44,0.8,45,1.12,52,1.103,56,1.424,57,0.547,64,1.043,65,0.696,71,0.533,79,0.216,80,2.077,81,0.435,84,0.239,99,0.007,100,0.01,101,0.007,106,0.962,209,0.832,215,1.864,220,0.996,235,1.287,246,0.996,269,1.03,295,1.103,313,0.215,380,0.996,407,1.043,416,1.034,423,1.424,466,1.611,467,1.179,468,1.14,469,1.179,470,4.199,471,6.888,472,1.996,473,0.996,474,1.442,475,6.219,476,1.243,477,6.219,478,1.243,479,6.219,480,7.536,481,2.258,482,6.888,483,5.082,484,4.816,485,4.816,486,4.816,487,4.816,488,4.898,489,6.219,490,4.816,491,2.587,492,2.357,493,1.103,494,1.575,495,0.807,496,1.843,497,1.219,498,1.219,499,1.066,500,1.219,501,1.03,502,1.219,503,1.03,504,1.219,505,1.066,506,1.219,507,1.066,508,1.219,509,1.066,510,1.219,511,1.066,512,1.219,513,1.066,514,1.14,515,1.219,516,1.03,517,1.219,518,1.03,519,1.219,520,1.066,521,1.219,522,1.219,523,1.03,524,1.219,525,1.066,526,1.744,527,1.066,528,0.996,529,1.103,530,1.575,531,1.03,532,1.219,533,1.066,534,1.219,535,1.066,536,1.219,537,0.996,538,1.219,539,1.066,540,1.219,541,1.066,542,1.179,543,1.219,544,1.03,545,1.103,546,1.219,547,1.03,548,1.219,549,1.03,550,1.219,551,1.066,552,1.219,553,1.066,554,1.219,555,1.066,556,1.219,557,1.03,558,1.219,559,1.066,560,1.14,561,1.066,562,1.03,563,1.219,564,0.962,565,1.03,566,1.219,567,1.03,568,1.219,569,1.03,570,1.219,571,1.03,572,1.219,573,1.03,574,1.179,575,1.219]],["title/classes/Address.html",[0,0.006,576,2.321]],["body/classes/Address.html",[0,0.011,2,1.898,3,0.192,4,0.209,5,0.096,8,0.192,9,0.811,13,0.683,23,0.675,25,0.714,26,0.013,27,0.374,28,0.403,29,0.498,30,1.209,40,4.36,43,0.637,44,0.589,45,0.824,57,0.763,65,0.662,71,0.611,84,0.176,89,0.955,94,1.635,99,0.007,100,0.009,101,0.007,106,0.915,114,2.703,160,4.629,173,0.854,184,3.806,191,1.898,220,1.231,234,5.247,272,3.59,275,4.058,382,3.799,383,3.443,385,2.4,410,3.806,545,1.539,576,4.578,577,3.992,578,2.345,579,3.087,580,2.731,581,6.722,582,6.722,583,6.722,584,4.01,585,6.722,586,7.613,587,4.871,588,6.722,589,4.532,590,4.532,591,5.623,592,7.613,593,6.722,594,4.579,595,4.579,596,4.579,597,4.579,598,4.579,599,4.579,600,4.579,601,4.579,602,6.018,603,6.865,604,6.225,605,4.058,606,5.247,607,5.247,608,4.579,609,4.579,610,4.579,611,5.247,612,4.579,613,4.579,614,3.799,615,6.018,616,2.742,617,6.018,618,4.579,619,5.247,620,4.739,621,4.36,622,6.018,623,6.018,624,4.36,625,6.018,626,6.018,627,3.806,628,5.247,629,6.018,630,6.018,631,6.018,632,3.401,633,3.806,634,4.579,635,4.579,636,4.579,637,5.861,638,5.861,639,6.018,640,1.826,641,2.46,642,4.739,643,4.739,644,6.722,645,4.579,646,4.579,647,0.637,648,4.579,649,4.579,650,1.898,651,4.579,652,4.579,653,4.579,654,4.579,655,4.579,656,4.579,657,4.579,658,4.579,659,4.579,660,4.579]],["title/classes/Base.html",[0,0.006,661,0.972]],["body/classes/Base.html",[0,0.013,2,2.524,3,0.256,4,0.278,5,0.128,8,0.256,9,0.816,20,0.984,23,0.586,26,0.013,28,0.301,43,0.847,44,0.783,71,0.526,79,0.212,84,0.234,99,0.009,100,0.011,101,0.009,106,1.217,160,4.288,220,1.106,407,1.325,580,4.288,661,1.871,662,5.308,663,7.189,664,3.862,665,4.063,666,3.368,667,3.229,668,2.544,669,7.189,670,2.476,671,2.308,672,2.308,673,2.23,674,2.476,675,4.063,676,3.271]],["title/components/ButtonComponent.html",[313,0.128,501,0.879]],["body/components/ButtonComponent.html",[0,0.009,3,0.176,4,0.192,5,0.119,8,0.176,9,0.644,10,2.066,11,1.096,13,0.644,20,0.827,23,0.63,25,0.654,26,0.013,27,0.562,28,0.356,29,0.456,30,0.884,33,1.256,36,2.381,37,1.611,43,1.089,44,0.827,45,1.022,52,0.96,56,1.894,57,0.644,64,0.951,65,0.82,71,0.415,75,3.385,79,0.198,80,1.808,81,0.379,82,0.867,84,0.218,99,0.007,100,0.009,101,0.007,106,0.838,147,0.838,150,1.738,162,2.101,204,1.76,209,0.759,215,1.701,218,1.822,235,1.278,246,0.867,269,0.897,295,0.96,313,0.237,319,2.159,360,2.648,367,3.038,380,0.867,405,2.549,407,0.951,409,3.385,416,1.035,423,1.299,439,3.303,466,0.928,467,1.027,468,0.993,469,1.027,472,1.864,473,0.867,474,1.432,476,1.134,478,1.134,481,2.138,492,2.777,493,0.96,494,1.437,495,0.703,496,1.745,497,1.062,498,1.062,499,0.928,500,1.062,501,1.475,502,1.062,503,0.897,504,1.062,505,0.928,506,1.062,507,0.928,508,1.062,509,0.928,510,1.062,511,0.928,512,1.062,513,0.928,514,0.993,515,1.062,516,0.897,517,1.062,518,0.897,519,1.062,520,0.928,521,1.062,522,1.062,523,0.897,524,1.062,525,0.928,526,1.629,527,0.928,528,0.867,529,0.96,530,1.437,531,0.897,532,1.062,533,0.928,534,1.062,535,0.928,536,1.062,537,0.867,538,1.062,539,0.928,540,1.062,541,0.928,542,1.027,543,1.062,544,0.897,545,0.96,546,1.062,547,0.897,548,1.062,549,0.897,550,1.062,551,0.928,552,1.062,553,0.928,554,1.062,555,0.928,556,1.062,557,0.897,558,1.062,559,0.928,560,0.993,561,0.928,562,0.897,563,1.062,564,0.838,565,0.897,566,1.062,567,0.897,568,1.062,569,0.897,570,1.062,571,0.897,572,1.062,573,0.897,574,1.027,575,1.062,647,0.583,677,3.656,678,5.609,679,4.112,680,5.675,681,2.777,682,4.948,683,4.948,684,3.589,685,5.675,686,5.675,687,5.675,688,5.675,689,5.675,690,4.948,691,3.826,692,4.112,693,4.469,694,4.469,695,4.948,696,5.675,697,5.675,698,4.948,699,4.948,700,2.447,701,2.566,702,2.381,703,4.948,704,6.433,705,1.701,706,5.066,707,5.675,708,6.893,709,4.469,710,4.193,711,4.193,712,4.193,713,1.632,714,4.193,715,4.193,716,4.948,717,4.193,718,1.394,719,3.837,720,5.675,721,1.299,722,2.148,723,5.847,724,3.656]],["title/components/ButtonGroupComponent.html",[313,0.128,503,0.879]],["body/components/ButtonGroupComponent.html",[0,0.006,3,0.158,4,0.172,5,0.111,8,0.158,9,0.599,10,1.954,11,1.018,13,0.599,20,0.782,23,0.661,25,1.027,26,0.013,27,0.602,28,0.391,29,0.716,30,1.173,33,1.168,36,2.252,37,1.448,43,1.064,44,0.983,45,1.186,50,1.588,52,0.863,56,1.723,57,0.787,64,0.884,65,1.088,71,0.482,79,0.184,80,1.626,81,0.341,82,0.78,84,0.202,87,1.317,99,0.006,100,0.008,101,0.006,106,0.754,191,2.522,204,2.044,209,0.706,213,2.275,215,1.581,217,1.883,218,2.116,220,1.039,235,1.27,239,1.754,246,0.78,269,0.807,287,3.557,295,0.863,313,0.19,319,2.079,380,0.78,385,2.104,407,0.884,416,1.108,421,2.834,423,1.208,466,0.835,467,0.923,468,0.893,469,0.923,472,1.093,473,0.78,474,1.424,476,1.054,478,1.054,493,0.863,494,1.336,495,0.632,496,1.669,497,0.955,498,0.955,499,0.835,500,0.955,501,0.807,502,0.955,503,1.61,504,0.955,505,0.835,506,0.955,507,0.835,508,0.955,509,0.835,510,0.955,511,0.835,512,0.955,513,0.835,514,0.893,515,0.955,516,0.807,517,0.955,518,0.807,519,0.955,520,0.835,521,0.955,522,0.955,523,0.807,524,0.955,525,0.835,526,1.541,527,0.835,528,0.78,529,0.863,530,1.336,531,0.807,532,0.955,533,0.835,534,0.955,535,0.835,536,0.955,537,0.78,538,0.955,539,0.835,540,0.955,541,0.835,542,0.923,543,0.955,544,0.807,545,0.863,546,0.955,547,0.807,548,0.955,549,1.302,550,0.955,551,0.835,552,0.955,553,0.835,554,0.955,555,0.835,556,0.955,557,0.807,558,0.955,559,0.835,560,0.893,561,0.835,562,0.807,563,0.955,564,0.754,565,0.807,566,0.955,567,0.807,568,0.955,569,0.807,570,0.955,571,0.807,572,0.955,573,0.807,574,0.923,575,0.955,633,4.167,647,0.525,679,3.822,700,2.275,701,2.427,702,2.567,705,1.581,713,1.56,719,3.629,721,1.208,722,3.116,725,7.098,726,6.411,727,3.288,728,4.408,729,4.6,730,4.6,731,4.155,732,4.6,733,4.155,734,2.096,735,2.471,736,4.6,737,5.275,738,5.275,739,2.172,740,2.172,741,6.084,742,2.026,743,2.026,744,5.275,745,2.026,746,5.462,747,3.848,748,4.792,749,5.275,750,3.771,751,3.771,752,3.771,753,3.771,754,3.771,755,3.771,756,3.771,757,3.771,758,2.026,759,3.771,760,2.352,761,2.026,762,3.771,763,5.275,764,3.771,765,1.767,766,2.104,767,3.771,768,3.771,769,5.275,770,3.771,771,1.346,772,3.771,773,3.771,774,2.172,775,3.771,776,1.346,777,3.288,778,5.275]],["title/injectables/CaptchaDataService.html",[196,1.52,779,2.597]],["body/injectables/CaptchaDataService.html",[0,0.01,3,0.207,4,0.225,5,0.103,8,0.207,13,0.717,20,0.634,23,0.599,25,1.145,26,0.013,27,0.599,28,0.363,29,0.798,42,5.526,57,0.791,71,0.629,79,0.256,81,0.445,84,0.242,89,1.039,99,0.008,100,0.01,101,0.008,107,3.742,112,4.405,117,4.389,137,3.118,138,4.096,146,2.941,164,2.649,165,2.215,173,0.919,196,2.578,198,2.787,220,1.168,779,3.993,780,5.979,781,3.883,782,6.314,783,6.314,784,6.314,785,4.931,786,4.931,787,6.073,788,6.62,789,4.931,790,6.117,791,6.073,792,6.609,793,4.931,794,6.073,795,6.972,796,6.772,797,4.931,798,4.299,799,3.946,800,3.573,801,6.073,802,3.325,803,3.573,804,4.697,805,4.299,806,3.325,807,1.53,808,6.073,809,6.073,810,5.505,811,4.299,812,5.505,813,6.073]],["title/modules/CaptchaModule.html",[814,2.321,815,2.597]],["body/modules/CaptchaModule.html",[0,0.008,3,0.227,4,0.247,5,0.113,13,0.613,23,0.44,26,0.013,57,0.613,79,0.286,81,0.487,82,1.116,84,0.207,89,0.722,99,0.008,100,0.01,101,0.008,108,2.883,164,2.9,203,4.933,215,1.618,217,2.837,235,1.004,239,2.223,240,3.778,313,0.169,349,5.265,360,2.074,422,3.22,492,2.642,493,1.236,505,1.846,587,4.844,616,2.074,666,2.529,675,3.051,779,5.095,790,4.252,792,4.252,804,4.896,814,4.104,815,5.312,816,3.22,817,5.259,818,5.719,819,4.707,820,4.707,821,4.707,822,4.707,823,5.265,824,3.912,825,1.675,826,1.675,827,5.398,828,7.261,829,5.398,830,7.261,831,5.829,832,4.896,833,2.529,834,5.398,835,1.512,836,4.707,837,5.398,838,4.707,839,5.398,840,3.64,841,5.398,842,4.707,843,6.685,844,5.829,845,5.398,846,4.707,847,5.829,848,4.252]],["title/injectables/CheckCompleteBaseService.html",[196,1.52,849,2.975]],["body/injectables/CheckCompleteBaseService.html",[0,0.011,3,0.162,4,0.176,5,0.081,8,0.293,9,0.607,13,0.607,15,1.726,17,3.074,20,0.687,21,2.592,22,4.313,23,0.66,25,1.088,26,0.014,27,0.57,28,0.374,29,0.759,30,1.26,43,0.855,44,0.854,45,1.196,57,0.9,64,1.268,65,1.045,71,0.591,74,3.577,78,3.644,79,0.214,81,0.347,83,1.881,84,0.205,87,1.328,89,1.012,94,2.194,99,0.006,100,0.008,101,0.006,106,0.768,108,2.305,114,2.401,162,1.423,173,1.239,196,1.979,197,3.381,198,2.172,199,2.592,201,3.964,202,3.021,209,0.514,213,2.651,214,3.667,215,1.152,220,1.204,221,5.233,222,5.233,223,4.841,224,5.233,227,3.351,239,1.778,272,4.887,273,3.381,309,2.754,326,1.4,360,2.053,362,3.189,385,2.132,409,3.189,448,1.881,580,3.189,591,5.694,616,2.053,681,2.616,807,2.243,835,1.497,849,3.874,850,6.399,851,3.027,852,4.661,853,4.21,854,3.874,855,3.021,856,5.36,857,5.36,858,5.36,859,5.36,860,5.793,861,5.233,862,5.233,863,5.36,864,5.36,865,5.346,866,3.844,867,3.844,868,3.844,869,3.844,870,3.667,871,4.202,872,2.548,873,3.874,874,3.844,875,4.661,876,4.814,877,3.844,878,4.21,879,3.605,880,5.238,881,3.844,882,3.844,883,4.661,884,3.844,885,4.202,886,4.661,887,4.661,888,3.874,889,3.844,890,4.661,891,4.661,892,3.844,893,4.454,894,3.844,895,3.844,896,3.844,897,3.844,898,3.844,899,5.36,900,3.027,901,0.929,902,3.351,903,3.351,904,4.661,905,2.293,906,2.293,907,4.661,908,4.661,909,5.36,910,6.089,911,5.36,912,4.661,913,4.21,914,4.21,915,3.605,916,4.661,917,3.351,918,3.351,919,3.351,920,3.351,921,3.027,922,3.351,923,3.351,924,3.351,925,3.351,926,2.738,927,3.351,928,3.351,929,3.351,930,3.351,931,3.351,932,3.351]],["title/components/CheckboxComponent.html",[313,0.128,507,0.909]],["body/components/CheckboxComponent.html",[0,0.006,3,0.16,4,0.174,5,0.111,8,0.16,9,0.602,10,1.961,11,1.023,13,0.602,20,0.785,23,0.665,25,0.952,26,0.013,27,0.588,28,0.394,29,0.664,30,1.222,33,1.173,36,2.26,37,1.458,43,1.091,44,1.008,45,1.357,50,1.592,52,0.869,56,1.213,57,0.75,64,0.889,65,1.069,71,0.509,79,0.213,80,1.637,81,0.343,82,0.785,84,0.203,87,1.059,99,0.006,100,0.008,101,0.006,106,0.759,191,2.882,204,2.05,209,0.709,215,1.589,217,1.892,218,2.122,220,1.09,235,1.27,239,2.198,244,3.84,246,0.785,269,0.812,287,5.287,295,0.869,313,0.217,319,2.084,380,0.785,407,1.024,416,1.165,421,2.848,423,1.213,466,0.84,467,0.93,468,0.899,469,0.93,472,1.1,473,0.785,474,1.425,476,1.059,478,1.059,493,0.869,494,1.342,495,0.636,496,1.673,497,0.961,498,0.961,499,0.84,500,0.961,501,0.812,502,0.961,503,0.812,504,0.961,505,0.84,506,0.961,507,1.594,508,0.961,509,0.84,510,0.961,511,0.84,512,0.961,513,0.84,514,0.899,515,0.961,516,0.812,517,0.961,518,0.812,519,0.961,520,0.84,521,0.961,522,0.961,523,0.812,524,0.961,525,0.84,526,1.546,527,0.84,528,0.785,529,0.869,530,1.342,531,0.812,532,0.961,533,0.84,534,0.961,535,0.84,536,0.961,537,0.785,538,0.961,539,0.84,540,0.961,541,0.84,542,0.93,543,0.961,544,0.812,545,0.869,546,0.961,547,0.812,548,0.961,549,0.812,550,0.961,551,0.84,552,0.961,553,0.84,554,0.961,555,0.84,556,0.961,557,0.812,558,0.961,559,0.84,560,0.899,561,0.84,562,0.812,563,0.961,564,0.759,565,0.812,566,0.961,567,0.812,568,0.961,569,0.812,570,0.961,571,0.812,572,0.961,573,0.812,574,0.93,575,0.961,633,4.179,647,0.528,661,1.565,668,1.762,670,1.308,671,1.219,672,1.219,673,1.178,674,1.308,700,2.286,701,2.436,702,2.574,705,1.589,713,1.565,718,1.262,719,3.643,721,1.213,722,3.128,734,2.103,735,2.483,739,2.18,740,2.18,742,2.036,743,2.036,745,2.036,746,5.475,747,3.862,748,4.809,758,2.036,760,2.359,761,2.036,766,2.114,771,1.355,774,1.892,776,1.355,777,4.621,933,3.31,934,1.255,935,5.3,936,5.3,937,5.324,938,5.3,939,3.797,940,3.797,941,5.3,942,3.84,943,3.352,944,3.797,945,3.352,946,3.797,947,3.797,948,3.797,949,3.797,950,3.797,951,3.797,952,3.797,953,3.797,954,3.797,955,3.797,956,5.3,957,3.797,958,1.219,959,1.355,960,1.219,961,1.138,962,3.797,963,3.797,964,3.797,965,3.797,966,3.797]],["title/components/CityComponent.html",[313,0.128,509,0.909]],["body/components/CityComponent.html",[0,0.005,3,0.145,4,0.158,5,0.104,8,0.145,9,0.564,10,1.864,11,0.959,13,0.564,20,0.638,23,0.669,25,1.148,26,0.013,27,0.64,28,0.402,29,0.827,30,1.046,33,1.099,37,1.33,43,1.043,44,1.058,45,0.894,50,1.137,52,0.793,56,1.137,57,0.817,64,0.832,65,1.113,71,0.582,79,0.202,81,0.313,82,0.716,84,0.133,89,0.463,99,0.005,100,0.008,101,0.005,114,2.23,147,0.692,209,0.664,220,0.971,235,1.262,246,0.716,269,0.741,295,0.793,313,0.182,319,2.158,380,0.716,400,2.841,407,0.973,416,1.081,423,1.137,466,0.766,467,0.848,468,0.82,469,0.848,472,1.003,473,0.716,474,1.417,476,0.992,478,0.992,493,0.793,494,1.257,495,0.58,496,1.606,497,0.877,498,0.877,499,0.766,500,0.877,501,0.741,502,0.877,503,0.741,504,0.877,505,0.766,506,0.877,507,0.766,508,0.877,509,1.404,510,0.877,511,0.766,512,0.877,513,0.766,514,0.82,515,0.877,516,0.741,517,0.877,518,0.741,519,0.877,520,0.766,521,0.877,522,0.877,523,0.741,524,0.877,525,0.766,526,1.47,527,0.766,528,0.716,529,0.793,530,1.257,531,0.741,532,0.877,533,0.766,534,0.877,535,0.766,536,0.877,537,0.716,538,0.877,539,0.766,540,0.877,541,0.766,542,0.848,543,0.877,544,0.741,545,0.793,546,0.877,547,0.741,548,0.877,549,0.741,550,0.877,551,0.766,552,0.877,553,0.766,554,0.877,555,0.766,556,0.877,557,0.741,558,0.877,559,0.766,560,0.82,561,0.766,562,0.741,563,0.877,564,0.692,565,0.741,566,0.877,567,0.741,568,0.877,569,0.741,570,0.877,571,0.741,572,0.877,573,0.741,574,0.848,575,0.877,584,4.472,638,5.062,647,0.691,650,2.058,661,1.502,668,1.651,670,1.193,671,1.112,672,1.112,673,1.074,674,1.193,705,1.488,713,1.704,718,2.109,721,1.329,734,2,739,2.073,740,2.073,742,2.23,743,2.23,745,2.23,758,1.33,760,2.495,761,1.33,765,2.971,766,1.381,771,1.773,774,1.773,776,1.773,825,1.54,826,1.54,833,2.326,835,0.97,934,1.176,958,1.112,959,1.236,960,1.112,961,1.038,967,3.019,968,4.965,969,4.965,970,3.286,971,2.973,972,2.973,973,2.668,974,2.504,975,2.841,976,2.72,977,2.72,978,1.86,979,3.286,980,4.965,981,3.462,982,3.462,983,4.965,984,2.058,985,3.462,986,3.14,987,3.462,988,3.462,989,4.965,990,3.462,991,3.462,992,1.957,993,3.462,994,1.957,995,3.462,996,3.462,997,3.462,998,2.43,999,3.462,1000,2.23,1001,3.462,1002,3.462,1003,3.462,1004,1.86,1005,3.462,1006,1.957,1007,3.462,1008,1.957,1009,1.193,1010,1.71,1011,1.193,1012,1.71,1013,1.71,1014,1.71,1015,1.193,1016,1.193,1017,1.71,1018,1.71,1019,1.193,1020,1.193,1021,1.193,1022,1.193,1023,1.193,1024,1.71,1025,1.651,1026,1.193,1027,1.71,1028,1.71,1029,1.193,1030,1.71,1031,1.193,1032,1.193,1033,1.193,1034,1.193,1035,2.185,1036,1.193,1037,1.193,1038,1.193,1039,1.193,1040,1.193,1041,1.193,1042,1.193,1043,1.193,1044,1.193,1045,1.193,1046,1.193,1047,1.193,1048,1.193,1049,1.193,1050,1.193,1051,1.193,1052,1.71,1053,1.193,1054,1.193,1055,1.193,1056,1.193,1057,1.193,1058,1.193,1059,1.193,1060,1.193,1061,1.193,1062,1.193,1063,1.193,1064,1.193,1065,1.193,1066,1.71,1067,1.193,1068,1.193,1069,1.193,1070,1.193,1071,1.193,1072,0.97,1073,1.193,1074,1.193,1075,1.193,1076,1.193,1077,1.193,1078,1.193,1079,1.193,1080,1.193,1081,2.326,1082,1.694,1083,1.694,1084,1.622,1085,1.112,1086,1.773,1087,1.694]],["title/classes/CommonImage.html",[0,0.006,1088,2.206]],["body/classes/CommonImage.html",[0,0.011,2,2.096,3,0.212,4,0.231,5,0.155,8,0.212,9,0.728,17,2.096,20,0.906,23,0.678,26,0.013,27,0.575,28,0.409,29,0.697,43,0.703,44,0.65,59,2.375,71,0.612,79,0.176,84,0.294,89,0.676,94,2.29,99,0.008,100,0.01,101,0.008,106,1.01,147,1.529,209,0.676,220,0.731,238,3.197,309,2.096,326,2.208,354,2.096,647,0.703,675,4.323,676,2.716,901,0.879,1072,1.974,1085,1.624,1088,3.982,1089,3.197,1090,4.204,1091,4.326,1092,5.106,1093,5.106,1094,5.106,1095,5.106,1096,5.106,1097,4.457,1098,5.106,1099,5.106,1100,6.416,1101,5.056,1102,5.056,1103,4.422,1104,5.056,1105,5.056,1106,5.056,1107,5.056,1108,5.056,1109,5.056,1110,5.056,1111,5.056,1112,5.056,1113,3.197,1114,3.827,1115,3.409,1116,3.197,1117,3.409,1118,3.409,1119,3.409,1120,3.409,1121,3.197,1122,3.409,1123,3.409,1124,3.409,1125,3.016,1126,3.663,1127,3.663,1128,3.197,1129,3.663,1130,3.663,1131,3.663,1132,2.474,1133,2.271,1134,3.409,1135,3.409,1136,3.016,1137,3.663,1138,3.197,1139,3.663,1140,3.663,1141,3.663,1142,3.409,1143,3.663,1144,3.663,1145,3.409,1146,3.663,1147,3.663,1148,4.422,1149,4.649,1150,4.649,1151,4.649,1152,3.626,1153,3.663,1154,4.649,1155,4.649,1156,3.663,1157,4.649,1158,4.326]],["title/classes/CommonImageProcessingError.html",[0,0.006,1125,2.449]],["body/classes/CommonImageProcessingError.html",[0,0.011,2,2.163,3,0.219,4,0.238,5,0.162,8,0.219,9,0.743,17,2.163,20,0.841,23,0.643,25,0.813,26,0.013,27,0.534,28,0.39,29,0.887,59,1.931,71,0.604,79,0.182,84,0.296,89,0.698,94,1.862,99,0.008,100,0.01,101,0.008,137,3.299,147,1.429,209,0.698,220,1.116,238,3.299,309,2.163,326,2.198,354,2.163,647,0.726,675,4.041,676,2.803,901,0.906,1072,1.461,1085,1.675,1088,4.234,1089,3.299,1090,3.903,1091,3.517,1092,3.78,1093,3.78,1094,3.78,1095,3.78,1096,3.78,1097,3.299,1098,3.78,1099,3.78,1103,4.701,1113,3.299,1114,3.903,1115,3.517,1116,3.299,1117,3.517,1118,3.517,1119,3.517,1120,3.517,1121,3.299,1122,3.517,1123,3.517,1124,3.517,1125,3.903,1126,5.181,1127,5.181,1128,3.299,1129,3.78,1130,3.78,1131,3.78,1132,2.553,1133,2.343,1134,3.517,1135,3.517,1136,3.112,1137,3.78,1138,3.299,1139,3.78,1140,3.78,1141,5.432,1142,5.207,1143,3.78,1144,3.78,1145,3.517,1146,3.78,1147,3.78,1148,4.472,1149,4.741,1150,4.741,1151,4.741,1152,3.698,1153,3.78,1154,4.741,1155,4.741,1156,3.78,1157,4.741,1158,4.412,1159,5.217,1160,6.544,1161,5.217,1162,6.544,1163,5.217]],["title/interfaces/CommonImageScaleFactors.html",[901,0.714,1148,2.449]],["body/interfaces/CommonImageScaleFactors.html",[0,0.011,3,0.226,4,0.246,5,0.159,8,0.226,9,0.757,13,0.757,17,2.229,20,0.691,23,0.439,25,0.838,26,0.013,27,0.544,28,0.358,29,0.585,57,0.611,59,1.991,71,0.595,79,0.187,84,0.299,89,0.72,94,1.92,99,0.008,100,0.01,101,0.008,147,1.449,209,0.72,220,0.778,238,3.401,309,2.229,326,2.228,354,2.229,647,0.748,675,4.097,676,2.889,901,0.934,1072,1.506,1085,1.727,1088,3.895,1089,3.401,1090,3.978,1091,3.626,1092,3.897,1093,3.897,1094,3.897,1095,3.897,1096,3.897,1097,3.401,1098,3.897,1099,3.897,1103,4.324,1113,3.401,1114,3.978,1115,3.626,1116,3.401,1117,3.626,1118,3.626,1119,3.626,1120,3.626,1121,3.401,1122,3.626,1123,3.626,1124,3.626,1125,3.208,1126,3.897,1127,3.897,1128,3.401,1129,3.897,1130,3.897,1131,3.897,1132,2.632,1133,2.415,1134,3.626,1135,3.626,1136,3.208,1137,3.897,1138,3.401,1139,3.897,1140,3.897,1141,3.897,1142,3.626,1143,3.897,1144,3.897,1145,3.626,1146,3.897,1147,3.897,1148,4.736,1149,5.645,1150,5.645,1151,5.252,1152,3.769,1153,3.897,1154,4.832,1155,4.832,1156,3.897,1157,4.832,1158,4.888,1164,2.145,1165,5.815,1166,5.378]],["title/classes/CommonImageScaleFactorsImpl.html",[0,0.006,1152,2.321]],["body/classes/CommonImageScaleFactorsImpl.html",[0,0.011,2,2.191,3,0.222,4,0.242,5,0.158,8,0.222,9,0.749,13,0.749,17,2.191,20,0.848,23,0.615,25,1.028,26,0.013,27,0.587,28,0.372,29,0.717,57,0.6,59,1.957,71,0.593,79,0.184,84,0.298,89,0.707,94,1.887,99,0.008,100,0.01,101,0.008,147,1.437,209,0.883,220,0.764,238,3.343,309,2.191,326,2.231,354,2.191,647,0.735,675,4.065,676,2.84,901,0.918,1072,1.481,1085,1.697,1088,3.864,1089,3.343,1090,3.936,1091,3.564,1092,3.83,1093,3.83,1094,3.83,1095,3.83,1096,3.83,1097,3.343,1098,3.83,1099,3.83,1103,4.291,1113,3.343,1114,3.936,1115,3.564,1116,3.343,1117,3.564,1118,3.564,1119,3.564,1120,3.564,1121,3.343,1122,3.564,1123,3.564,1124,3.564,1125,3.153,1126,3.83,1127,3.83,1128,3.343,1129,3.83,1130,3.83,1131,3.83,1132,2.587,1133,2.374,1134,3.564,1135,3.564,1136,3.153,1137,3.83,1138,3.343,1139,3.83,1140,3.83,1141,3.83,1142,3.564,1143,3.83,1144,3.83,1145,3.564,1146,3.83,1147,3.83,1148,4.716,1149,5.458,1150,5.458,1151,5.212,1152,4.065,1153,4.781,1154,5.458,1155,4.781,1156,4.781,1157,4.781,1158,4.85,1165,5.753,1167,6.598,1168,5.286,1169,5.286]],["title/interfaces/CommonLogMessage.html",[901,0.714,1170,2.769]],["body/interfaces/CommonLogMessage.html",[0,0.006,3,0.267,4,0.187,5,0.086,8,0.172,9,0.633,15,1.835,17,2.959,23,0.333,26,0.014,27,0.518,28,0.337,29,0.444,50,1.634,71,0.581,75,2.437,78,2.612,79,0.248,81,0.369,84,0.214,85,2.437,89,1.041,99,0.006,100,0.009,101,0.006,102,2.996,104,1.914,107,3.41,108,2.405,109,2.437,111,2.755,112,3.526,115,4.391,117,3.151,119,4.014,121,4.598,122,4.599,130,3.326,132,2.142,139,2.437,140,4.014,144,2.584,146,2.437,147,1.573,149,2.755,150,1.694,154,3.76,160,3.786,164,2.195,165,1.835,169,2.996,173,1.183,184,2.584,191,2.311,195,5.338,196,2.064,215,1.225,220,0.918,275,2.755,300,2.729,336,1.835,352,2.309,360,1.569,379,2.405,385,1.63,396,2.437,402,2.96,416,0.613,448,2.729,578,2.093,614,2.309,616,1.569,620,4.391,624,2.96,627,2.584,640,2.224,647,0.776,667,2.504,684,2.584,693,3.218,718,2.642,799,3.664,802,3.76,807,2.214,835,2.112,901,0.969,905,2.437,906,2.437,934,0.967,943,2.584,958,1.312,1072,1.562,1113,2.584,1114,2.437,1138,4.014,1164,1.63,1170,5.084,1171,2.96,1172,3.563,1173,4.086,1174,4.391,1175,4.862,1176,2.755,1177,3.151,1178,2.584,1179,3.218,1180,2.195,1181,4.391,1182,3.563,1183,3.337,1184,6.223,1185,3.563,1186,4.862,1187,4.862,1188,5.946,1189,4.862,1190,2.755,1191,4.862,1192,4.862,1193,4.862,1194,3.563,1195,4.862,1196,3.563,1197,4.28,1198,4.643,1199,3.563,1200,3.563,1201,4.862,1202,4.862,1203,4.999,1204,4.391,1205,4.999,1206,2.437,1207,4.391,1208,2.96,1209,3.218,1210,3.563,1211,3.563,1212,2.996,1213,3.563,1214,3.563,1215,3.563,1216,3.563,1217,3.563,1218,3.563,1219,3.563,1220,3.563,1221,2.584,1222,3.563,1223,3.526,1224,3.563,1225,3.563,1226,3.563,1227,3.563,1228,3.563,1229,3.563,1230,3.563,1231,3.563,1232,3.563,1233,2.96,1234,2.96,1235,3.218,1236,2.584,1237,4.862,1238,2.584,1239,3.563,1240,3.563,1241,3.563,1242,3.563,1243,3.563,1244,3.563,1245,3.563,1246,3.563,1247,3.563,1248,3.218,1249,3.326,1250,2.437,1251,3.218,1252,2.96,1253,2.96,1254,3.563,1255,3.218,1256,3.563,1257,3.563,1258,4.391,1259,2.584,1260,3.218,1261,2.96,1262,4.391,1263,3.563,1264,3.218,1265,3.218,1266,3.218,1267,3.563,1268,3.218,1269,3.563,1270,4.862,1271,2.755,1272,3.218,1273,3.563,1274,3.218,1275,2.584,1276,3.563,1277,3.563,1278,3.563,1279,3.563,1280,3.563,1281,3.563,1282,4.391,1283,3.563,1284,3.218,1285,3.563,1286,3.563,1287,3.563,1288,3.563,1289,3.563,1290,3.563,1291,2.755,1292,3.563,1293,3.218,1294,3.563]],["title/injectables/CommonLogger.html",[196,1.52,1178,2.597]],["body/injectables/CommonLogger.html",[0,0.005,3,0.222,4,0.134,5,0.061,8,0.123,9,0.499,13,0.598,15,2.818,17,3.369,20,0.377,23,0.663,25,1.244,26,0.013,27,0.654,28,0.403,29,0.863,30,0.457,43,0.733,44,0.678,45,0.528,50,1.675,57,0.897,65,1.016,71,0.575,75,2.621,78,3.291,79,0.218,81,0.265,84,0.169,85,1.748,89,0.961,99,0.005,100,0.007,101,0.005,102,3.86,104,1.373,106,1.053,107,3.67,108,2.273,109,3.742,110,3.461,111,4.23,112,4.319,113,3.461,114,1.974,115,4.941,116,2.308,117,3.31,119,4.165,121,4.737,122,4.773,123,2.308,124,2.308,125,3.461,126,3.184,128,4.152,129,2.124,130,3.742,131,2.963,132,2.41,133,1.854,134,2.308,135,2.124,136,1.316,137,1.854,138,3.374,139,3.145,140,4.543,142,2.308,143,2.308,144,3.334,145,2.124,146,3.145,147,1.57,148,2.308,149,2.963,150,2.185,151,2.308,152,2.308,153,2.308,154,3.949,156,2.308,158,2.556,160,3.929,164,1.575,165,1.316,169,2.361,173,0.983,184,2.779,191,2.428,195,4.773,196,1.627,198,1.656,215,1.317,220,1.039,275,2.963,300,2.58,336,1.316,352,2.483,360,1.688,379,2.526,385,1.753,396,1.748,402,2.124,416,0.66,448,1.434,578,2.251,614,2.483,616,1.688,620,4.612,624,3.184,627,2.779,640,2.103,647,0.815,667,1.974,684,2.779,693,3.461,718,2.47,799,3.539,802,2.963,807,2.403,835,2.081,901,0.764,905,1.748,906,1.748,934,1.04,943,1.854,958,2.256,1072,1.477,1113,2.779,1114,1.748,1138,4.165,1170,5.074,1171,2.124,1174,2.308,1175,2.556,1176,1.976,1177,2.483,1178,2.779,1179,3.461,1180,2.361,1181,4.152,1182,3.832,1183,3.223,1184,6.125,1185,3.832,1186,5.106,1187,5.106,1188,6.125,1189,5.106,1190,1.976,1191,3.832,1192,3.832,1193,5.106,1194,3.832,1195,3.832,1196,3.832,1197,4.605,1198,4.582,1199,2.556,1200,4.596,1201,5.106,1202,3.832,1203,4.941,1204,4.612,1205,4.612,1206,2.621,1207,4.612,1208,3.184,1209,3.461,1210,3.832,1211,3.832,1212,3.146,1213,3.832,1214,3.832,1215,3.832,1216,2.556,1217,2.556,1218,3.832,1219,2.556,1220,2.556,1221,2.779,1222,3.832,1223,3.334,1224,3.832,1225,3.832,1226,3.832,1227,2.556,1228,2.556,1229,2.556,1230,2.556,1231,2.556,1232,3.832,1233,3.184,1234,3.184,1235,3.461,1236,2.779,1237,5.106,1238,2.779,1239,3.832,1240,3.832,1241,2.556,1242,2.556,1243,2.556,1244,2.556,1245,4.596,1246,2.556,1247,2.556,1248,2.308,1249,2.621,1250,1.748,1251,2.308,1252,2.124,1253,2.124,1254,2.556,1255,2.308,1256,2.556,1257,2.556,1258,3.461,1259,1.854,1260,2.308,1261,2.124,1262,3.461,1263,2.556,1264,2.308,1265,2.308,1266,2.308,1267,2.556,1268,2.308,1269,2.556,1270,4.596,1271,2.963,1272,3.461,1273,3.832,1274,3.461,1275,2.779,1276,3.832,1277,3.832,1278,5.106,1279,2.556,1280,2.556,1281,3.832,1282,4.612,1283,2.556,1284,3.461,1285,3.832,1286,3.832,1287,3.832,1288,3.832,1289,2.556,1290,2.556,1291,1.976,1292,2.556,1293,2.308,1294,2.556,1295,4.394,1296,4.394,1297,4.394,1298,4.394,1299,4.394,1300,4.394,1301,4.394,1302,2.931,1303,2.931,1304,2.931,1305,2.931,1306,2.931,1307,2.931,1308,2.931,1309,2.931,1310,2.931,1311,2.931,1312,2.931,1313,2.931,1314,2.931,1315,2.556,1316,2.556,1317,2.556,1318,2.556,1319,2.931,1320,2.556,1321,2.556,1322,2.931,1323,2.931,1324,2.931,1325,2.931,1326,2.931,1327,2.931,1328,2.931,1329,2.931,1330,2.931]],["title/classes/Container.html",[0,0.006,1331,2.597]],["body/classes/Container.html",[0,0.009,2,2.293,3,0.33,4,0.253,5,0.116,8,0.232,9,0.77,13,0.77,17,3.043,23,0.599,25,1.058,26,0.013,27,0.554,28,0.363,29,0.738,57,0.77,59,2.512,65,0.981,71,0.603,74,4.246,79,0.193,83,2.707,84,0.261,89,0.908,99,0.009,100,0.011,101,0.009,106,1.106,150,2.813,162,2.512,236,5.345,305,5.345,364,4.292,483,5.161,560,1.31,561,1.224,661,1.607,870,4.379,901,1.179,926,2.833,1331,4.84,1332,4.357,1333,3.476,1334,5.917,1335,5.917,1336,5.782,1337,6.786,1338,6.401,1339,4.643,1340,5.532,1341,5.917,1342,5.917,1343,5.532,1344,5.917,1345,5.917,1346,5.546,1347,5.532,1348,5.532,1349,5.532,1350,5.917,1351,4.824,1352,4.824,1353,4.824,1354,4.824,1355,4.824,1356,4.824,1357,5.917,1358,4.824,1359,4.824]],["title/components/CoreBreadcrumbComponent.html",[313,0.128,513,0.909]],["body/components/CoreBreadcrumbComponent.html",[0,0.007,3,0.193,4,0.21,5,0.127,8,0.193,11,1.165,13,0.685,20,0.866,23,0.492,26,0.013,27,0.549,29,0.656,34,2.065,41,5.261,52,1.053,56,1.381,57,0.522,59,2.234,64,1.012,65,0.665,77,3.599,79,0.16,81,0.415,84,0.232,99,0.007,100,0.009,101,0.007,106,0.919,209,0.807,215,2.019,235,1.284,239,2.006,246,0.951,269,0.984,278,3.816,295,1.053,306,4.372,313,0.211,352,3.41,378,3.599,380,0.951,385,2.407,386,3.816,387,4.752,393,5.261,397,4.752,407,1.012,423,1.637,466,1.018,467,1.126,468,1.089,469,1.126,472,1.952,473,0.951,474,1.439,476,1.206,478,1.206,481,2.218,493,1.053,494,1.528,495,0.771,496,1.811,497,1.164,498,1.164,499,1.018,500,1.164,501,0.984,502,1.164,503,0.984,504,1.164,505,1.018,506,1.164,507,1.018,508,1.164,509,1.018,510,1.164,511,1.018,512,1.164,513,1.583,514,1.839,515,1.164,516,0.984,517,1.164,518,0.984,519,1.164,520,1.018,521,1.164,522,1.164,523,0.984,524,1.164,525,1.018,526,1.705,527,1.018,528,0.951,529,1.053,530,1.528,531,0.984,532,1.164,533,1.018,534,1.164,535,1.018,536,1.164,537,0.951,538,1.164,539,1.018,540,1.164,541,1.018,542,1.126,543,1.164,544,0.984,545,1.053,546,1.164,547,0.984,548,1.164,549,0.984,550,1.164,551,1.018,552,1.164,553,1.018,554,1.164,555,1.018,556,1.164,557,0.984,558,1.164,559,1.018,560,1.089,561,1.018,562,0.984,563,1.164,564,0.919,565,0.984,566,1.164,567,0.984,568,1.164,569,0.984,570,1.164,571,0.984,572,1.164,573,0.984,574,1.126,575,1.164,580,3.599,661,1.693,825,1.872,826,1.872,1238,3.816,1360,5.873,1361,5.305,1362,4.009,1363,5.182,1364,7.881,1365,7.151,1366,6.034,1367,6.034,1368,3.816,1369,6.034,1370,6.034,1371,6.034,1372,6.034,1373,4.069,1374,6.034,1375,6.034,1376,6.034,1377,6.034,1378,6.034,1379,6.034,1380,6.034,1381,4.598,1382,4.598]],["title/components/CountryComponent.html",[313,0.128,516,0.879]],["body/components/CountryComponent.html",[0,0.003,3,0.071,4,0.077,5,0.059,8,0.071,9,0.321,10,1.173,11,0.546,13,0.321,20,0.364,23,0.609,25,0.896,26,0.014,27,0.518,28,0.362,29,0.671,30,0.932,33,0.626,37,0.647,43,0.904,44,0.976,45,0.77,50,1.091,52,0.386,56,0.647,57,0.622,64,0.474,65,0.918,71,0.501,79,0.127,81,0.152,82,0.348,84,0.183,87,0.565,89,0.225,99,0.003,100,0.004,101,0.003,106,1.725,114,1.27,147,0.337,173,0.681,209,0.378,213,0.727,220,0.689,235,1.176,246,0.348,269,0.361,295,0.386,313,0.114,319,1.643,380,0.348,382,3.098,383,0.863,391,1.327,400,1.788,407,0.612,416,0.898,423,0.647,466,0.373,467,0.413,468,0.669,469,0.413,473,0.348,474,1.331,476,0.565,478,0.565,493,0.386,494,0.716,495,0.283,496,1.083,497,0.427,498,0.427,499,0.373,500,0.427,501,0.361,502,0.427,503,0.361,504,0.427,505,0.373,506,0.427,507,0.373,508,0.427,509,0.373,510,0.427,511,0.373,512,0.427,513,0.373,514,0.399,515,0.427,516,0.915,517,0.427,518,0.361,519,0.427,520,0.373,521,0.427,522,0.427,523,0.361,524,0.427,525,0.373,526,0.925,527,0.373,528,0.348,529,0.386,530,0.716,531,0.361,532,0.427,533,0.373,534,0.427,535,0.373,536,0.427,537,0.348,538,0.427,539,0.373,540,0.427,541,0.373,542,0.413,543,0.427,544,0.361,545,0.386,546,0.427,547,0.361,548,0.427,549,0.361,550,0.427,551,0.373,552,0.427,553,0.373,554,0.427,555,0.373,556,0.427,557,0.361,558,0.427,559,0.373,560,0.399,561,0.373,562,0.361,563,0.427,564,0.337,565,0.361,566,0.427,567,0.361,568,0.427,569,0.361,570,0.427,571,0.361,572,0.427,573,0.361,574,0.413,575,0.427,584,1.005,642,3.753,647,0.663,650,1.172,661,1.013,668,0.94,670,0.58,671,0.541,672,0.541,673,0.523,674,0.58,705,0.848,713,1.298,718,1.422,721,0.836,723,1.327,734,1.258,739,1.304,740,1.304,742,1.403,743,1.403,745,1.403,758,0.647,760,1.842,761,0.647,765,2.004,766,0.672,771,1.009,774,1.009,776,1.009,825,0.877,826,0.877,833,1.325,835,0.472,871,1.066,901,0.491,934,0.669,958,0.541,959,0.602,960,0.541,961,0.505,970,2.332,971,1.871,972,1.871,973,1.519,974,1.575,976,1.711,977,1.711,978,0.905,979,2.332,984,1.172,992,0.952,994,0.952,998,1.384,1000,1.27,1004,0.905,1006,0.952,1008,0.952,1009,0.58,1010,0.974,1011,0.58,1012,0.974,1013,0.974,1014,0.974,1015,0.58,1016,0.58,1017,0.974,1018,0.974,1019,0.58,1020,0.58,1021,0.58,1022,0.58,1023,0.58,1024,0.974,1025,0.94,1026,0.58,1027,0.974,1028,0.974,1029,0.58,1030,0.974,1031,0.58,1032,0.58,1033,0.58,1034,0.58,1035,1.473,1036,0.58,1037,0.58,1038,0.58,1039,0.58,1040,0.58,1041,0.58,1042,0.58,1043,0.58,1044,0.58,1045,0.58,1046,0.58,1047,0.58,1048,0.58,1049,0.58,1050,0.58,1051,0.58,1052,0.974,1053,0.58,1054,0.58,1055,0.58,1056,0.58,1057,0.58,1058,0.58,1059,0.58,1060,0.58,1061,0.58,1062,0.58,1063,0.58,1064,0.58,1065,0.58,1066,0.974,1067,0.58,1068,0.58,1069,0.58,1070,0.58,1071,0.58,1072,0.472,1073,0.58,1074,0.58,1075,0.58,1076,0.58,1077,0.58,1078,0.58,1079,0.58,1080,0.58,1081,1.325,1082,0.825,1083,0.825,1084,0.789,1085,0.541,1086,0.863,1087,0.825,1383,1.327,1384,2.465,1385,2.465,1386,3.972,1387,2.647,1388,2.827,1389,2.877,1390,1.685,1391,1.685,1392,1.685,1393,2.465,1394,1.685,1395,1.687,1396,1.685,1397,1.685,1398,1.685,1399,2.827,1400,1.685,1401,1.685,1402,1.685,1403,1.685,1404,1.685,1405,1.685,1406,1.685,1407,1.685,1408,1.685,1409,1.685,1410,1.685,1411,1.685,1412,2.465,1413,7.525,1414,1.598,1415,1.327,1416,2.465,1417,1.469,1418,1.469,1419,1.469,1420,1.469,1421,5.976,1422,1.469,1423,1.469,1424,1.469,1425,1.469,1426,1.469,1427,1.469,1428,2.465,1429,1.469,1430,1.469,1431,1.469,1432,1.469,1433,1.469,1434,1.469,1435,1.469,1436,1.469,1437,1.469,1438,1.469,1439,1.469,1440,1.469,1441,1.469,1442,1.469,1443,1.469,1444,1.469,1445,1.469,1446,1.469,1447,1.469,1448,1.469,1449,1.469,1450,1.469,1451,1.469,1452,1.469,1453,1.469,1454,1.469,1455,1.469,1456,1.469,1457,1.469,1458,1.469,1459,1.469,1460,1.469,1461,1.469,1462,1.469,1463,1.469,1464,1.469,1465,1.469,1466,1.469,1467,1.469,1468,1.469,1469,1.469,1470,1.469,1471,1.469,1472,1.469,1473,2.049,1474,1.469,1475,1.469,1476,2.465,1477,1.469,1478,1.469,1479,1.469,1480,1.469,1481,1.469,1482,1.469,1483,1.469,1484,1.469,1485,1.469,1486,3.099,1487,1.469,1488,1.469,1489,1.469,1490,1.907,1491,1.469,1492,1.469,1493,2.465,1494,1.469,1495,1.469,1496,1.469,1497,1.469,1498,1.469,1499,1.469,1500,1.469,1501,1.469,1502,1.469,1503,1.469,1504,1.469,1505,1.469,1506,1.469,1507,1.469,1508,1.469,1509,1.469,1510,1.469,1511,1.469,1512,1.469,1513,1.327,1514,1.469,1515,1.469,1516,5.781,1517,1.469,1518,1.469,1519,1.469,1520,1.469,1521,1.469,1522,2.465,1523,1.469,1524,1.469,1525,1.469,1526,1.469,1527,1.469,1528,1.469,1529,1.469,1530,1.469,1531,1.469,1532,1.469,1533,2.465,1534,1.469,1535,3.185,1536,1.469,1537,1.469,1538,1.469,1539,1.469,1540,1.469,1541,1.469,1542,1.469,1543,1.469,1544,1.469,1545,1.469,1546,1.469,1547,1.469,1548,1.469,1549,1.469,1550,1.469,1551,1.469,1552,1.469,1553,1.469,1554,1.469,1555,1.469,1556,1.469,1557,1.469,1558,1.469,1559,1.469,1560,1.469,1561,1.469,1562,1.469,1563,1.469,1564,1.469,1565,1.469,1566,1.469,1567,1.469,1568,1.469,1569,1.469,1570,3.729,1571,1.469,1572,1.469,1573,1.469,1574,1.469,1575,1.469,1576,1.469,1577,1.469,1578,1.469,1579,1.469,1580,1.469,1581,1.469,1582,1.469,1583,1.469,1584,1.469,1585,1.469,1586,1.469,1587,1.469,1588,1.469,1589,3.729,1590,1.469,1591,1.469,1592,1.469,1593,1.469,1594,1.469,1595,1.221,1596,1.469,1597,1.469,1598,1.469,1599,1.469,1600,1.469,1601,2.465,1602,1.469,1603,1.469,1604,1.469,1605,1.469,1606,1.327,1607,1.469,1608,1.469,1609,1.469,1610,1.469,1611,1.469,1612,1.469,1613,1.469,1614,1.469,1615,1.469,1616,1.469,1617,1.469,1618,1.469,1619,1.469,1620,1.469,1621,1.469,1622,1.469,1623,1.469,1624,1.469,1625,1.469,1626,1.469,1627,1.469,1628,1.469,1629,1.469,1630,1.469,1631,1.469,1632,1.469,1633,1.469,1634,1.469,1635,1.469,1636,1.469,1637,1.469,1638,1.469,1639,1.469,1640,1.469,1641,1.469,1642,1.469,1643,1.469,1644,1.469,1645,1.469,1646,1.469,1647,1.469,1648,1.469,1649,1.469,1650,1.469,1651,1.469,1652,1.469,1653,1.469,1654,1.469,1655,1.469,1656,1.469,1657,1.469,1658,1.469,1659,1.469,1660,1.469,1661,1.469,1662,1.469,1663,1.469,1664,1.469,1665,1.469,1666,1.469,1667,1.469,1668,1.469,1669,1.469,1670,1.469,1671,1.469,1672,1.469,1673,1.469,1674,1.469,1675,1.469,1676,1.469,1677,2.465,1678,2.465,1679,1.469,1680,1.469,1681,1.469,1682,1.469,1683,1.469,1684,2.465,1685,1.469,1686,1.469,1687,1.469,1688,1.469,1689,1.469,1690,1.469,1691,1.469,1692,1.469,1693,1.469,1694,1.469,1695,1.469,1696,1.469,1697,1.469,1698,1.469,1699,1.469,1700,1.469,1701,1.469,1702,1.469,1703,1.469,1704,1.469,1705,1.469,1706,1.469,1707,1.469,1708,1.469,1709,1.469,1710,1.469,1711,1.469,1712,1.469,1713,1.469,1714,1.469,1715,1.469,1716,1.469,1717,1.469,1718,1.469,1719,1.469,1720,1.469,1721,1.469,1722,1.469,1723,1.469,1724,1.469,1725,1.469,1726,1.469,1727,1.469,1728,1.469,1729,1.469,1730,1.469,1731,1.469,1732,1.469,1733,1.469,1734,2.877,1735,1.469,1736,1.469,1737,1.469,1738,1.469,1739,1.469,1740,1.469,1741,1.469,1742,1.469,1743,1.469,1744,1.469,1745,1.469,1746,1.469,1747,1.469,1748,1.469,1749,1.469,1750,1.469,1751,2.465,1752,1.469,1753,1.469,1754,1.469,1755,1.469,1756,1.469,1757,1.469,1758,1.469,1759,1.469,1760,1.469,1761,1.469,1762,1.469,1763,1.469,1764,1.469,1765,1.469,1766,1.469,1767,1.469,1768,1.469,1769,1.469,1770,1.469,1771,1.469,1772,1.469,1773,1.469,1774,1.469,1775,1.469,1776,1.469,1777,1.469,1778,1.469,1779,1.469,1780,1.469,1781,1.469,1782,1.469,1783,1.469,1784,1.469,1785,1.469,1786,1.469,1787,1.469,1788,1.327,1789,1.469,1790,1.469,1791,1.469,1792,1.469,1793,1.469,1794,1.469,1795,1.469,1796,1.469,1797,1.469,1798,1.469,1799,1.469,1800,1.469,1801,1.469,1802,1.469,1803,1.469,1804,1.469,1805,1.469,1806,1.469,1807,1.469,1808,1.469,1809,1.469,1810,1.469,1811,1.469,1812,1.469,1813,1.469,1814,1.469,1815,1.469,1816,1.469,1817,4.779,1818,1.469,1819,1.469,1820,1.469,1821,1.469,1822,1.469,1823,1.469,1824,1.469,1825,1.469,1826,1.469,1827,1.469,1828,1.469,1829,1.469,1830,1.469,1831,1.469,1832,2.465,1833,1.469,1834,1.469,1835,1.469,1836,1.469,1837,1.469,1838,1.469,1839,1.469,1840,1.469,1841,1.469,1842,1.469,1843,1.469,1844,1.469,1845,1.469,1846,1.469,1847,1.469,1848,1.469,1849,1.469,1850,1.469,1851,1.469,1852,1.469,1853,1.469,1854,1.469,1855,1.469,1856,1.469,1857,1.469,1858,1.469,1859,1.469,1860,1.469,1861,1.469,1862,1.469,1863,1.469,1864,1.469,1865,1.469,1866,1.469,1867,1.469,1868,1.469,1869,1.469,1870,1.469,1871,1.469,1872,1.469,1873,3.729,1874,1.469,1875,1.469,1876,1.469,1877,1.469,1878,2.465,1879,1.469,1880,1.469,1881,1.469,1882,1.469,1883,1.469,1884,1.469,1885,1.469,1886,1.469,1887,1.469,1888,1.469,1889,1.469,1890,1.469,1891,1.469,1892,1.469,1893,1.469,1894,1.469,1895,1.469,1896,1.469,1897,1.469,1898,1.469,1899,2.465,1900,1.469,1901,1.469,1902,1.469,1903,1.469,1904,1.469,1905,1.469,1906,4.155,1907,1.469,1908,1.469,1909,1.469,1910,1.469,1911,1.469,1912,1.469,1913,1.469,1914,1.469,1915,1.469,1916,1.469,1917,1.469,1918,1.469,1919,1.469,1920,1.469,1921,1.469,1922,1.469,1923,1.469,1924,1.469,1925,1.469,1926,1.469,1927,1.469,1928,1.469,1929,1.469,1930,1.469,1931,1.469,1932,1.469,1933,1.469,1934,1.469,1935,1.469,1936,1.469,1937,1.469,1938,1.469,1939,1.469,1940,1.469,1941,1.469,1942,1.469,1943,1.469,1944,1.469,1945,1.469,1946,1.469,1947,1.469,1948,1.469,1949,1.469,1950,1.469,1951,1.469,1952,1.469,1953,2.465,1954,1.469,1955,1.469,1956,1.469,1957,1.469,1958,1.469,1959,1.469,1960,1.469,1961,1.469,1962,1.469,1963,1.469,1964,1.469,1965,1.469,1966,1.469,1967,1.469]],["title/interfaces/CountryList.html",[901,0.714,1386,2.975]],["body/interfaces/CountryList.html",[0,0.003,3,0.083,4,0.09,5,0.041,8,0.083,9,0.365,10,0.633,20,0.253,26,0.014,28,0.159,29,0.35,30,0.734,43,0.274,44,0.839,45,0.579,50,0.451,65,0.681,71,0.489,79,0.142,81,0.178,82,0.407,84,0.199,87,0.394,89,0.264,99,0.003,100,0.005,101,0.003,106,1.73,147,0.394,173,0.761,209,0.264,213,0.85,220,0.285,235,0.296,313,0.101,319,0.591,382,2.305,383,1.009,391,1.552,400,0.964,416,0.952,468,0.467,474,0.33,476,0.394,478,0.394,516,0.422,584,1.175,642,4.088,647,0.722,650,1.334,661,0.762,713,1.229,718,1.356,721,0.934,723,1.552,734,1.108,739,0.703,740,0.703,742,0.757,743,0.757,745,0.757,760,1.681,765,1.911,771,1.149,774,1.149,776,1.149,825,0.998,826,0.998,833,1.508,835,0.552,871,1.246,901,0.709,934,0.467,960,0.633,961,0.591,970,1.575,971,1.009,972,1.009,974,0.85,976,0.923,977,0.923,979,1.575,984,0.817,998,0.964,1000,0.885,1009,0.679,1010,1.108,1011,0.679,1012,1.108,1013,1.108,1014,1.108,1015,0.679,1016,0.679,1017,1.108,1018,1.108,1019,0.679,1020,0.679,1021,0.679,1022,0.679,1023,0.679,1024,1.108,1025,1.07,1026,0.679,1027,1.108,1028,1.108,1029,0.679,1030,1.108,1031,0.679,1032,0.679,1033,0.679,1034,0.679,1035,1.622,1036,0.679,1037,0.679,1038,0.679,1039,0.679,1040,0.679,1041,0.679,1042,0.679,1043,0.679,1044,0.679,1045,0.679,1046,0.679,1047,0.679,1048,0.679,1049,0.679,1050,0.679,1051,0.679,1052,1.108,1053,0.679,1054,0.679,1055,0.679,1056,0.679,1057,0.679,1058,0.679,1059,0.679,1060,0.679,1061,0.679,1062,0.679,1063,0.679,1064,0.679,1065,0.679,1066,1.108,1067,0.679,1068,0.679,1069,0.679,1070,0.679,1071,0.679,1072,0.552,1073,0.679,1074,0.679,1075,0.679,1076,0.679,1077,0.679,1078,0.679,1079,0.679,1080,0.679,1081,1.508,1082,0.964,1083,0.964,1084,0.923,1085,0.633,1086,1.009,1087,0.964,1164,0.786,1383,1.552,1384,1.718,1385,1.718,1386,3.761,1387,1.428,1389,2.535,1393,1.718,1395,1.175,1412,3.557,1413,7.549,1414,1.819,1415,1.552,1416,2.806,1417,1.718,1418,1.718,1419,1.718,1420,1.718,1421,6.22,1422,1.718,1423,1.718,1424,1.718,1425,1.718,1426,1.718,1427,1.718,1428,2.806,1429,1.718,1430,1.718,1431,1.718,1432,1.718,1433,1.718,1434,1.718,1435,1.718,1436,1.718,1437,1.718,1438,1.718,1439,1.718,1440,1.718,1441,1.718,1442,1.718,1443,1.718,1444,1.718,1445,1.718,1446,1.718,1447,1.718,1448,1.718,1449,1.718,1450,1.718,1451,1.718,1452,1.718,1453,1.718,1454,1.718,1455,1.718,1456,1.718,1457,1.718,1458,1.718,1459,1.718,1460,1.718,1461,1.718,1462,1.718,1463,1.718,1464,1.718,1465,1.718,1466,1.718,1467,1.718,1468,1.718,1469,1.718,1470,1.718,1471,1.718,1472,1.718,1473,2.332,1474,1.718,1475,1.718,1476,2.806,1477,1.718,1478,1.718,1479,1.718,1480,1.718,1481,1.718,1482,1.718,1483,1.718,1484,1.718,1485,1.718,1486,3.412,1487,1.718,1488,1.718,1489,1.718,1490,2.17,1491,1.718,1492,1.718,1493,2.806,1494,1.718,1495,1.718,1496,1.718,1497,1.718,1498,1.718,1499,1.718,1500,1.718,1501,1.718,1502,1.718,1503,1.718,1504,1.718,1505,1.718,1506,1.718,1507,1.718,1508,1.718,1509,1.718,1510,1.718,1511,1.718,1512,1.718,1513,1.552,1514,1.718,1515,1.718,1516,6.046,1517,1.718,1518,1.718,1519,1.718,1520,1.718,1521,1.718,1522,2.806,1523,1.718,1524,1.718,1525,1.718,1526,1.718,1527,1.718,1528,1.718,1529,1.718,1530,1.718,1531,1.718,1532,1.718,1533,2.806,1534,1.718,1535,3.557,1536,1.718,1537,1.718,1538,1.718,1539,1.718,1540,1.718,1541,1.718,1542,1.718,1543,1.718,1544,1.718,1545,1.718,1546,1.718,1547,1.718,1548,1.718,1549,1.718,1550,1.718,1551,1.718,1552,1.718,1553,1.718,1554,1.718,1555,1.718,1556,1.718,1557,1.718,1558,1.718,1559,1.718,1560,1.718,1561,1.718,1562,1.718,1563,1.718,1564,1.718,1565,1.718,1566,1.718,1567,1.718,1568,1.718,1569,1.718,1570,4.106,1571,1.718,1572,1.718,1573,1.718,1574,1.718,1575,1.718,1576,1.718,1577,1.718,1578,1.718,1579,1.718,1580,1.718,1581,1.718,1582,1.718,1583,1.718,1584,1.718,1585,1.718,1586,1.718,1587,1.718,1588,1.718,1589,4.106,1590,1.718,1591,1.718,1592,1.718,1593,1.718,1594,1.718,1595,1.428,1596,1.718,1597,1.718,1598,1.718,1599,1.718,1600,1.718,1601,2.806,1602,1.718,1603,1.718,1604,1.718,1605,1.718,1606,1.552,1607,1.718,1608,1.718,1609,1.718,1610,1.718,1611,1.718,1612,1.718,1613,1.718,1614,1.718,1615,1.718,1616,1.718,1617,1.718,1618,1.718,1619,1.718,1620,1.718,1621,1.718,1622,1.718,1623,1.718,1624,1.718,1625,1.718,1626,1.718,1627,1.718,1628,1.718,1629,1.718,1630,1.718,1631,1.718,1632,1.718,1633,1.718,1634,1.718,1635,1.718,1636,1.718,1637,1.718,1638,1.718,1639,1.718,1640,1.718,1641,1.718,1642,1.718,1643,1.718,1644,1.718,1645,1.718,1646,1.718,1647,1.718,1648,1.718,1649,1.718,1650,1.718,1651,1.718,1652,1.718,1653,1.718,1654,1.718,1655,1.718,1656,1.718,1657,1.718,1658,1.718,1659,1.718,1660,1.718,1661,1.718,1662,1.718,1663,1.718,1664,1.718,1665,1.718,1666,1.718,1667,1.718,1668,1.718,1669,1.718,1670,1.718,1671,1.718,1672,1.718,1673,1.718,1674,1.718,1675,1.718,1676,1.718,1677,2.806,1678,2.806,1679,1.718,1680,1.718,1681,1.718,1682,1.718,1683,1.718,1684,2.806,1685,1.718,1686,1.718,1687,1.718,1688,1.718,1689,1.718,1690,1.718,1691,1.718,1692,1.718,1693,1.718,1694,1.718,1695,1.718,1696,1.718,1697,1.718,1698,1.718,1699,1.718,1700,1.718,1701,1.718,1702,1.718,1703,1.718,1704,1.718,1705,1.718,1706,1.718,1707,1.718,1708,1.718,1709,1.718,1710,1.718,1711,1.718,1712,1.718,1713,1.718,1714,1.718,1715,1.718,1716,1.718,1717,1.718,1718,1.718,1719,1.718,1720,1.718,1721,1.718,1722,1.718,1723,1.718,1724,1.718,1725,1.718,1726,1.718,1727,1.718,1728,1.718,1729,1.718,1730,1.718,1731,1.718,1732,1.718,1733,1.718,1734,3.213,1735,1.718,1736,1.718,1737,1.718,1738,1.718,1739,1.718,1740,1.718,1741,1.718,1742,1.718,1743,1.718,1744,1.718,1745,1.718,1746,1.718,1747,1.718,1748,1.718,1749,1.718,1750,1.718,1751,2.806,1752,1.718,1753,1.718,1754,1.718,1755,1.718,1756,1.718,1757,1.718,1758,1.718,1759,1.718,1760,1.718,1761,1.718,1762,1.718,1763,1.718,1764,1.718,1765,1.718,1766,1.718,1767,1.718,1768,1.718,1769,1.718,1770,1.718,1771,1.718,1772,1.718,1773,1.718,1774,1.718,1775,1.718,1776,1.718,1777,1.718,1778,1.718,1779,1.718,1780,1.718,1781,1.718,1782,1.718,1783,1.718,1784,1.718,1785,1.718,1786,1.718,1787,1.718,1788,1.552,1789,1.718,1790,1.718,1791,1.718,1792,1.718,1793,1.718,1794,1.718,1795,1.718,1796,1.718,1797,1.718,1798,1.718,1799,1.718,1800,1.718,1801,1.718,1802,1.718,1803,1.718,1804,1.718,1805,1.718,1806,1.718,1807,1.718,1808,1.718,1809,1.718,1810,1.718,1811,1.718,1812,1.718,1813,1.718,1814,1.718,1815,1.718,1816,1.718,1817,5.124,1818,1.718,1819,1.718,1820,1.718,1821,1.718,1822,1.718,1823,1.718,1824,1.718,1825,1.718,1826,1.718,1827,1.718,1828,1.718,1829,1.718,1830,1.718,1831,1.718,1832,2.806,1833,1.718,1834,1.718,1835,1.718,1836,1.718,1837,1.718,1838,1.718,1839,1.718,1840,1.718,1841,1.718,1842,1.718,1843,1.718,1844,1.718,1845,1.718,1846,1.718,1847,1.718,1848,1.718,1849,1.718,1850,1.718,1851,1.718,1852,1.718,1853,1.718,1854,1.718,1855,1.718,1856,1.718,1857,1.718,1858,1.718,1859,1.718,1860,1.718,1861,1.718,1862,1.718,1863,1.718,1864,1.718,1865,1.718,1866,1.718,1867,1.718,1868,1.718,1869,1.718,1870,1.718,1871,1.718,1872,1.718,1873,4.106,1874,1.718,1875,1.718,1876,1.718,1877,1.718,1878,2.806,1879,1.718,1880,1.718,1881,1.718,1882,1.718,1883,1.718,1884,1.718,1885,1.718,1886,1.718,1887,1.718,1888,1.718,1889,1.718,1890,1.718,1891,1.718,1892,1.718,1893,1.718,1894,1.718,1895,1.718,1896,1.718,1897,1.718,1898,1.718,1899,2.806,1900,1.718,1901,1.718,1902,1.718,1903,1.718,1904,1.718,1905,1.718,1906,4.526,1907,1.718,1908,1.718,1909,1.718,1910,1.718,1911,1.718,1912,1.718,1913,1.718,1914,1.718,1915,1.718,1916,1.718,1917,1.718,1918,1.718,1919,1.718,1920,1.718,1921,1.718,1922,1.718,1923,1.718,1924,1.718,1925,1.718,1926,1.718,1927,1.718,1928,1.718,1929,1.718,1930,1.718,1931,1.718,1932,1.718,1933,1.718,1934,1.718,1935,1.718,1936,1.718,1937,1.718,1938,1.718,1939,1.718,1940,1.718,1941,1.718,1942,1.718,1943,1.718,1944,1.718,1945,1.718,1946,1.718,1947,1.718,1948,1.718,1949,1.718,1950,1.718,1951,1.718,1952,1.718,1953,2.806,1954,1.718,1955,1.718,1956,1.718,1957,1.718,1958,1.718,1959,1.718,1960,1.718,1961,1.718,1962,1.718,1963,1.718,1964,1.718,1965,1.718,1966,1.718,1967,1.718]],["title/components/DateComponent.html",[313,0.128,518,0.879]],["body/components/DateComponent.html",[0,0.004,3,0.116,4,0.126,5,0.088,8,0.116,9,0.476,10,1.631,11,1.242,13,0.476,20,0.539,23,0.656,25,0.952,26,0.013,27,0.562,28,0.395,29,0.664,30,1.003,33,0.929,36,2.552,37,1.951,43,1.019,44,1.034,45,1.022,47,1.481,50,1.473,52,0.631,56,0.961,57,0.731,59,1.553,64,0.703,65,0.997,67,1.859,68,1.558,71,0.601,79,0.213,80,2.448,81,0.249,82,0.57,84,0.161,87,0.838,89,0.369,90,1.744,94,0.984,99,0.004,100,0.007,101,0.004,132,1.059,147,0.551,150,1.739,173,1.139,181,1.966,204,1.302,209,0.561,218,1.347,220,0.997,235,1.24,239,1.395,246,0.57,269,0.59,274,2.149,295,0.631,313,0.191,319,1.831,326,1.099,336,1.238,337,2.602,350,2.171,373,1.292,379,1.81,380,0.57,405,1.238,407,0.852,416,1.082,423,0.961,466,0.61,467,0.675,468,0.653,469,0.675,472,1.472,473,0.57,474,1.395,476,0.838,478,0.838,481,1.761,493,0.631,494,1.062,495,0.462,496,1.438,497,0.698,498,0.698,499,0.61,500,0.698,501,0.59,502,0.698,503,0.59,504,0.698,505,0.61,506,0.698,507,0.61,508,0.698,509,0.61,510,0.698,511,0.61,512,0.698,513,0.61,514,0.653,515,0.698,516,0.59,517,0.698,518,1.215,519,0.698,520,0.61,521,0.698,522,0.698,523,0.59,524,0.698,525,0.61,526,1.286,527,0.61,528,0.57,529,0.631,530,1.062,531,0.59,532,0.698,533,0.61,534,0.698,535,0.61,536,0.698,537,0.57,538,0.698,539,0.61,540,0.698,541,0.61,542,0.675,543,0.698,544,0.59,545,0.631,546,0.698,547,0.59,548,0.698,549,0.59,550,0.698,551,0.61,552,0.698,553,0.61,554,0.698,555,0.61,556,0.698,557,0.59,558,0.698,559,0.61,560,0.653,561,0.61,562,0.59,563,0.698,564,1.015,565,0.59,566,0.698,567,0.59,568,0.698,569,0.59,570,0.698,571,0.59,572,0.698,573,0.59,574,0.675,575,0.698,614,2.371,616,1.612,640,2.437,647,0.384,661,1.344,664,1.481,665,1.558,666,1.292,667,2.282,668,1.395,670,0.95,671,0.885,672,1.347,673,0.855,674,0.95,691,4.339,700,1.81,701,2.026,702,1.88,705,1.258,713,1.344,719,1.645,721,0.961,807,2.075,825,1.302,826,1.302,835,1.931,855,2.371,885,2.654,901,0.479,934,0.993,942,4.847,945,4.069,958,0.885,959,0.984,960,0.885,961,0.826,984,2.667,1009,0.95,1010,1.445,1011,0.95,1012,1.445,1013,1.445,1014,1.445,1015,0.95,1016,0.95,1017,1.445,1018,1.445,1019,0.95,1020,0.95,1021,0.95,1022,0.95,1023,0.95,1024,1.445,1025,1.395,1026,0.95,1027,1.445,1028,1.445,1029,0.95,1030,1.445,1031,0.95,1032,0.95,1033,0.95,1034,0.95,1035,1.956,1036,0.95,1037,0.95,1038,0.95,1039,0.95,1040,0.95,1041,0.95,1042,0.95,1043,0.95,1044,0.95,1045,0.95,1046,0.95,1047,0.95,1048,0.95,1049,0.95,1050,0.95,1051,0.95,1052,1.445,1053,0.95,1054,0.95,1055,0.95,1056,0.95,1057,0.95,1058,0.95,1059,0.95,1060,0.95,1061,0.95,1062,0.95,1063,0.95,1064,0.95,1065,0.95,1066,1.445,1067,0.95,1068,0.95,1069,0.95,1070,0.95,1071,0.95,1072,0.772,1073,0.95,1074,0.95,1075,0.95,1076,0.95,1077,0.95,1078,0.95,1079,0.95,1080,0.95,1085,2.066,1132,1.349,1133,2.744,1177,2.371,1212,3.795,1221,1.744,1236,1.744,1968,2.171,1969,3.659,1970,3.659,1971,4.429,1972,5.326,1973,4.429,1974,4.429,1975,5.326,1976,4.429,1977,4.95,1978,4.429,1979,4.429,1980,4.429,1981,4.429,1982,4.95,1983,3.212,1984,4.429,1985,4.429,1986,4.001,1987,2.757,1988,3.425,1989,3.59,1990,4.196,1991,3.03,1992,2.757,1993,2.757,1994,3.425,1995,2.757,1996,2.757,1997,2.757,1998,5.068,1999,2.757,2000,3.305,2001,2.757,2002,2.757,2003,2.757,2004,2.757,2005,2.503,2006,3.04,2007,2.757,2008,2.757,2009,2.757,2010,4.113,2011,5.068,2012,5.611,2013,2.757,2014,2.757,2015,4.297,2016,2.757,2017,2.757,2018,3.659,2019,2.757,2020,3.04,2021,2.654,2022,3.04,2023,3.305,2024,3.659,2025,2.829,2026,3.04,2027,3.305,2028,3.659,2029,3.659,2030,2.757,2031,2.757,2032,2.757,2033,2.757,2034,3.659,2035,2.757,2036,3.659,2037,3.659,2038,3.659,2039,3.659,2040,3.659,2041,3.659,2042,3.659,2043,3.659,2044,3.659,2045,3.659,2046,3.659,2047,2.757,2048,2.757,2049,2.757,2050,3.659,2051,2.757,2052,2.757,2053,2.404,2054,2.171,2055,3.305,2056,3.04,2057,3.04,2058,2.404,2059,3.04,2060,3.04,2061,1.481,2062,1.645,2063,1.859,2064,1.558,2065,1.998,2066,2.171,2067,1.744,2068,2.829,2069,2.404,2070,2.171,2071,3.659,2072,2.404,2073,3.659,2074,2.404,2075,3.659,2076,2.404,2077,4.429,2078,2.404,2079,5.068,2080,3.659,2081,4.429,2082,2.404,2083,3.209,2084,2.404,2085,2.404,2086,1.998,2087,1.645,2088,2.171,2089,2.404,2090,2.404,2091,2.404,2092,2.171,2093,4.429,2094,1.998,2095,1.238,2096,1.998,2097,3.659,2098,3.659,2099,3.659,2100,3.659,2101,3.659,2102,3.659,2103,3.659]],["title/interfaces/DateErrorMsg.html",[901,0.714,1994,2.769]],["body/interfaces/DateErrorMsg.html",[0,0.006,3,0.156,4,0.17,5,0.078,8,0.156,9,0.594,10,1.196,11,0.719,20,0.479,26,0.014,28,0.363,29,0.857,30,0.942,36,2.426,43,0.518,44,0.98,45,0.941,47,2,50,1.683,59,1.378,65,0.874,67,2.51,68,2.104,71,0.615,79,0.24,80,2.826,81,0.336,82,0.77,84,0.201,87,0.744,89,0.498,90,2.355,94,1.329,99,0.006,100,0.008,101,0.006,106,0.744,132,1.43,147,0.744,150,1.543,173,1.287,181,2.449,204,1.155,209,0.498,218,1.196,220,0.756,235,0.559,239,1.738,274,1.907,313,0.216,319,1.116,326,0.975,336,1.672,337,2.678,350,2.932,373,1.744,379,1.606,405,1.672,416,1.145,472,1.515,474,0.624,476,0.744,478,0.744,481,1.155,518,0.797,564,0.744,614,2.104,616,1.43,640,2.41,647,0.518,661,1.238,664,2.809,665,2.955,666,2.449,667,2.943,672,1.196,691,4.074,700,1.606,701,2.085,702,1.935,713,1.431,719,2.221,721,1.197,807,1.874,825,1.622,826,1.622,835,1.933,855,2.104,885,2.355,901,0.647,934,0.882,942,4.748,945,4.526,960,1.196,961,1.116,984,2.505,1009,1.282,1010,1.801,1011,1.282,1012,1.801,1013,1.801,1014,1.801,1015,1.282,1016,1.282,1017,1.801,1018,1.801,1019,1.282,1020,1.282,1021,1.282,1022,1.282,1023,1.282,1024,1.801,1025,1.738,1026,1.282,1027,1.801,1028,1.801,1029,1.282,1030,1.801,1031,1.282,1032,1.282,1033,1.282,1034,1.282,1035,2.257,1036,1.282,1037,1.282,1038,1.282,1039,1.282,1040,1.282,1041,1.282,1042,1.282,1043,1.282,1044,1.282,1045,1.282,1046,1.282,1047,1.282,1048,1.282,1049,1.282,1050,1.282,1051,1.282,1052,1.801,1053,1.282,1054,1.282,1055,1.282,1056,1.282,1057,1.282,1058,1.282,1059,1.282,1060,1.282,1061,1.282,1062,1.282,1063,1.282,1064,1.282,1065,1.282,1066,1.801,1067,1.282,1068,1.282,1069,1.282,1070,1.282,1071,1.282,1072,1.043,1073,1.282,1074,1.282,1075,1.282,1076,1.282,1077,1.282,1078,1.282,1079,1.282,1080,1.282,1085,1.94,1132,1.822,1133,3.1,1164,1.485,1177,2.955,1212,3.708,1221,2.355,1236,2.355,1968,2.932,1969,3.246,1970,3.246,1971,3.246,1972,5.269,1973,3.246,1974,3.246,1975,5.269,1976,3.246,1977,4.559,1978,3.246,1979,3.246,1980,3.246,1981,3.246,1982,3.246,1983,2.355,1984,3.246,1985,3.246,1986,2.932,1988,2.51,1989,3.306,1991,3.119,1994,4.074,1998,4.759,2000,2.932,2005,2.221,2006,2.698,2010,3.909,2011,4.759,2012,5.269,2015,3.909,2018,3.246,2020,2.698,2021,2.355,2022,2.698,2023,2.932,2024,3.246,2025,2.51,2026,2.698,2027,2.932,2028,3.246,2029,3.246,2034,3.246,2036,3.246,2037,3.246,2038,3.246,2039,3.246,2040,3.246,2041,3.246,2042,3.246,2043,3.246,2044,3.246,2045,3.246,2046,3.246,2050,3.246,2053,3.246,2054,2.932,2055,5.436,2056,5.001,2057,5.001,2058,5.713,2059,5.001,2060,5.001,2061,2,2062,2.221,2063,2.51,2064,2.104,2065,2.698,2066,2.932,2067,2.355,2068,3.525,2069,3.246,2070,2.932,2071,4.559,2072,3.246,2073,4.559,2074,3.246,2075,4.559,2076,3.246,2077,5.269,2078,3.246,2079,5.637,2080,4.559,2081,5.269,2082,3.246,2083,2.955,2084,3.246,2085,3.246,2086,2.698,2087,2.221,2088,2.932,2089,3.246,2090,3.246,2091,3.246,2092,2.932,2093,5.269,2094,2.698,2095,1.672,2096,2.698]],["title/directives/DateFieldFormatDirective.html",[495,0.688,565,0.879]],["body/directives/DateFieldFormatDirective.html",[0,0.009,3,0.25,4,0.272,5,0.125,8,0.25,23,0.579,26,0.013,28,0.294,79,0.207,81,0.537,84,0.228,94,2.125,99,0.009,100,0.011,101,0.009,173,1.323,326,1.558,416,1.138,421,4.071,473,1.231,474,1.189,495,1.189,564,1.189,565,1.518,647,0.828,705,2.126,713,1.794,718,2.519,721,1.624,974,3.059,2104,6.607,2105,5.189,2106,7.093,2107,7.577,2108,6.184,2109,5.951,2110,5.189,2111,5.951,2112,5.586,2113,5.951,2114,4.687,2115,5.951,2116,5.951,2117,5.951,2118,5.951,2119,5.951,2120,5.951,2121,5.189,2122,8.015,2123,5.951,2124,5.951,2125,7.093,2126,5.951,2127,5.951,2128,5.951]],["title/components/DatepickerComponent.html",[313,0.128,520,0.909]],["body/components/DatepickerComponent.html",[0,0.004,3,0.103,4,0.113,5,0.081,8,0.103,9,0.437,10,1.52,11,0.742,13,0.437,20,0.608,23,0.66,25,1.036,26,0.013,27,0.581,28,0.39,29,0.722,30,0.958,33,0.851,36,1.98,37,0.946,42,1.66,43,1.043,44,0.855,45,0.963,47,1.323,50,1.408,51,1.66,52,0.564,56,1.408,57,0.808,59,1.424,64,0.645,65,1.029,71,0.424,75,1.469,79,0.214,80,1.062,81,0.222,82,0.509,84,0.148,87,0.946,88,3.606,89,0.823,90,1.557,94,1.909,99,0.004,100,0.006,101,0.004,106,0.492,132,0.946,133,3.382,136,2.606,147,0.492,161,3.353,162,1.98,171,1.784,173,0.717,177,3.191,183,1.939,187,1.154,191,1.021,204,1.659,209,0.515,213,1.659,217,1.373,218,1.717,220,0.961,235,1.228,239,1.929,246,0.509,269,0.527,274,2.424,288,4.663,295,0.564,313,0.226,336,1.106,337,1.261,339,2.787,354,1.594,360,1.477,361,2.147,370,1.66,373,2.505,380,0.509,385,0.982,401,3.875,402,2.787,405,2.606,407,0.793,416,1.114,423,1.408,447,2.147,466,0.545,467,0.603,468,0.583,469,0.603,472,1.371,473,0.509,474,1.383,476,0.769,478,0.769,481,1.659,491,4.064,493,0.564,494,1.198,495,0.413,496,1.354,497,0.624,498,0.624,499,0.545,500,0.624,501,0.527,502,0.624,503,0.527,504,0.624,505,0.545,506,0.624,507,0.545,508,0.624,509,0.545,510,0.624,511,0.545,512,0.624,513,0.545,514,0.583,515,0.624,516,0.527,517,0.624,518,0.527,519,0.624,520,1.361,521,0.624,522,0.624,523,0.527,524,0.624,525,0.545,526,1.198,527,0.545,528,0.509,529,0.564,530,0.974,531,0.527,532,0.624,533,0.545,534,0.624,535,0.545,536,0.624,537,0.509,538,0.624,539,0.545,540,0.624,541,0.545,542,0.603,543,0.624,544,0.527,545,0.564,546,0.624,547,0.527,548,0.624,549,0.527,550,0.624,551,0.545,552,0.624,553,0.545,554,0.624,555,0.545,556,0.624,557,0.527,558,0.624,559,0.545,560,0.583,561,0.545,562,0.527,563,0.624,564,0.492,565,0.527,566,0.624,567,0.527,568,0.624,569,0.527,570,0.624,571,0.527,572,0.624,573,0.527,574,0.603,575,0.624,640,2.651,641,1.323,647,0.658,661,1.266,667,1.728,668,1.279,670,0.848,671,0.791,672,1.235,673,0.764,674,0.848,692,1.469,694,1.939,700,1.659,701,1.887,702,2.148,705,1.153,713,1.12,718,0.819,721,0.88,722,2.424,734,1.63,735,1.802,739,1.689,740,1.689,742,1.477,743,1.477,745,1.477,758,1.477,760,1.909,761,1.477,771,0.879,774,1.689,776,0.879,825,1.193,826,1.193,835,1.077,854,1.784,872,1.594,873,2.787,901,0.668,926,2.971,934,0.911,943,1.557,958,0.791,959,0.879,960,0.791,961,0.738,1009,0.848,1010,1.325,1011,0.848,1012,1.325,1013,1.325,1014,1.325,1015,0.848,1016,0.848,1017,1.325,1018,1.325,1019,0.848,1020,0.848,1021,0.848,1022,0.848,1023,0.848,1024,1.325,1025,1.573,1026,0.848,1027,1.325,1028,1.325,1029,0.848,1030,1.325,1031,0.848,1032,0.848,1033,0.848,1034,0.848,1035,1.842,1036,0.848,1037,0.848,1038,0.848,1039,0.848,1040,0.848,1041,0.848,1042,0.848,1043,0.848,1044,0.848,1045,0.848,1046,0.848,1047,0.848,1048,0.848,1049,0.848,1050,0.848,1051,0.848,1052,1.325,1053,0.848,1054,0.848,1055,0.848,1056,0.848,1057,0.848,1058,0.848,1059,0.848,1060,0.848,1061,0.848,1062,0.848,1063,0.848,1064,0.848,1065,0.848,1066,1.325,1067,0.848,1068,0.848,1069,0.848,1070,0.848,1071,0.848,1072,0.69,1073,0.848,1074,0.848,1075,0.848,1076,0.848,1077,0.848,1078,0.848,1079,0.848,1080,0.848,1085,0.791,1097,4.062,1114,2.294,1133,2.606,1174,1.939,1177,2.174,1180,2.066,1212,4.332,1250,1.469,1275,2.432,1333,1.97,1983,2.993,1986,3.727,1994,3.191,2000,1.939,2005,3.19,2010,2.294,2015,2.294,2055,1.939,2056,1.784,2057,1.784,2059,1.784,2060,1.784,2061,1.323,2062,3.19,2063,1.66,2064,1.392,2065,2.787,2068,2.593,2079,4.212,2083,2.174,2087,2.294,2097,3.353,2098,3.353,2099,3.353,2100,3.353,2101,3.353,2102,3.353,2103,3.353,2129,1.939,2130,6.305,2131,3.846,2132,3.353,2133,6.468,2134,3.846,2135,3.846,2136,3.846,2137,3.19,2138,2.432,2139,2.294,2140,3.029,2141,3.429,2142,3.846,2143,3.846,2144,4.732,2145,6.206,2146,5.059,2147,4.732,2148,5.348,2149,3.846,2150,3.846,2151,3.846,2152,3.353,2153,4.732,2154,4.732,2155,5.348,2156,5.801,2157,5.801,2158,5.801,2159,4.732,2160,3.846,2161,6.091,2162,6.149,2163,4.663,2164,2.463,2165,2.174,2166,3.846,2167,4.126,2168,4.663,2169,2.066,2170,3.846,2171,2.463,2172,3.353,2173,2.463,2174,2.787,2175,2.463,2176,2.463,2177,4.663,2178,5.348,2179,5.348,2180,6.985,2181,2.463,2182,2.463,2183,2.463,2184,2.463,2185,3.846,2186,3.029,2187,3.846,2188,3.846,2189,2.463,2190,3.846,2191,2.463,2192,3.846,2193,2.463,2194,2.463,2195,3.846,2196,2.463,2197,3.846,2198,2.463,2199,3.846,2200,2.463,2201,2.787,2202,4.663,2203,2.463,2204,2.463,2205,3.846,2206,2.463,2207,2.463,2208,2.463,2209,3.846,2210,2.463,2211,2.787,2212,2.463,2213,4.732,2214,2.463,2215,3.846,2216,2.463,2217,2.463,2218,3.846,2219,4.732,2220,3.846,2221,2.463,2222,1.939,2223,2.463,2224,2.147,2225,2.463,2226,2.463,2227,2.463,2228,2.463,2229,2.463,2230,2.463,2231,2.463,2232,2.463,2233,2.463,2234,2.463,2235,6.149,2236,2.463,2237,2.463,2238,2.463,2239,2.463,2240,2.463,2241,2.463,2242,2.463,2243,2.463,2244,2.463,2245,2.463,2246,2.463,2247,2.463,2248,2.463,2249,2.463,2250,3.846,2251,2.463,2252,3.846,2253,2.463,2254,2.463,2255,3.029,2256,4.732,2257,2.463,2258,2.463,2259,4.126,2260,2.463,2261,2.463,2262,2.463,2263,2.147,2264,1.66,2265,1.261,2266,2.463,2267,2.463,2268,2.147,2269,2.463,2270,2.463,2271,2.463,2272,2.463,2273,3.846,2274,3.029,2275,2.463,2276,2.463,2277,2.463,2278,2.463,2279,2.463,2280,2.463]],["title/directives/DayValidationDirective.html",[495,0.688,567,0.879]],["body/directives/DayValidationDirective.html",[0,0.008,3,0.22,4,0.24,5,0.11,8,0.22,13,0.746,23,0.585,25,0.818,26,0.013,27,0.428,28,0.371,29,0.57,33,1.453,44,0.844,57,0.596,71,0.566,79,0.249,81,0.474,82,1.085,84,0.201,87,1.312,89,0.702,99,0.008,100,0.01,101,0.008,163,3.537,173,1.442,181,3.358,204,2.037,209,0.879,217,2.344,218,2.109,326,1.967,416,1.076,448,2.567,473,1.085,474,1.101,495,1.101,564,1.048,567,1.607,621,3.801,640,2.859,641,2.819,667,2.95,702,2.654,735,3.076,1177,3.711,1212,2.819,2006,3.801,2010,4.707,2015,4.481,2026,4.758,2027,4.132,2062,3.129,2067,4.751,2083,4.051,2094,5.194,2095,3.22,2096,5.443,2165,3.711,2222,5.917,2281,6.55,2282,4.574,2283,5.194,2284,5.194,2285,6.567,2286,6.25,2287,7.168,2288,5.246,2289,5.246,2290,3.801,2291,5.246,2292,5.246,2293,4.574,2294,4.758,2295,4.574,2296,7.168,2297,7.735,2298,5.246,2299,5.246,2300,5.246,2301,5.246]],["title/components/DropdownComponent.html",[313,0.128,380,0.849]],["body/components/DropdownComponent.html",[0,0.006,3,0.171,4,0.186,5,0.117,8,0.171,9,0.632,11,1.075,13,0.632,20,0.815,23,0.671,25,0.988,26,0.013,27,0.601,28,0.396,29,0.689,30,1.148,33,1.233,43,1.095,44,1.012,45,1.003,50,1.452,52,0.934,56,1.275,57,0.774,64,0.934,65,1.09,71,0.569,79,0.221,81,0.368,82,0.844,84,0.157,87,1.362,99,0.006,100,0.009,101,0.006,187,2.609,204,1.728,209,0.745,217,1.988,218,1.789,220,1.149,235,1.276,246,0.844,269,0.873,295,0.934,313,0.198,319,2.259,327,4.387,380,1.523,407,1.063,416,1.168,423,1.275,466,0.903,467,0.999,468,0.966,469,0.999,472,1.838,473,0.844,474,1.43,476,1.113,478,1.113,481,2.114,493,0.934,494,1.41,495,0.684,496,1.726,497,1.033,498,1.033,499,0.903,500,1.033,501,0.873,502,1.033,503,0.873,504,1.033,505,0.903,506,1.033,507,0.903,508,1.033,509,0.903,510,1.033,511,0.903,512,1.033,513,0.903,514,0.966,515,1.033,516,0.873,517,1.033,518,0.873,519,1.033,520,0.903,521,1.033,522,1.033,523,0.873,524,1.033,525,0.903,526,1.606,527,0.903,528,0.844,529,0.934,530,1.41,531,0.873,532,1.033,533,0.903,534,1.033,535,0.903,536,1.033,537,0.844,538,1.033,539,0.903,540,1.033,541,0.903,542,0.999,543,1.033,544,0.873,545,0.934,546,1.033,547,0.873,548,1.033,549,0.873,550,1.033,551,0.903,552,1.033,553,0.903,554,1.033,555,0.903,556,1.033,557,0.873,558,1.033,559,0.903,560,0.966,561,0.903,562,0.873,563,1.033,564,0.815,565,0.873,566,1.033,567,0.873,568,1.033,569,0.873,570,1.033,571,0.873,572,1.033,573,0.873,574,0.999,575,1.033,661,1.614,668,1.852,670,1.405,671,1.31,672,1.31,673,1.266,674,1.405,702,2.348,722,3.248,734,2.185,735,2.609,739,2.264,740,2.264,742,2.14,743,2.14,745,2.14,758,2.14,760,2.433,761,2.14,766,2.222,771,1.456,774,1.456,776,1.456,870,3.783,934,1.319,958,1.31,959,1.456,960,1.31,961,1.223,975,3.104,2146,4.995,2259,3.557,2302,3.557,2303,5.57,2304,5.57,2305,6.342,2306,6.342,2307,6.342,2308,5.53,2309,5.57,2310,4.08,2311,4.08,2312,4.08,2313,4.08,2314,4.08,2315,4.08,2316,4.08,2317,4.08,2318,4.08,2319,4.08,2320,4.08,2321,4.08,2322,4.08,2323,4.08]],["title/interfaces/FileUploaderMsg.html",[901,0.714,2324,3.234]],["body/interfaces/FileUploaderMsg.html",[0,0.003,3,0.165,4,0.085,5,0.161,8,0.212,9,0.573,11,0.595,12,4.402,20,0.241,22,2.347,26,0.014,27,0.412,28,0.226,29,0.203,30,0.787,34,2.05,36,1.456,40,2.851,45,1.081,50,1.425,58,1.631,59,2.127,60,1.473,64,0.314,65,0.786,71,0.455,79,0.256,80,0.807,81,0.169,82,0.387,83,0.915,84,0.118,87,1.341,89,1.028,94,2.44,99,0.005,100,0.005,101,0.003,104,0.876,108,1.697,121,2.079,132,1.185,136,0.84,138,1.579,139,1.116,145,2.234,147,1.511,150,0.775,165,1.767,168,1.005,169,1.005,170,4.402,171,1.355,173,1.476,184,1.183,187,0.876,188,2.429,189,1.631,191,1.278,192,1.631,204,0.58,209,0.25,210,1.057,213,0.807,218,0.601,235,0.463,241,2.224,272,1.116,273,1.183,276,1.057,298,1.631,302,1.473,304,1.631,309,1.278,313,0.123,326,1.423,333,1.183,335,1.005,337,2.783,345,1.473,348,1.473,354,1.631,360,0.719,362,1.84,364,1.183,367,2.851,370,3.874,384,1.183,385,1.23,386,1.183,396,1.116,410,1.183,415,1.355,416,0.962,419,1.631,422,1.116,423,1.156,467,0.458,468,0.443,472,0.893,473,0.814,474,0.314,476,0.374,478,0.374,481,0.58,488,2.429,491,1.005,492,0.915,523,0.4,578,0.958,587,1.355,590,2.653,614,1.057,647,0.98,650,2.382,661,0.73,667,1.385,671,0.601,673,1.221,675,1.057,681,1.509,700,0.807,701,1.82,702,1.142,709,1.473,713,1.195,718,2.131,719,3.582,721,0.901,728,2.234,747,1.183,799,1.657,807,1.931,824,2.234,825,0.957,826,0.957,840,1.261,846,1.631,871,1.183,872,2.382,880,1.355,901,0.325,926,0.958,934,0.443,943,1.95,960,0.601,961,0.561,986,1.183,1009,0.644,1010,1.062,1011,0.644,1012,1.062,1013,1.062,1014,1.062,1015,0.644,1016,0.644,1017,1.062,1018,1.062,1019,0.644,1020,0.644,1021,0.644,1022,0.644,1023,0.644,1024,1.062,1025,1.025,1026,0.644,1027,1.062,1028,1.062,1029,0.644,1030,1.062,1031,0.644,1032,0.644,1033,0.644,1034,0.644,1035,1.572,1036,0.644,1037,0.644,1038,0.644,1039,0.644,1040,0.644,1041,0.644,1042,0.644,1043,0.644,1044,0.644,1045,0.644,1046,0.644,1047,0.644,1048,0.644,1049,0.644,1050,0.644,1051,0.644,1052,1.062,1053,0.644,1054,0.644,1055,0.644,1056,0.644,1057,0.644,1058,0.644,1059,0.644,1060,0.644,1061,0.644,1062,0.644,1063,0.644,1064,0.644,1065,0.644,1066,1.062,1067,0.644,1068,0.644,1069,0.644,1070,0.644,1071,0.644,1072,1.102,1073,0.644,1074,0.644,1075,0.644,1076,0.644,1077,0.644,1078,0.644,1079,0.644,1080,0.644,1081,1.843,1085,1.621,1088,3.672,1090,4.821,1091,2.653,1097,4.155,1103,1.84,1116,1.183,1121,1.183,1125,3.241,1128,1.183,1133,0.84,1134,1.261,1142,2.079,1145,3.077,1148,1.84,1152,1.057,1158,1.261,1164,0.746,1183,0.915,1197,3.874,1204,2.429,1205,2.429,1206,2.722,1221,3.436,1249,1.84,1250,2.347,1252,1.355,1253,1.355,1259,1.183,1275,1.183,1333,1.579,1606,1.473,1788,1.473,1983,1.183,1988,1.261,1989,1.95,2005,1.84,2011,2.429,2020,2.234,2022,2.851,2025,2.079,2061,1.005,2062,1.116,2064,1.743,2065,1.355,2086,1.355,2087,1.116,2095,0.84,2112,1.473,2139,1.116,2140,1.473,2141,2.851,2165,1.057,2201,1.355,2202,2.689,2255,1.473,2265,0.958,2324,3.099,2325,1.631,2326,1.473,2327,2.689,2328,1.871,2329,3.084,2330,1.871,2331,1.473,2332,3.934,2333,3.594,2334,2.851,2335,1.871,2336,3.431,2337,2.488,2338,2.653,2339,3.084,2340,3.084,2341,1.871,2342,3.084,2343,1.631,2344,3.084,2345,1.871,2346,3.084,2347,1.871,2348,1.871,2349,1.871,2350,1.871,2351,1.871,2352,1.871,2353,1.116,2354,1.871,2355,1.871,2356,1.871,2357,1.871,2358,3.431,2359,1.871,2360,4.402,2361,3.099,2362,1.871,2363,3.084,2364,2.689,2365,3.084,2366,1.871,2367,3.084,2368,1.743,2369,1.183,2370,1.473,2371,1.631,2372,3.099,2373,1.261,2374,1.473,2375,1.871,2376,1.871,2377,1.871,2378,3.934,2379,1.871,2380,1.871,2381,1.871,2382,1.871,2383,1.871,2384,1.871,2385,1.871,2386,1.871,2387,1.871,2388,1.871,2389,1.871,2390,1.871,2391,3.979,2392,2.851,2393,1.871,2394,1.871,2395,1.871,2396,1.261,2397,3.934,2398,1.871,2399,1.871,2400,6.835,2401,1.871,2402,1.871,2403,1.631,2404,1.871,2405,1.871,2406,1.871,2407,1.631,2408,2.429,2409,1.871,2410,1.871,2411,3.934,2412,1.871,2413,1.871,2414,1.631,2415,1.473,2416,1.871,2417,1.871,2418,1.871,2419,1.871,2420,3.084,2421,1.871,2422,1.871,2423,1.871,2424,1.871,2425,1.871,2426,3.084,2427,1.871,2428,1.871,2429,3.934,2430,3.934,2431,1.871,2432,3.084,2433,1.631,2434,1.871,2435,2.689,2436,1.871,2437,1.871,2438,1.871,2439,1.871,2440,1.871,2441,1.871,2442,3.934,2443,3.084,2444,3.084,2445,1.871,2446,3.934,2447,1.631,2448,1.871,2449,1.631,2450,2.689,2451,3.084,2452,3.084,2453,1.871,2454,1.871,2455,1.631,2456,3.084,2457,1.871,2458,1.871,2459,3.431,2460,1.871,2461,1.261,2462,3.084,2463,1.631,2464,2.851,2465,1.116,2466,3.976,2467,3.431,2468,1.631,2469,1.473,2470,1.871,2471,1.871,2472,1.473,2473,1.871,2474,4.564,2475,1.355,2476,3.084,2477,2.689,2478,1.871,2479,1.261,2480,1.871,2481,3.934,2482,3.937,2483,4.737,2484,4.564,2485,1.871,2486,1.871,2487,1.355,2488,1.871,2489,1.871,2490,1.871,2491,1.473,2492,1.871,2493,1.871,2494,3.084,2495,1.871,2496,1.871,2497,1.871,2498,3.084,2499,1.871,2500,1.871,2501,1.871,2502,1.871,2503,1.261,2504,1.871,2505,3.934,2506,3.084,2507,3.307,2508,1.631,2509,1.631,2510,5.746,2511,1.871,2512,1.355,2513,1.871,2514,1.871,2515,1.473,2516,1.871,2517,1.871,2518,1.631,2519,1.871,2520,3.084,2521,1.871,2522,1.871,2523,1.871,2524,2.851,2525,1.871,2526,1.631,2527,1.871,2528,1.631,2529,1.355,2530,1.871,2531,1.871,2532,1.871,2533,1.871,2534,1.631,2535,1.631,2536,1.871,2537,3.084,2538,3.934,2539,1.871,2540,1.871,2541,1.871,2542,1.871,2543,1.871,2544,1.871,2545,1.871,2546,1.871,2547,3.934,2548,1.871,2549,1.871,2550,1.871,2551,1.871,2552,1.871,2553,1.871,2554,1.871,2555,1.871,2556,1.871,2557,1.871,2558,2.234,2559,3.084,2560,3.084,2561,1.871,2562,1.871,2563,7.043,2564,5.433,2565,3.084,2566,3.934,2567,3.084,2568,5.048,2569,1.631,2570,1.871,2571,1.871,2572,1.871,2573,3.084,2574,3.934,2575,1.871,2576,1.871,2577,1.871,2578,3.979,2579,5.048,2580,1.871,2581,2.689,2582,5.746,2583,1.871,2584,1.355,2585,2.079,2586,1.473,2587,1.473,2588,4.564,2589,1.871,2590,1.871,2591,5.048,2592,1.871,2593,1.871,2594,1.871,2595,1.871,2596,1.871,2597,1.871,2598,1.871,2599,1.871,2600,3.084,2601,1.871,2602,1.871,2603,1.871,2604,3.084,2605,3.084,2606,3.934,2607,1.871,2608,3.084,2609,1.871,2610,1.871,2611,1.631,2612,1.871,2613,1.871,2614,1.871,2615,1.871,2616,1.871,2617,1.871,2618,1.871,2619,1.871,2620,4.564,2621,1.871,2622,3.084,2623,1.871,2624,1.631,2625,1.473,2626,1.871,2627,3.084,2628,1.871,2629,1.871,2630,4.564,2631,1.871,2632,1.871,2633,6.223,2634,1.871,2635,1.871,2636,2.689,2637,3.084,2638,1.871,2639,1.871,2640,3.934,2641,1.871,2642,5.048,2643,3.934,2644,3.934,2645,5.048,2646,1.871,2647,2.689,2648,1.871,2649,1.871,2650,1.355,2651,1.473,2652,1.871,2653,1.871,2654,1.355,2655,1.871,2656,1.871,2657,1.871,2658,3.084,2659,4.564,2660,4.564,2661,1.871,2662,5.433,2663,1.871,2664,1.871,2665,1.631,2666,1.631,2667,1.871,2668,1.871,2669,3.084,2670,1.871,2671,3.084,2672,1.871,2673,1.871,2674,1.871,2675,3.084,2676,3.084,2677,1.871,2678,1.871,2679,1.871,2680,1.871,2681,1.871,2682,1.871,2683,1.871,2684,1.871,2685,1.871,2686,4.564,2687,1.871,2688,1.473,2689,1.871,2690,4.564,2691,3.084,2692,3.934,2693,4.564,2694,1.871,2695,1.871,2696,1.871,2697,1.871,2698,1.871,2699,1.871,2700,1.871,2701,1.871,2702,1.871,2703,1.871,2704,3.084,2705,3.934,2706,3.084,2707,1.871,2708,3.084,2709,1.871,2710,1.871,2711,1.871,2712,1.871,2713,1.871,2714,1.871,2715,3.934,2716,1.473,2717,1.871,2718,1.871,2719,1.871,2720,1.871,2721,1.183,2722,5.048,2723,4.564,2724,1.871,2725,1.871,2726,2.689,2727,1.871,2728,1.871,2729,1.871,2730,1.871,2731,1.871,2732,1.871,2733,1.871,2734,1.871,2735,1.871,2736,1.871,2737,1.871,2738,1.871,2739,1.871,2740,1.871,2741,1.871,2742,1.871,2743,1.871,2744,1.871,2745,3.084,2746,1.871,2747,1.871,2748,1.871,2749,3.084,2750,3.084,2751,4.564,2752,5.048,2753,1.631,2754,1.473,2755,1.871,2756,1.871,2757,1.871,2758,1.631,2759,3.084,2760,1.871,2761,1.871,2762,1.871,2763,1.871,2764,1.871,2765,1.871,2766,1.871,2767,1.871,2768,1.871,2769,1.871,2770,3.934,2771,3.084,2772,1.871,2773,3.084,2774,1.871,2775,1.871,2776,1.871,2777,3.084,2778,1.871,2779,1.871,2780,1.871,2781,4.564,2782,1.871,2783,1.871,2784,1.871,2785,3.084,2786,1.871,2787,1.871,2788,1.871,2789,1.871,2790,1.871,2791,1.871,2792,1.871,2793,1.871,2794,1.473,2795,1.871,2796,1.871,2797,1.871,2798,1.871,2799,3.084,2800,1.871,2801,1.871,2802,1.871,2803,1.871,2804,1.871,2805,1.871,2806,1.473,2807,1.871,2808,1.871,2809,1.871,2810,1.871,2811,3.084,2812,3.084,2813,3.084,2814,1.871,2815,1.871,2816,3.084,2817,1.871,2818,1.871,2819,1.871,2820,1.871,2821,1.871,2822,1.871,2823,1.871,2824,1.871,2825,1.473,2826,1.871,2827,1.871,2828,1.871,2829,1.871,2830,1.871,2831,1.871,2832,1.871,2833,1.871,2834,1.871,2835,1.871,2836,1.871,2837,1.871,2838,1.631,2839,1.871,2840,1.871,2841,3.084,2842,3.084,2843,1.871,2844,1.871,2845,1.871,2846,1.871,2847,1.871]],["title/components/FormActionBarComponent.html",[313,0.128,525,0.909]],["body/components/FormActionBarComponent.html",[0,0.006,3,0.172,4,0.187,5,0.117,8,0.172,11,1.482,13,0.634,14,5.005,16,3.531,20,0.817,23,0.626,25,0.638,26,0.013,27,0.557,28,0.353,29,0.445,30,1.176,33,1.236,36,2.352,43,0.95,44,0.878,45,1.144,52,1.921,53,3.156,56,1.278,57,0.634,64,0.936,65,0.592,71,0.408,79,0.194,81,0.37,82,0.847,84,0.157,87,1.364,89,0.548,99,0.006,100,0.009,101,0.006,147,0.818,204,1.732,209,0.747,218,1.793,235,1.276,246,0.847,269,0.876,295,0.937,313,0.199,380,0.847,407,0.936,416,1.073,423,1.278,466,0.906,467,1.003,468,0.97,469,1.003,472,1.841,473,0.847,474,1.43,476,1.116,478,1.116,481,2.117,493,0.937,494,1.414,495,0.686,496,1.728,497,1.037,498,1.037,499,0.906,500,1.037,501,0.876,502,1.037,503,0.876,504,1.037,505,0.906,506,1.037,507,0.906,508,1.037,509,0.906,510,1.037,511,0.906,512,1.037,513,0.906,514,0.97,515,1.037,516,0.876,517,1.037,518,0.876,519,1.037,520,0.906,521,1.037,522,1.037,523,0.876,524,1.037,525,1.511,526,1.609,527,0.906,528,0.847,529,0.937,530,1.414,531,0.876,532,1.037,533,0.906,534,1.037,535,0.906,536,1.037,537,0.847,538,1.037,539,0.906,540,1.037,541,0.906,542,1.003,543,1.037,544,0.876,545,0.937,546,1.037,547,0.876,548,1.037,549,0.876,550,1.037,551,0.906,552,1.037,553,0.906,554,1.037,555,0.906,556,1.037,557,0.876,558,1.037,559,0.906,560,0.97,561,0.906,562,0.876,563,1.037,564,0.818,565,0.876,566,1.037,567,0.876,568,1.037,569,0.876,570,1.037,571,0.876,572,1.037,573,0.876,574,1.003,575,1.037,647,0.57,700,2.408,701,2.535,702,2.352,703,4.869,705,1.674,706,5.005,713,1.616,716,4.869,718,1.362,721,1.278,724,3.57,825,1.732,826,1.732,1009,1.41,1010,1.923,1011,1.41,1012,1.923,1013,1.923,1014,1.923,1015,1.41,1016,1.41,1017,1.923,1018,1.923,1019,1.41,1020,1.41,1021,1.41,1022,1.41,1023,1.41,1024,1.923,1025,1.857,1026,1.41,1027,1.923,1028,1.923,1029,1.41,1030,1.923,1031,1.41,1032,1.41,1033,1.41,1034,1.41,1035,2.351,1036,1.41,1037,1.41,1038,1.41,1039,1.41,1040,1.41,1041,1.41,1042,1.41,1043,1.41,1044,1.41,1045,1.41,1046,1.41,1047,1.41,1048,1.41,1049,1.41,1050,1.41,1051,1.41,1052,1.923,1053,1.41,1054,1.41,1055,1.41,1056,1.41,1057,1.41,1058,1.41,1059,1.41,1060,1.41,1061,1.41,1062,1.41,1063,1.41,1064,1.41,1065,1.41,1066,1.923,1067,1.41,1068,1.41,1069,1.41,1070,1.41,1071,1.41,1072,1.147,1073,1.41,1074,1.41,1075,1.41,1076,1.41,1077,1.41,1078,1.41,1079,1.41,1080,1.41,2848,6.133,2849,5.642,2850,2.967,2851,4.398,2852,4.398,2853,5.541,2854,5.541,2855,6.228,2856,5.584,2857,4.095,2858,4.095,2859,4.095,2860,4.095,2861,3.57,2862,3.57,2863,4.095,2864,4.095,2865,4.095]],["title/components/FormSubmitBarComponent.html",[313,0.128,527,0.909]],["body/components/FormSubmitBarComponent.html",[0,0.006,2,2.214,3,0.161,4,0.175,5,0.112,8,0.161,11,1.552,13,0.606,14,4.838,16,3.378,20,0.79,23,0.617,26,0.013,27,0.501,28,0.374,30,1.178,33,1.182,36,2.274,43,0.971,44,0.897,45,1.195,52,0.879,53,3.018,56,1.223,57,0.436,64,1.212,65,0.555,71,0.391,79,0.186,81,0.347,82,0.794,84,0.147,87,1.327,99,0.006,100,0.008,101,0.006,106,0.767,136,2.399,147,0.767,162,1.977,187,2.502,204,1.657,209,0.715,210,3.018,218,1.715,235,1.271,246,0.794,269,1.786,295,0.879,297,3.87,306,4.812,313,0.218,380,0.794,385,2.13,386,3.378,407,0.895,416,1.085,423,1.223,466,0.85,467,0.94,468,0.909,469,0.94,472,1.78,473,0.794,474,1.425,476,1.067,478,1.067,481,2.06,493,0.879,494,1.352,495,0.644,496,1.681,497,0.972,498,0.972,499,0.85,500,0.972,501,0.821,502,0.972,503,0.821,504,0.972,505,0.85,506,0.972,507,0.85,508,0.972,509,0.85,510,0.972,511,0.85,512,0.972,513,0.85,514,0.909,515,0.972,516,0.821,517,0.972,518,0.821,519,0.972,520,0.85,521,0.972,522,0.972,523,0.821,524,0.972,525,0.85,526,1.555,527,1.47,528,0.794,529,1.406,530,1.352,531,0.821,532,0.972,533,0.85,534,0.972,535,0.85,536,0.972,537,0.794,538,0.972,539,0.85,540,0.972,541,0.85,542,0.94,543,0.972,544,0.821,545,0.879,546,0.972,547,0.821,548,0.972,549,0.821,550,0.972,551,0.85,552,0.972,553,0.85,554,0.972,555,0.85,556,0.972,557,0.821,558,0.972,559,0.85,560,0.909,561,0.85,562,0.821,563,0.972,564,0.767,565,0.821,566,0.972,567,0.821,568,0.972,569,0.821,570,0.972,571,0.821,572,0.972,573,0.821,574,0.94,575,0.972,580,3.186,616,2.052,647,0.534,700,2.303,701,2.45,702,2.274,705,1.601,706,4.838,713,1.572,721,1.223,825,1.657,826,1.657,1009,1.322,1010,1.84,1011,1.322,1012,1.84,1013,1.84,1014,1.84,1015,1.322,1016,1.322,1017,1.84,1018,1.84,1019,1.322,1020,1.322,1021,1.322,1022,1.322,1023,1.322,1024,1.84,1025,1.776,1026,1.322,1027,1.84,1028,1.84,1029,1.322,1030,1.84,1031,1.322,1032,1.322,1033,1.322,1034,1.322,1035,2.287,1036,1.322,1037,1.322,1038,1.322,1039,1.322,1040,1.322,1041,1.322,1042,1.322,1043,1.322,1044,1.322,1045,1.322,1046,1.322,1047,1.322,1048,1.322,1049,1.322,1050,1.322,1051,1.322,1052,1.84,1053,1.322,1054,1.322,1055,1.322,1056,1.322,1057,1.322,1058,1.322,1059,1.322,1060,1.322,1061,1.322,1062,1.322,1063,1.322,1064,1.322,1065,1.322,1066,1.84,1067,1.322,1068,1.322,1069,1.322,1070,1.322,1071,1.322,1072,1.075,1073,1.322,1074,1.322,1075,1.322,1076,1.322,1077,1.322,1078,1.322,1079,1.322,1080,1.322,1373,3.601,2137,3.186,2169,2.869,2482,3.87,2848,6.047,2849,5.564,2850,2.781,2851,4.206,2852,4.206,2853,5.356,2854,5.356,2855,6.086,2861,3.347,2866,6.64,2867,4.206,2868,4.657,2869,5.341,2870,5.341,2871,5.341,2872,5.341,2873,6.142,2874,5.341,2875,3.838,2876,3.838,2877,4.657,2878,3.378,2879,5.23,2880,6.64,2881,5.341,2882,5.341,2883,3.378,2884,4.206,2885,5.341,2886,3.838,2887,3.838,2888,3.838]],["title/components/FullNameComponent.html",[313,0.128,528,0.849]],["body/components/FullNameComponent.html",[0,0.005,3,0.136,4,0.148,5,0.099,8,0.136,9,0.537,10,1.796,11,0.914,13,0.537,20,0.719,23,0.664,25,0.872,26,0.013,27,0.647,28,0.396,29,0.608,30,0.958,33,1.048,34,2.126,36,1.2,43,1.057,44,1.013,45,0.852,50,1.656,52,0.742,56,1.084,57,0.698,64,0.794,65,1.046,71,0.594,79,0.228,80,1.398,81,0.293,82,0.67,84,0.215,87,0.946,99,0.005,100,0.007,101,0.005,106,0.648,168,1.741,204,1.468,209,0.633,213,2.041,215,1.419,217,1.69,218,1.52,220,1.131,235,1.256,246,1.156,269,0.693,295,0.742,313,0.205,335,3.304,354,1.962,379,2.041,380,0.67,385,1.888,407,0.938,416,1.059,421,3.304,423,1.084,466,0.717,467,0.794,468,0.767,469,0.794,472,1.62,473,0.67,474,1.411,476,0.946,478,0.946,481,1.908,493,0.742,494,1.199,495,0.543,496,1.557,497,0.821,498,0.821,499,0.717,500,0.821,501,0.693,502,0.821,503,0.693,504,0.821,505,0.717,506,0.821,507,0.717,508,0.821,509,0.717,510,0.821,511,0.717,512,0.821,513,0.717,514,0.767,515,0.821,516,0.693,517,0.821,518,0.693,519,0.821,520,0.717,521,0.821,522,0.821,523,0.693,524,0.821,525,0.717,526,1.416,527,0.717,528,1.496,529,1.615,530,1.199,531,0.693,532,0.821,533,0.717,534,0.821,535,0.717,536,0.821,537,0.67,538,0.821,539,0.717,540,0.821,541,0.717,542,0.794,543,0.821,544,0.693,545,0.742,546,0.821,547,0.693,548,0.821,549,0.693,550,0.821,551,0.717,552,0.821,553,0.717,554,0.821,555,0.717,556,0.821,557,0.693,558,0.821,559,0.717,560,0.767,561,0.717,562,0.693,563,0.821,564,0.648,565,0.693,566,0.821,567,0.693,568,0.821,569,0.693,570,0.821,571,0.693,572,0.821,573,0.693,574,0.794,575,0.821,605,3.192,647,0.451,661,1.456,668,1.574,670,1.116,671,1.041,672,1.041,673,1.005,674,1.116,701,1.293,702,2.07,705,1.419,713,1.324,721,1.084,722,2.864,734,1.926,735,2.218,739,1.996,740,1.996,742,1.818,743,1.818,745,1.818,747,3.536,758,1.818,760,2.195,761,1.818,766,1.888,771,1.157,774,2.335,776,1.157,807,2.119,840,3.192,901,0.563,915,3.192,934,1.121,958,1.041,959,1.157,960,1.041,961,0.971,1132,1.586,1989,2.049,2353,4.075,2464,3.43,2878,2.994,2883,2.994,2889,6.414,2890,5.901,2891,2.552,2892,4.456,2893,4.844,2894,4.127,2895,3.728,2896,3.728,2897,3.728,2898,3.771,2899,4.404,2900,4.404,2901,4.404,2902,4.876,2903,4.411,2904,4.052,2905,6.151,2906,6.151,2907,6.151,2908,4.876,2909,4.734,2910,3.241,2911,3.241,2912,3.241,2913,3.241,2914,3.241,2915,3.241,2916,3.241,2917,3.241,2918,3.241,2919,3.241,2920,3.241,2921,3.241,2922,4.052,2923,3.241,2924,3.241,2925,3.241,2926,3.241,2927,4.456,2928,3.728,2929,3.241,2930,3.728,2931,2.994,2932,4.127,2933,3.192,2934,4.127,2935,4.127,2936,4.127,2937,4.127,2938,3.241,2939,3.241,2940,2.826,2941,2.552,2942,4.127,2943,2.552,2944,4.876,2945,2.552,2946,4.876,2947,2.552,2948,4.876,2949,2.348,2950,2.348,2951,2.826,2952,2.826,2953,2.826,2954,2.826,2955,2.826,2956,2.826,2957,2.826,2958,4.876,2959,4.876,2960,2.826,2961,2.826,2962,5.956,2963,6.831]],["title/interfaces/FullNameErrorMsg.html",[901,0.714,2922,2.975]],["body/interfaces/FullNameErrorMsg.html",[0,0.007,3,0.199,4,0.217,5,0.099,8,0.199,9,0.699,10,1.523,20,0.61,26,0.014,27,0.612,28,0.304,29,0.787,30,0.96,34,2.13,36,1.756,43,0.66,44,0.93,45,0.854,50,1.816,65,1.046,71,0.608,79,0.261,80,2.045,81,0.428,82,0.981,84,0.262,87,0.948,99,0.007,100,0.01,101,0.007,168,2.548,204,1.471,209,0.634,213,2.045,215,1.422,217,1.693,218,1.523,220,1.046,235,0.712,246,0.981,313,0.214,335,3.308,354,1.966,379,2.045,385,1.892,416,1.175,421,3.308,472,1.784,474,0.795,476,0.948,478,0.948,481,1.471,528,1.414,529,1.565,605,3.198,647,0.66,661,1.458,701,1.892,702,2.279,713,1.458,721,1.41,722,3.154,734,2.121,735,2.222,739,1.693,740,1.693,747,2.999,758,1.822,760,2.198,761,1.822,766,1.892,771,1.693,774,2.677,776,1.693,807,1.91,840,3.198,901,0.824,915,3.198,934,1.123,960,1.523,961,1.422,1132,2.321,1164,1.892,1989,2.999,2353,4.079,2464,3.436,2878,2.999,2883,2.999,2889,3.735,2890,3.436,2891,3.735,2892,4.461,2893,4.849,2894,4.135,2895,3.735,2896,3.735,2897,3.735,2898,3.198,2899,3.735,2900,3.735,2901,3.735,2902,4.135,2903,5.183,2904,3.436,2905,4.135,2906,4.135,2907,4.135,2908,4.135,2922,4.954,2927,4.461,2928,3.735,2930,3.735,2931,2.999,2932,4.135,2933,3.198,2934,4.135,2935,4.135,2936,4.135,2937,4.135,2940,4.135,2941,3.735,2942,5.369,2943,3.735,2944,5.962,2945,3.735,2946,5.962,2947,3.735,2948,5.962,2949,3.436,2950,3.436,2951,4.135,2952,4.135,2953,4.135,2954,4.135,2955,4.135,2956,4.135,2957,4.135,2958,5.962,2959,5.962,2960,4.135,2961,4.135]],["title/interfaces/GeoAddressResult.html",[901,0.714,2964,2.597]],["body/interfaces/GeoAddressResult.html",[0,0.008,3,0.21,4,0.229,5,0.105,8,0.21,9,0.724,15,2.249,17,2.643,26,0.013,27,0.408,28,0.377,43,0.696,45,1.148,71,0.617,79,0.265,81,0.452,84,0.245,85,2.986,87,1,89,0.988,99,0.008,100,0.01,101,0.008,102,3.425,104,3.573,107,2.69,108,2.159,109,2.986,117,3.603,119,4.436,126,4.619,138,3.265,139,2.986,140,4.032,144,3.166,147,1.476,164,2.69,165,2.249,168,2.69,169,2.69,173,1.477,194,3.627,196,2.36,210,2.829,373,2.345,379,2.749,382,4.533,383,4.108,384,3.166,386,3.166,405,2.249,576,3.603,584,4.9,589,5.503,614,2.829,616,1.923,647,0.887,799,3.769,807,2.176,835,1.786,870,2.986,901,0.87,905,2.986,906,2.986,934,1.185,1164,1.997,1176,3.375,1190,3.375,1208,3.627,1223,3.166,1414,2.829,2087,2.986,2095,2.249,2211,3.627,2337,3.166,2507,3.627,2964,4.436,2965,3.943,2966,6.65,2967,3.943,2968,3.166,2969,4.365,2970,4.365,2971,6.117,2972,4.365,2973,4.365,2974,4.365,2975,4.365,2976,4.365,2977,4.365,2978,4.365,2979,4.365,2980,4.365,2981,4.365,2982,4.365,2983,4.365,2984,4.365,2985,4.365,2986,4.365,2987,4.365,2988,4.365,2989,5.559,2990,4.365,2991,4.365,2992,4.365,2993,4.365,2994,4.365,2995,4.365,2996,4.365,2997,4.365,2998,3.943,2999,4.365,3000,5.559,3001,4.365,3002,4.365,3003,4.365,3004,4.365,3005,4.365,3006,4.365]],["title/injectables/GeocoderService.html",[196,1.52,2968,2.597]],["body/injectables/GeocoderService.html",[0,0.006,3,0.174,4,0.19,5,0.087,8,0.174,9,0.64,13,0.726,15,3.223,17,3.426,20,0.534,23,0.659,25,1.242,26,0.013,27,0.637,28,0.4,29,0.837,30,0.647,43,0.998,44,0.882,45,1.152,57,0.859,71,0.583,78,3.215,79,0.25,81,0.375,84,0.216,85,2.475,87,0.829,89,0.918,99,0.006,100,0.009,101,0.006,102,4.195,104,3.362,106,1.126,107,3.438,108,1.79,109,4.281,110,4.438,111,4.628,112,4.046,113,4.438,116,3.268,117,3.879,119,4.68,121,3.799,122,3.007,123,3.268,124,3.268,125,4.438,126,4.973,128,5.039,129,3.007,130,3.361,131,3.799,132,1.594,133,2.624,134,3.268,135,3.007,136,1.864,137,2.624,138,3.999,139,3.817,140,4.68,142,3.268,143,3.268,144,4.046,145,3.007,146,2.475,147,1.56,148,3.268,149,2.798,150,1.72,151,3.268,152,3.268,153,3.268,154,3.799,156,3.268,164,2.229,165,1.864,168,2.229,169,2.229,173,1.412,194,3.007,196,2.086,198,2.345,210,2.345,373,1.944,379,1.79,382,3.879,383,3.515,384,2.624,386,3.563,395,4.438,405,2.531,576,3.616,584,4.516,589,4.99,614,3.185,616,2.164,647,0.89,799,3.855,807,2.422,835,1.792,870,3.361,901,0.721,905,2.475,906,2.475,934,1.334,958,2.376,1176,2.798,1190,2.798,1208,3.007,1223,2.624,1315,3.618,1316,3.618,1317,3.618,1318,3.618,1320,3.618,1321,3.618,1414,2.345,2087,2.475,2095,1.864,2211,4.083,2337,2.624,2507,3.007,2964,4.046,2965,3.268,2966,4.913,2967,3.268,2968,3.563,2969,5.579,2970,4.913,2971,6.601,2972,4.913,2973,3.618,2974,4.913,2975,3.618,2976,3.618,2977,3.618,2978,3.618,2979,3.618,2980,3.618,2981,3.618,2982,3.618,2983,3.618,2984,3.618,2985,3.618,2986,3.618,2987,3.618,2988,4.913,2989,5.579,2990,4.913,2991,4.913,2992,4.913,2993,3.618,2994,3.618,2995,3.618,2996,3.618,2997,3.618,2998,3.268,2999,3.618,3000,4.913,3001,3.618,3002,3.618,3003,3.618,3004,3.618,3005,3.618,3006,3.618,3007,5.635,3008,5.635,3009,4.15,3010,4.15,3011,4.15,3012,4.15,3013,4.15]],["title/components/HeaderComponent.html",[313,0.128,531,0.879]],["body/components/HeaderComponent.html",[0,0.006,3,0.174,4,0.189,5,0.118,8,0.174,9,0.638,11,1.085,13,0.638,20,0.531,21,2.786,22,4.409,23,0.644,25,0.876,26,0.013,27,0.584,28,0.365,29,0.611,30,0.876,33,1.243,43,0.953,44,0.881,52,0.946,56,1.286,57,0.778,64,0.942,65,0.812,71,0.587,77,3.351,78,1.935,79,0.222,81,0.373,83,2.022,84,0.159,89,0.854,99,0.006,100,0.009,101,0.006,106,0.826,168,2.22,187,1.935,209,0.752,220,0.923,235,1.277,246,0.854,269,0.884,278,4.866,280,4.964,281,4.898,282,4.898,295,0.946,313,0.2,333,2.613,360,2.158,362,3.351,380,0.854,407,0.942,416,1.029,423,1.692,466,0.914,467,1.012,468,0.978,469,1.012,472,1.85,473,0.854,474,1.431,476,1.123,478,1.123,481,2.125,493,0.946,494,1.422,495,0.693,496,1.735,497,1.046,498,1.046,499,0.914,500,1.046,501,0.884,502,1.046,503,0.884,504,1.046,505,0.914,506,1.046,507,0.914,508,1.046,509,0.914,510,1.046,511,0.914,512,1.046,513,0.914,514,0.978,515,1.046,516,0.884,517,1.046,518,0.884,519,1.046,520,0.914,521,1.046,522,1.046,523,0.884,524,1.046,525,0.914,526,1.616,527,0.914,528,0.854,529,0.946,530,1.422,531,1.581,532,1.046,533,0.914,534,1.046,535,0.914,536,1.046,537,0.854,538,1.046,539,0.914,540,1.046,541,0.914,542,1.012,543,1.046,544,0.884,545,0.946,546,1.046,547,0.884,548,1.046,549,0.884,550,1.046,551,0.914,552,1.046,553,0.914,554,1.046,555,0.914,556,1.046,557,0.884,558,1.046,559,0.914,560,0.978,561,0.914,562,0.884,563,1.046,564,0.826,565,0.884,566,1.046,567,0.884,568,1.046,569,0.884,570,1.046,571,0.884,572,1.046,573,0.884,574,1.012,575,1.046,681,2.749,684,3.553,692,2.464,806,2.786,807,2.293,872,1.713,943,2.613,1180,2.22,1183,2.022,1234,4.071,1259,2.613,2132,4.898,2224,4.898,2264,2.786,2338,2.786,3014,3.602,3015,5.618,3016,5.618,3017,5.973,3018,4.424,3019,4.424,3020,4.898,3021,3.788,3022,6.85,3023,6.85,3024,5.618,3025,5.618,3026,5.618,3027,5.618,3028,5.618,3029,6.383,3030,6.383,3031,6.85,3032,5.618,3033,6.85,3034,6.383,3035,7.165,3036,6.383,3037,5.618,3038,5.618,3039,4.131,3040,4.131,3041,4.131,3042,4.131,3043,4.131,3044,5.618,3045,4.131,3046,4.131,3047,4.131,3048,4.898,3049,3.602,3050,3.602,3051,3.602,3052,4.131,3053,4.131,3054,4.131,3055,4.131,3056,4.131,3057,4.131,3058,4.131,3059,5.618,3060,4.131,3061,4.131,3062,4.131,3063,4.131,3064,4.131,3065,4.131,3066,4.131]],["title/interfaces/ISpaEnvResponse.html",[901,0.714,3067,3.234]],["body/interfaces/ISpaEnvResponse.html",[0,0.007,3,0.238,4,0.152,5,0.07,8,0.14,9,0.547,11,0.93,16,3.048,17,1.998,26,0.014,28,0.352,30,0.751,34,1.492,36,1.784,43,0.462,45,1.24,51,2.24,55,2.896,59,1.23,65,0.9,71,0.61,75,1.982,78,1.556,79,0.262,80,1.433,81,0.3,82,0.687,84,0.218,85,1.982,87,1.377,89,0.645,99,0.005,100,0.007,101,0.005,102,2.589,104,2.915,106,0.664,107,1.785,108,1.433,109,1.982,117,2.724,119,3.935,129,3.492,130,1.982,132,2.39,136,1.492,138,2.905,139,1.982,140,3.048,146,3.712,147,1.506,149,2.24,154,4.195,162,2.303,164,1.785,165,1.492,173,0.619,184,2.101,187,1.556,191,1.998,193,2.407,195,2.407,204,1.495,209,0.645,211,6.08,213,2.078,215,1.7,217,1.186,218,1.548,220,0.996,235,0.499,247,2.896,269,1.331,272,2.875,273,2.101,276,1.877,278,2.101,287,2.24,290,4.9,291,4.945,295,1.667,296,5.599,297,2.407,313,0.195,337,1.701,351,2.407,352,1.877,360,2.797,396,1.982,415,3.492,416,1.114,422,2.875,423,0.76,448,1.626,472,1.396,474,0.557,476,0.664,478,0.664,481,1.495,483,2.24,491,1.785,492,1.626,511,1.377,621,4.11,632,3.516,640,1.325,647,0.959,667,2.165,673,1.495,683,2.896,700,1.433,701,1.922,702,2.1,713,1.564,718,1.105,721,1.424,722,2.468,734,1.66,735,1.556,739,1.186,740,1.186,758,1.276,760,1.72,761,1.276,766,1.325,771,1.186,774,1.72,776,1.186,799,3.549,800,2.407,802,3.25,807,1.495,835,1.35,888,3.492,901,0.577,915,2.24,934,0.787,1115,2.24,1164,1.325,1170,2.24,1176,2.24,1178,3.048,1183,3.045,1190,2.24,1197,2.24,1198,2.875,1209,2.616,1223,2.101,1249,3.383,1250,1.982,1251,3.796,1255,2.616,1258,3.796,1259,2.101,1260,2.616,1261,2.407,1262,2.616,1264,2.616,1265,3.796,1266,2.616,1268,2.616,1333,1.701,1346,4.508,1513,3.796,2139,2.875,2163,2.896,2264,3.25,2327,2.896,2331,3.796,2337,2.101,2368,1.877,2370,2.616,2371,2.896,2372,3.796,2373,3.25,2396,3.25,2403,2.896,2447,2.896,2455,2.896,2466,2.616,2468,4.202,2477,4.202,2528,4.202,2529,3.492,2578,2.896,2636,2.896,2651,2.616,2721,3.935,2806,3.796,2825,3.796,2898,2.24,3021,3.25,3067,4.467,3068,2.896,3069,2.616,3070,2.896,3071,6.89,3072,6.89,3073,4.819,3074,6.606,3075,6.222,3076,6.222,3077,6.222,3078,6.222,3079,6.222,3080,6.222,3081,6.222,3082,3.322,3083,3.322,3084,3.322,3085,3.322,3086,2.616,3087,3.322,3088,3.322,3089,3.322,3090,3.322,3091,3.322,3092,3.322,3093,3.322,3094,4.819,3095,4.819,3096,4.202,3097,6.222,3098,6.222,3099,4.819,3100,3.796,3101,4.819,3102,4.819,3103,6.606,3104,4.508,3105,4.819,3106,4.819,3107,4.202,3108,4.202,3109,3.796,3110,4.202,3111,4.819,3112,4.819,3113,4.819,3114,6.008,3115,4.819,3116,4.819,3117,4.819,3118,4.819,3119,4.819,3120,4.819,3121,4.819,3122,4.819,3123,4.819,3124,4.819,3125,4.819,3126,4.819,3127,4.819,3128,4.819,3129,4.819,3130,4.202,3131,3.322,3132,3.322,3133,3.322,3134,2.896,3135,3.322,3136,2.896,3137,3.322,3138,3.322,3139,3.322,3140,3.322,3141,4.819,3142,2.896,3143,3.322,3144,3.322,3145,3.322,3146,3.322,3147,3.322,3148,4.819,3149,3.322,3150,2.896,3151,2.896,3152,3.322,3153,3.322,3154,3.322,3155,3.322,3156,3.322,3157,3.322,3158,3.322,3159,3.322,3160,3.322,3161,3.322,3162,3.322,3163,3.322,3164,3.322,3165,3.322,3166,2.896,3167,3.322,3168,3.322,3169,2.896,3170,3.322,3171,3.322,3172,3.322,3173,3.322,3174,3.322,3175,3.322,3176,3.322,3177,3.322,3178,4.819,3179,3.322,3180,3.322,3181,3.322,3182,3.322,3183,3.322,3184,3.322,3185,3.322,3186,2.616,3187,3.322,3188,3.322,3189,3.322,3190,3.322,3191,3.322,3192,3.322,3193,3.322,3194,3.322,3195,3.322,3196,3.322,3197,3.322,3198,3.322,3199,3.322,3200,4.819,3201,4.819,3202,3.322,3203,3.322,3204,3.322,3205,3.322,3206,3.322,3207,4.819,3208,3.322]],["title/classes/MaskModel.html",[0,0.006,3209,2.975]],["body/classes/MaskModel.html",[0,0.008,2,2.175,3,0.22,4,0.24,5,0.11,8,0.22,9,0.746,10,2.302,13,0.746,20,0.922,23,0.671,25,1.023,26,0.013,27,0.536,28,0.404,29,0.714,30,1.171,33,1.453,43,0.997,44,1.068,45,1.182,50,1.641,57,0.746,65,0.758,71,0.61,79,0.229,81,0.474,84,0.288,87,1.312,89,0.702,99,0.008,100,0.01,101,0.008,173,1.337,220,1.17,300,2.567,326,1.374,364,3.318,396,3.129,407,0.88,416,1.128,647,0.73,661,1.831,668,2.184,670,1.807,671,1.685,672,1.685,673,1.627,674,1.807,705,1.968,713,1.779,721,1.503,855,3.711,934,1.555,958,1.685,959,1.873,961,1.573,975,3.508,977,3.358,1083,2.567,1250,3.129,1271,4.428,2169,2.819,2274,4.132,2611,4.574,2726,4.574,2931,3.318,2933,4.428,3209,4.758,3210,4.574,3211,4.051,3212,6.25,3213,5.172,3214,6.567,3215,5.246,3216,4.574,3217,5.246,3218,5.172,3219,5.246,3220,5.172,3221,5.246,3222,5.246,3223,5.246,3224,5.246,3225,5.246,3226,5.246,3227,5.246,3228,4.574,3229,4.132,3230,5.246]],["title/components/NameComponent.html",[246,0.849,313,0.128]],["body/components/NameComponent.html",[0,0.005,3,0.146,4,0.159,5,0.104,8,0.146,9,0.566,10,1.869,11,0.962,13,0.566,20,0.641,23,0.671,25,1.149,26,0.013,27,0.65,28,0.4,29,0.828,30,1.123,33,1.103,34,2.238,37,1.336,43,1.026,44,1.055,45,0.897,50,1.455,52,0.797,56,1.141,57,0.837,64,0.835,65,1.115,71,0.575,79,0.203,81,0.314,82,0.72,84,0.134,89,0.779,99,0.005,100,0.008,101,0.005,106,0.695,114,2.238,173,0.649,209,0.667,213,2.149,220,1.066,232,3.611,235,1.263,239,1.657,246,1.315,269,0.744,295,0.797,313,0.182,319,2.311,326,0.911,362,2.973,380,0.72,385,1.988,400,2.849,407,0.976,416,1.051,423,1.141,466,0.77,467,0.852,468,0.824,469,0.852,473,0.72,474,1.417,476,0.996,478,0.996,493,0.797,494,1.262,495,0.583,496,1.61,497,0.881,498,0.881,499,0.77,500,0.881,501,0.744,502,0.881,503,0.744,504,0.881,505,0.77,506,0.881,507,0.77,508,0.881,509,0.77,510,0.881,511,0.77,512,0.881,513,0.77,514,0.824,515,0.881,516,0.744,517,0.881,518,0.744,519,0.881,520,0.77,521,0.881,522,0.881,523,0.744,524,0.881,525,0.77,526,1.474,527,0.77,528,0.72,529,0.797,530,1.262,531,0.744,532,0.881,533,0.77,534,0.881,535,0.77,536,0.881,537,0.72,538,0.881,539,0.77,540,0.881,541,0.77,542,0.852,543,0.881,544,0.744,545,0.797,546,0.881,547,0.744,548,0.881,549,0.744,550,0.881,551,0.77,552,0.881,553,0.77,554,0.881,555,0.77,556,0.881,557,0.744,558,0.881,559,0.77,560,0.824,561,0.77,562,0.744,563,0.881,564,0.695,565,0.744,566,0.881,567,0.744,568,0.881,569,0.744,570,0.881,571,0.744,572,0.881,573,0.744,574,0.852,575,0.881,647,0.693,650,2.066,661,1.505,668,1.657,670,1.198,671,1.117,672,1.117,673,1.079,674,1.198,705,1.494,713,1.707,718,1.936,721,1.333,734,2.005,739,2.078,740,2.078,742,2.236,743,2.236,745,2.236,758,1.336,760,2.499,761,1.336,765,2.978,766,1.388,771,1.779,774,1.779,776,1.779,833,2.334,835,0.975,872,2.066,934,1.18,942,3.611,958,1.117,959,1.242,960,1.117,961,1.043,970,3.292,971,2.982,972,2.982,973,2.677,974,2.511,976,2.727,977,2.727,978,1.869,979,3.292,984,2.066,992,1.966,994,1.966,998,2.439,1000,2.238,1004,1.869,1006,1.966,1008,1.966,1081,2.334,1082,1.703,1083,1.703,1084,1.63,1085,1.117,1086,1.782,1087,1.703,1180,2.677,1233,3.611,2095,1.563,2433,4.345,2585,3.36,2883,3.151,2896,3.925,2897,3.925,2930,3.925,2931,4.02,3231,3.034,3232,3.925,3233,4.345,3234,4.345,3235,4.983,3236,5.822,3237,6.357,3238,5.822,3239,4.983,3240,3.479,3241,3.479,3242,4.983,3243,3.479,3244,4.983,3245,3.479,3246,4.983,3247,3.479,3248,3.479,3249,3.479,3250,3.479,3251,3.479,3252,3.479,3253,3.479,3254,3.479,3255,3.479,3256,3.479,3257,3.479,3258,3.479,3259,3.479,3260,3.479,3261,3.479,3262,5.822,3263,2.521,3264,4.983,3265,2.521,3266,3.479,3267,3.479,3268,3.479,3269,3.479,3270,3.479,3271,4.983,3272,4.02,3273,4.983,3274,4.983,3275,4.983]],["title/components/PageFrameworkComponent.html",[313,0.128,533,0.909]],["body/components/PageFrameworkComponent.html",[0,0.007,3,0.181,4,0.196,5,0.121,8,0.181,11,1.114,13,0.655,23,0.471,26,0.013,27,0.531,28,0.212,33,1.277,43,1.01,44,0.552,52,0.984,56,1.321,57,0.488,64,1.354,65,0.621,79,0.15,81,0.388,84,0.221,99,0.007,100,0.009,101,0.007,106,0.859,147,0.859,162,2.577,209,0.772,215,1.729,235,1.28,246,0.889,269,0.919,295,0.984,306,4.18,313,0.204,352,3.934,354,2.391,380,0.889,407,0.967,416,0.866,423,1.594,466,0.951,467,1.595,468,1.017,469,1.052,472,1.887,473,0.889,474,1.434,476,1.153,478,1.153,481,2.16,493,0.984,494,1.461,495,0.72,496,1.763,497,1.088,498,1.088,499,0.951,500,1.088,501,0.919,502,1.088,503,0.919,504,1.088,505,0.951,506,1.088,507,0.951,508,1.088,509,0.951,510,1.088,511,0.951,512,1.088,513,0.951,514,1.017,515,1.088,516,0.919,517,1.088,518,0.919,519,1.088,520,0.951,521,1.088,522,1.088,523,0.919,524,1.088,525,0.951,526,1.649,527,0.951,528,0.889,529,0.984,530,1.461,531,0.919,532,1.088,533,1.541,534,1.088,535,0.951,536,1.088,537,0.889,538,1.088,539,0.951,540,1.088,541,0.951,542,1.052,543,1.088,544,0.919,545,0.984,546,1.088,547,0.919,548,1.088,549,0.919,550,1.088,551,0.951,552,1.088,553,0.951,554,1.088,555,0.951,556,1.088,557,0.919,558,1.088,559,0.951,560,1.017,561,0.951,562,0.919,563,1.088,564,0.859,565,0.919,566,1.088,567,0.919,568,1.088,569,0.919,570,1.088,571,0.919,572,1.088,573,0.919,574,1.052,575,1.088,729,5.03,825,1.79,826,1.79,876,4.18,1009,1.48,1010,1.987,1011,1.48,1012,1.987,1013,1.987,1014,1.987,1015,1.48,1016,1.48,1017,1.987,1018,1.987,1019,1.48,1020,1.48,1021,1.48,1022,1.48,1023,1.48,1024,1.987,1025,1.918,1026,1.48,1027,1.987,1028,1.987,1029,1.48,1030,1.987,1031,1.48,1032,1.48,1033,1.48,1034,1.48,1035,2.398,1036,1.48,1037,1.48,1038,1.48,1039,1.48,1040,1.48,1041,1.48,1042,1.48,1043,1.48,1044,1.48,1045,1.48,1046,1.48,1047,1.48,1048,1.48,1049,1.48,1050,1.48,1051,1.48,1052,1.987,1053,1.48,1054,1.48,1055,1.48,1056,1.48,1057,1.48,1058,1.48,1059,1.48,1060,1.48,1061,1.48,1062,1.48,1063,1.48,1064,1.48,1065,1.48,1066,1.987,1067,1.48,1068,1.48,1069,1.48,1070,1.48,1071,1.48,1072,1.203,1073,1.48,1074,1.48,1075,1.48,1076,1.48,1077,1.48,1078,1.48,1079,1.48,1080,1.48,1235,4.543,1252,4.18,1261,4.18,2138,3.648,2879,5.719,2883,3.648,2884,5.483,2892,4.18,3018,4.543,3108,5.03,3276,5.129,3277,5.129,3278,3.746,3279,5.03,3280,5.03,3281,5.769,3282,5.769,3283,5.769,3284,5.03,3285,4.18,3286,6.961,3287,5.03,3288,5.03,3289,5.03,3290,5.769,3291,5.769,3292,4.543,3293,4.297,3294,4.297,3295,3.746]],["title/interfaces/PageListInterface.html",[893,2.975,901,0.714]],["body/interfaces/PageListInterface.html",[0,0.011,3,0.195,4,0.212,5,0.097,8,0.302,9,0.69,15,2.086,17,2.806,20,0.597,22,4.037,23,0.379,26,0.014,28,0.3,30,1.245,44,0.597,45,1.218,57,0.527,64,1.204,65,0.878,71,0.59,74,3.914,78,3.58,79,0.236,81,0.419,83,2.272,84,0.233,87,1.435,89,1.057,94,2.416,99,0.007,100,0.009,101,0.007,106,0.928,108,2.003,162,2.248,173,1.339,196,2.248,197,3.841,199,3.131,201,3.623,202,2.624,209,0.621,213,2.619,214,3.623,220,1.142,221,3.657,222,3.657,223,3.657,224,3.657,239,1.544,272,4.037,273,2.937,309,2.806,326,1.216,360,1.784,362,2.77,385,1.852,409,2.77,448,2.972,580,2.77,591,6.019,616,1.784,681,2.272,807,1.884,835,1.701,849,3.365,850,4.783,851,3.657,852,4.049,853,3.657,854,3.365,855,2.624,856,4.049,857,4.049,858,4.049,859,4.049,860,4.049,861,3.657,862,3.657,863,4.049,864,4.049,870,3.623,871,3.841,872,2.518,873,3.365,875,4.049,876,4.401,878,3.657,879,3.131,880,4.904,883,4.049,885,3.841,886,4.049,887,4.049,888,3.365,890,4.049,891,4.049,893,4.904,899,5.296,900,3.657,901,1.176,902,5.296,903,5.296,904,5.901,905,2.77,906,2.77,907,5.296,908,5.296,909,5.901,910,6.496,911,5.901,912,5.296,913,4.783,914,4.783,915,4.095,916,5.296,917,4.049,918,4.049,919,4.049,920,4.049,921,3.657,922,4.049,923,4.049,924,4.049,925,4.049,926,3.111,927,4.049,928,4.049,929,4.049,930,4.049,931,4.049,932,4.049,1164,1.852,1172,4.049,3296,4.643]],["title/components/PageSectionComponent.html",[313,0.128,535,0.909]],["body/components/PageSectionComponent.html",[0,0.007,3,0.192,4,0.209,5,0.126,8,0.192,11,1.16,13,0.682,20,0.863,23,0.548,26,0.013,27,0.548,28,0.226,33,1.33,43,0.635,44,0.587,52,1.046,56,1.375,57,0.519,64,1.319,65,0.66,79,0.159,81,0.412,84,0.175,99,0.007,100,0.009,101,0.007,147,0.913,209,0.804,235,1.284,246,0.945,269,0.977,295,1.046,313,0.21,380,0.945,407,1.007,416,0.902,423,1.375,466,1.011,467,1.118,468,1.081,469,1.118,472,1.945,473,0.945,474,1.438,476,1.201,478,1.201,481,2.213,493,1.046,494,1.521,495,0.766,496,1.806,497,1.157,498,1.157,499,1.011,500,1.157,501,0.977,502,1.157,503,0.977,504,1.157,505,1.011,506,1.157,507,1.011,508,1.157,509,1.011,510,1.157,511,1.011,512,1.157,513,1.011,514,1.081,515,1.157,516,0.977,517,1.157,518,0.977,519,1.157,520,1.011,521,1.157,522,1.157,523,0.977,524,1.157,525,1.011,526,1.7,527,1.011,528,0.945,529,1.046,530,1.521,531,0.977,532,1.157,533,1.011,534,1.157,535,1.579,536,1.157,537,0.945,538,1.157,539,1.011,540,1.157,541,1.011,542,1.118,543,1.157,544,0.977,545,1.046,546,1.157,547,0.977,548,1.157,549,0.977,550,1.157,551,1.011,552,1.157,553,1.011,554,1.157,555,1.011,556,1.157,557,0.977,558,1.157,559,1.011,560,1.081,561,1.011,562,0.977,563,1.157,564,0.913,565,0.977,566,1.157,567,0.977,568,1.157,569,0.977,570,1.157,571,0.977,572,1.157,573,0.977,574,1.118,575,1.157,825,1.864,826,1.864,1009,1.573,1010,2.069,1011,1.573,1012,2.069,1013,2.069,1014,2.069,1015,1.573,1016,1.573,1017,2.069,1018,2.069,1019,1.573,1020,1.573,1021,1.573,1022,1.573,1023,1.573,1024,2.069,1025,1.998,1026,1.573,1027,2.069,1028,2.069,1029,1.573,1030,2.069,1031,1.573,1032,1.573,1033,1.573,1034,1.573,1035,2.457,1036,1.573,1037,1.573,1038,1.573,1039,1.573,1040,1.573,1041,1.573,1042,1.573,1043,1.573,1044,1.573,1045,1.573,1046,1.573,1047,1.573,1048,1.573,1049,1.573,1050,1.573,1051,1.573,1052,2.069,1053,1.573,1054,1.573,1055,1.573,1056,1.573,1057,1.573,1058,1.573,1059,1.573,1060,1.573,1061,1.573,1062,1.573,1063,1.573,1064,1.573,1065,1.573,1066,2.069,1067,1.573,1068,1.573,1069,1.573,1070,1.573,1071,1.573,1072,1.279,1073,1.573,1074,1.573,1075,1.573,1076,1.573,1077,1.573,1078,1.573,1079,1.573,1080,1.573,2879,5.288,3021,4.051,3276,5.618,3287,6.219,3288,5.239,3289,5.239,3292,4.732,3295,3.983,3297,5.618,3298,3.983,3299,6.008,3300,6.008,3301,6.008,3302,6.008,3303,4.567]],["title/components/PasswordComponent.html",[313,0.128,537,0.849]],["body/components/PasswordComponent.html",[0,0.004,3,0.112,4,0.122,5,0.086,8,0.112,9,0.465,11,0.962,13,0.465,20,0.64,23,0.662,25,0.87,26,0.013,27,0.54,28,0.393,29,0.607,30,0.99,33,1.103,34,1.2,36,2.23,43,1.076,44,1.001,45,1.084,47,2.201,48,2.104,50,1.455,52,0.612,53,2.315,56,0.938,57,0.684,59,0.989,64,0.687,65,0.807,71,0.597,79,0.194,81,0.241,82,0.552,84,0.191,87,1.116,89,0.548,90,1.689,94,1.994,99,0.004,100,0.006,101,0.004,106,0.818,132,1.026,147,0.818,169,1.435,173,0.764,181,1.251,191,1.107,193,4.047,204,1.271,209,0.548,215,1.493,218,1.315,220,1.091,235,1.237,239,0.888,246,0.552,269,0.572,276,1.51,295,0.612,300,3.425,309,2.065,310,2.104,313,0.213,319,1.806,320,1.936,326,1.577,336,1.2,337,1.368,351,2.968,354,1.698,360,1.573,373,1.251,379,1.766,380,0.552,405,1.2,407,0.835,409,1.593,416,1.121,423,0.938,439,4.399,466,0.591,467,0.654,468,0.632,469,0.654,472,1.443,473,0.552,474,1.392,476,0.818,478,0.818,481,1.733,493,0.612,494,1.037,495,0.687,496,1.414,497,0.676,498,0.676,499,0.591,500,0.676,501,0.572,502,0.676,503,0.572,504,0.676,505,0.591,506,0.676,507,0.591,508,0.676,509,0.591,510,0.676,511,0.591,512,0.676,513,0.591,514,0.632,515,0.676,516,0.572,517,0.676,518,0.572,519,0.676,520,0.591,521,0.676,522,0.676,523,0.572,524,0.676,525,0.591,526,1.261,527,0.591,528,0.552,529,0.612,530,1.037,531,0.572,532,0.676,533,0.591,534,0.676,535,0.591,536,0.676,537,1.314,538,0.676,539,0.591,540,0.676,541,0.591,542,0.654,543,0.676,544,0.572,545,0.612,546,0.676,547,0.572,548,0.676,549,0.572,550,0.676,551,0.591,552,0.676,553,0.591,554,0.676,555,0.591,556,0.676,557,0.572,558,0.676,559,0.591,560,0.632,561,0.591,562,0.572,563,0.676,564,0.534,565,0.572,566,0.676,567,0.572,568,0.676,569,0.572,570,0.676,571,0.572,572,0.676,573,0.572,574,0.654,575,0.676,647,0.57,661,1.322,668,2.003,670,0.92,671,0.858,672,1.315,673,0.829,674,0.92,676,1.435,692,1.593,700,1.766,701,1.987,702,1.844,705,1.228,713,1.505,718,2.113,721,1.279,731,3.226,807,2.362,825,1.271,826,1.271,835,0.748,872,1.107,901,0.712,934,0.97,945,3.15,958,0.858,959,0.954,960,0.858,961,0.801,974,2.148,976,2.334,984,1.698,986,1.689,1000,2.237,1009,0.92,1010,1.411,1011,0.92,1012,1.411,1013,1.411,1014,1.411,1015,0.92,1016,0.92,1017,1.411,1018,1.411,1019,0.92,1020,0.92,1021,0.92,1022,0.92,1023,0.92,1024,1.411,1025,1.362,1026,0.92,1027,1.411,1028,1.411,1029,0.92,1030,1.411,1031,0.92,1032,0.92,1033,0.92,1034,0.92,1035,1.924,1036,0.92,1037,0.92,1038,0.92,1039,0.92,1040,0.92,1041,0.92,1042,0.92,1043,0.92,1044,0.92,1045,0.92,1046,0.92,1047,0.92,1048,0.92,1049,0.92,1050,0.92,1051,0.92,1052,1.411,1053,0.92,1054,0.92,1055,0.92,1056,0.92,1057,0.92,1058,0.92,1059,0.92,1060,0.92,1061,0.92,1062,0.92,1063,0.92,1064,0.92,1065,0.92,1066,1.411,1067,0.92,1068,0.92,1069,0.92,1070,0.92,1071,0.92,1072,0.748,1073,0.92,1074,0.92,1075,0.92,1076,0.92,1077,0.92,1078,0.92,1079,0.92,1080,0.92,1084,1.251,1132,2.438,1133,1.84,1136,4.84,1198,1.593,1275,1.689,1368,3.532,1983,3.532,2005,1.593,2061,1.435,2062,1.593,2063,1.801,2064,1.51,2068,1.801,2108,3.571,2110,2.329,2114,3.226,2141,3.609,2152,3.571,2165,1.51,2201,2.968,2368,1.51,2373,3.766,2408,2.104,2461,3.766,2465,1.593,2475,2.968,2529,2.968,2650,1.936,2794,3.226,2898,3.359,2904,3.609,2949,1.936,2950,1.936,2962,3.571,3100,4.399,3109,3.226,3186,2.104,3272,3.809,3304,2.104,3305,5.541,3306,3.571,3307,3.571,3308,3.226,3309,3.571,3310,3.571,3311,3.226,3312,3.571,3313,5.252,3314,3.571,3315,3.571,3316,4.343,3317,4.343,3318,4.343,3319,4.343,3320,5.769,3321,4.343,3322,4.343,3323,4.096,3324,4.343,3325,4.343,3326,4.343,3327,4.343,3328,4.343,3329,4.343,3330,4.096,3331,4.364,3332,2.671,3333,2.671,3334,2.671,3335,2.671,3336,3.226,3337,2.671,3338,2.671,3339,3.571,3340,2.671,3341,2.671,3342,2.762,3343,2.671,3344,2.671,3345,2.671,3346,2.671,3347,2.671,3348,2.671,3349,2.671,3350,2.671,3351,3.571,3352,3.571,3353,3.571,3354,3.571,3355,3.571,3356,2.671,3357,2.671,3358,3.571,3359,2.671,3360,2.671,3361,2.671,3362,3.226,3363,3.571,3364,2.671,3365,2.671,3366,2.671,3367,2.671,3368,2.671,3369,2.671,3370,2.671,3371,3.571,3372,3.923,3373,2.329,3374,1.801,3375,2.329,3376,2.329,3377,2.329,3378,2.329,3379,2.329,3380,4.343,3381,4.343,3382,3.571,3383,4.047,3384,2.329,3385,2.329,3386,2.329,3387,2.329,3388,2.329,3389,2.329,3390,2.104,3391,3.571,3392,2.329,3393,3.571,3394,2.329,3395,3.571,3396,2.329,3397,2.329,3398,3.571,3399,3.571,3400,2.329,3401,2.329,3402,2.329,3403,1.801,3404,2.329,3405,2.329,3406,2.329,3407,2.104,3408,2.329,3409,2.329,3410,6.355,3411,5.585,3412,4.096,3413,2.671,3414,4.096,3415,4.096,3416,5.585,3417,4.096,3418,4.096,3419,4.096,3420,4.096,3421,2.671]],["title/interfaces/PasswordErrorMsg.html",[901,0.714,3331,2.975]],["body/interfaces/PasswordErrorMsg.html",[0,0.006,3,0.16,4,0.174,5,0.08,8,0.16,9,0.604,11,1.027,20,0.491,26,0.014,28,0.303,29,0.784,30,0.954,33,0.845,34,2.39,36,2.579,43,0.852,44,0.684,45,1.103,47,2.858,48,3.007,50,1.728,53,2.157,59,1.413,71,0.605,79,0.231,81,0.345,82,0.789,84,0.235,87,1.063,89,0.712,90,2.414,94,1.899,99,0.006,100,0.008,101,0.006,106,0.763,132,1.466,147,1.063,169,2.051,173,0.992,181,1.788,191,1.582,204,1.184,209,0.511,215,1.595,218,1.226,220,0.958,235,0.573,239,1.269,276,2.157,300,2.604,309,2.206,310,3.007,313,0.226,319,1.144,320,2.766,326,1.393,336,1.715,337,1.955,351,2.766,354,1.582,360,1.466,373,1.788,379,1.646,405,1.715,409,3.174,416,1.189,472,1.542,474,0.64,476,0.763,478,0.763,481,1.184,495,0.64,537,1.1,647,0.74,661,1.26,668,1.269,672,1.226,676,2.051,700,1.646,701,2.122,702,1.97,713,1.568,718,2.203,721,1.517,731,3.007,807,2.161,825,1.65,826,1.65,835,1.069,872,1.582,901,0.925,934,0.904,945,3.873,960,1.226,961,1.144,974,1.646,976,1.788,984,1.582,986,2.414,1000,1.715,1009,1.315,1010,1.833,1011,1.315,1012,1.833,1013,1.833,1014,1.833,1015,1.315,1016,1.315,1017,1.833,1018,1.833,1019,1.315,1020,1.315,1021,1.315,1022,1.315,1023,1.315,1024,1.833,1025,1.769,1026,1.315,1027,1.833,1028,1.833,1029,1.315,1030,1.833,1031,1.315,1032,1.315,1033,1.315,1034,1.315,1035,2.282,1036,1.315,1037,1.315,1038,1.315,1039,1.315,1040,1.315,1041,1.315,1042,1.315,1043,1.315,1044,1.315,1045,1.315,1046,1.315,1047,1.315,1048,1.315,1049,1.315,1050,1.315,1051,1.315,1052,1.833,1053,1.315,1054,1.315,1055,1.315,1056,1.315,1057,1.315,1058,1.315,1059,1.315,1060,1.315,1061,1.315,1062,1.315,1063,1.315,1064,1.315,1065,1.315,1066,1.833,1067,1.315,1068,1.315,1069,1.315,1070,1.315,1071,1.315,1072,1.069,1073,1.315,1074,1.315,1075,1.315,1076,1.315,1077,1.315,1078,1.315,1079,1.315,1080,1.315,1084,1.788,1132,2.997,1133,1.715,1136,4.863,1164,1.523,1198,2.277,1275,2.414,1983,3.365,2005,3.174,2061,2.051,2062,2.277,2063,2.574,2064,2.157,2068,2.574,2114,4.19,2141,3.855,2165,3.007,2201,2.766,2368,3.007,2373,3.587,2408,3.007,2465,2.277,2475,2.766,2529,2.766,2650,2.766,2794,3.007,2898,2.574,2904,2.766,2949,2.766,2950,2.766,3100,4.19,3109,3.007,3186,3.007,3272,3.873,3304,3.007,3305,5.776,3306,3.329,3307,3.329,3308,3.007,3309,3.329,3310,3.329,3311,3.007,3312,3.329,3313,4.639,3314,3.329,3315,3.329,3316,3.329,3317,3.329,3318,3.329,3319,3.329,3320,3.329,3321,3.329,3322,3.329,3324,3.329,3325,3.329,3326,3.329,3327,3.329,3328,3.329,3329,3.329,3331,4.8,3336,3.007,3339,3.329,3342,2.574,3351,3.329,3352,3.329,3353,3.329,3354,3.329,3355,3.329,3358,3.329,3362,3.007,3363,3.329,3371,4.639,3372,4.823,3373,3.329,3374,2.574,3375,3.329,3376,3.329,3377,3.329,3378,3.329,3379,3.329,3380,5.34,3381,6.29,3382,4.639,3383,5.364,3384,3.329,3385,3.329,3386,3.329,3387,3.329,3388,3.329,3389,3.329,3390,3.007,3391,4.639,3392,3.329,3393,4.639,3394,3.329,3395,4.639,3396,3.329,3397,3.329,3398,4.639,3399,4.639,3400,3.329,3401,3.329,3402,3.329,3403,2.574,3404,3.329,3405,3.329,3406,3.329,3407,3.007,3408,3.329,3409,3.329]],["title/classes/Person.html",[0,0.006,2353,2.449]],["body/classes/Person.html",[0,0.01,2,1.679,3,0.17,4,0.185,5,0.085,8,0.17,9,0.629,13,0.629,23,0.657,25,0.864,26,0.014,27,0.647,28,0.379,29,0.603,30,0.864,43,0.99,44,0.812,57,0.901,65,0.801,71,0.601,79,0.22,84,0.155,87,0.809,89,0.952,99,0.006,100,0.009,101,0.006,104,2.596,106,0.809,114,2.49,160,3.306,162,2.052,173,1.178,191,2.298,220,1.187,238,3.505,326,1.451,335,3.65,354,2.298,407,0.679,448,1.982,529,1.269,578,2.839,579,3.737,580,3.306,590,4.581,611,3.532,616,1.556,640,3.099,641,2.978,647,0.564,650,1.679,661,1.685,664,2.978,665,3.132,666,2.596,667,3.379,668,1.843,670,1.395,671,1.301,672,1.301,673,1.256,674,1.395,835,1.134,854,2.935,872,2.298,878,4.365,879,3.737,885,3.505,926,2.839,934,1.312,958,1.301,959,1.446,1177,3.132,1212,3.823,1333,3.48,1368,3.505,1991,3.769,2010,4.053,2015,4.053,2054,3.19,2066,4.365,2083,4.021,2172,5.924,2174,5.324,2265,2.074,2337,2.561,2338,3.737,2353,4.733,2373,2.731,2665,5.509,2892,4.016,2893,5.351,2899,4.976,2900,4.976,2901,4.976,2943,5.351,2945,5.786,2947,4.365,3422,3.532,3423,6.318,3424,7.115,3425,6.794,3426,6.794,3427,6.318,3428,6.318,3429,4.05,3430,4.05,3431,5.542,3432,4.05,3433,4.05,3434,4.05,3435,4.05,3436,4.05,3437,5.542,3438,5.542,3439,6.794,3440,4.05,3441,4.05,3442,4.05,3443,7.115,3444,6.318,3445,4.05,3446,4.05,3447,5.542,3448,4.05,3449,4.05,3450,5.542,3451,5.542,3452,4.05,3453,4.05,3454,3.505,3455,5.542,3456,4.833,3457,3.532,3458,4.05,3459,4.05,3460,4.05,3461,5.542,3462,6.794,3463,6.794,3464,6.794,3465,4.05,3466,4.05,3467,4.05,3468,4.05,3469,4.05,3470,7.115,3471,4.05,3472,4.05,3473,4.05,3474,5.542,3475,5.542,3476,4.05,3477,5.542,3478,4.05,3479,3.532,3480,4.05,3481,4.05,3482,4.05,3483,4.05,3484,4.05,3485,4.05]],["title/components/PhnComponent.html",[313,0.128,539,0.909]],["body/components/PhnComponent.html",[0,0.005,3,0.126,4,0.137,5,0.094,8,0.126,9,0.508,10,1.718,11,0.864,13,0.508,20,0.576,23,0.667,25,1.127,26,0.014,27,0.617,28,0.401,29,0.812,30,1.212,33,0.991,37,1.154,43,1.053,44,1.064,45,1.197,50,1.225,52,0.688,56,1.025,57,0.803,63,3.244,64,0.751,65,1.08,71,0.588,79,0.206,81,0.271,82,0.621,84,0.115,87,1.376,89,0.793,94,1.073,99,0.01,100,0.007,101,0.005,114,2.011,147,0.601,162,1.657,173,1.106,177,3.019,181,2.97,187,1.408,209,0.599,220,0.917,235,1.249,246,0.621,269,0.643,294,2.177,295,0.688,309,1.246,313,0.167,319,2.24,326,2.002,333,4.204,380,0.621,400,2.619,407,0.897,416,1.086,423,1.025,466,0.665,467,0.736,468,0.712,469,0.736,473,0.621,474,1.404,476,0.895,478,0.895,493,0.688,494,1.134,495,0.504,496,1.501,497,0.761,498,0.761,499,0.665,500,0.761,501,0.643,502,0.761,503,0.643,504,0.761,505,0.665,506,0.761,507,0.665,508,0.761,509,0.665,510,0.761,511,0.665,512,0.761,513,0.665,514,0.712,515,0.761,516,0.643,517,0.761,518,0.643,519,0.761,520,0.665,521,0.761,522,0.761,523,0.643,524,0.761,525,0.665,526,1.355,527,0.665,528,0.621,529,0.688,530,1.134,531,0.643,532,0.761,533,0.665,534,0.761,535,0.665,536,0.761,537,0.621,538,0.761,539,1.312,540,0.761,541,0.665,542,0.736,543,0.761,544,0.643,545,0.688,546,0.761,547,0.643,548,0.761,549,0.643,550,0.761,551,0.665,552,0.761,553,0.665,554,0.761,555,0.665,556,0.761,557,0.643,558,0.761,559,0.665,560,0.712,561,0.665,562,0.643,563,0.761,564,0.601,565,0.643,566,0.761,567,0.643,568,0.761,569,0.643,570,0.761,571,0.643,572,0.761,573,0.643,574,0.736,575,0.761,633,1.9,640,2.365,641,2.405,647,0.623,650,1.246,661,1.404,668,1.489,670,1.035,671,0.965,672,0.965,673,0.932,674,1.035,705,1.342,713,1.631,718,2.108,721,1.225,734,1.843,739,1.91,740,1.91,742,2.055,743,2.055,745,2.278,758,1.154,760,2.373,761,1.154,765,2.778,766,1.199,771,1.598,774,1.598,776,1.598,807,1.66,833,2.097,835,0.842,926,2.293,934,1.06,958,0.965,959,1.073,960,0.965,961,0.901,970,3.103,971,2.741,972,3.037,973,2.405,974,2.308,975,2.619,976,2.507,977,2.507,978,1.615,979,3.103,984,1.856,992,1.698,994,1.698,998,2.191,1000,2.011,1004,1.615,1006,1.698,1008,1.698,1081,2.097,1082,1.471,1083,1.471,1084,1.408,1085,0.965,1086,1.539,1087,1.471,1133,2.663,1206,2.671,1333,1.539,1346,3.244,2095,2.403,2169,2.875,2369,1.9,2487,4.99,2512,3.244,2524,2.177,2903,2.026,3114,3.904,3211,3.024,3263,4.296,3265,3.244,3403,2.026,3486,2.62,3487,6.729,3488,4.477,3489,4.477,3490,5.351,3491,5.797,3492,5.351,3493,4.477,3494,3.005,3495,3.005,3496,3.005,3497,4.477,3498,3.005,3499,3.005,3500,3.005,3501,4.477,3502,5.17,3503,3.005,3504,4.477,3505,3.005,3506,3.005,3507,3.005,3508,3.005,3509,3.005,3510,3.005,3511,3.005,3512,3.005,3513,5.351,3514,3.005,3515,3.005,3516,3.005,3517,3.005,3518,3.005,3519,3.005,3520,3.005,3521,2.177,3522,6.887,3523,2.177,3524,2.026,3525,6.341,3526,3.005,3527,3.005,3528,3.526,3529,3.005,3530,3.005,3531,3.005,3532,2.367,3533,3.005,3534,2.177,3535,2.62,3536,3.005,3537,3.005,3538,3.904,3539,3.005,3540,3.005,3541,3.005,3542,3.005,3543,2.62,3544,3.005,3545,2.62,3546,4.477,3547,3.005,3548,5.929,3549,3.005,3550,3.005,3551,3.005,3552,4.477,3553,3.005,3554,3.904,3555,3.526]],["title/components/PhoneNumberComponent.html",[313,0.128,541,0.909]],["body/components/PhoneNumberComponent.html",[0,0.005,3,0.145,4,0.158,5,0.104,8,0.145,9,0.563,10,1.594,11,0.958,13,0.563,20,0.746,23,0.671,25,1.089,26,0.013,27,0.612,28,0.403,29,0.76,30,1.089,33,1.098,36,2.148,43,1.058,44,1.04,45,1.045,47,2.666,50,1.716,52,0.792,56,1.136,57,0.793,64,0.832,65,1.064,71,0.591,79,0.221,81,0.312,82,1.026,84,0.191,87,1.341,99,0.005,100,0.008,101,0.005,106,0.691,162,1.837,204,1.967,209,0.664,215,1.488,217,1.772,218,2.036,220,1.135,235,1.262,246,0.715,269,0.74,295,0.792,300,1.693,313,0.181,319,2.247,326,2.084,380,0.715,407,0.973,416,1.049,423,1.136,466,0.766,467,0.847,468,0.819,469,0.847,473,0.715,474,1.417,476,0.992,478,0.992,493,0.792,494,1.257,495,0.58,496,1.605,497,0.876,498,0.876,499,0.766,500,0.876,501,0.74,502,0.876,503,0.74,504,0.876,505,0.766,506,0.876,507,0.766,508,0.876,509,0.766,510,0.876,511,0.766,512,0.876,513,0.766,514,0.819,515,0.876,516,0.74,517,0.876,518,0.74,519,0.876,520,0.766,521,0.876,522,0.876,523,0.74,524,0.876,525,0.766,526,1.47,527,0.766,528,0.715,529,0.792,530,1.257,531,0.74,532,0.876,533,0.766,534,0.876,535,0.766,536,0.876,537,0.715,538,0.876,539,0.766,540,0.876,541,1.629,542,1.835,543,0.876,544,0.74,545,0.792,546,0.876,547,0.74,548,0.876,549,0.74,550,0.876,551,0.766,552,0.876,553,0.766,554,0.876,555,0.766,556,0.876,557,0.74,558,0.876,559,0.766,560,0.819,561,0.766,562,0.74,563,0.876,564,0.691,565,0.74,566,0.876,567,0.74,568,0.876,569,0.74,570,0.876,571,0.74,572,0.876,573,0.74,574,0.847,575,0.876,587,4.205,647,0.481,661,0.819,668,2.232,670,1.192,671,1.111,672,1.111,673,1.073,674,1.192,700,2.14,701,2.315,702,2.485,705,1.488,713,1.501,721,1.136,722,2.972,734,1.999,735,2.325,739,2.072,740,2.072,742,1.906,743,1.906,745,1.906,758,1.906,760,2.263,761,1.906,766,1.98,771,1.235,774,1.772,776,1.235,855,1.955,872,2.057,934,1.175,958,2.407,959,1.235,961,1.037,975,2.429,977,2.325,984,2.057,1271,2.333,2169,3.118,2265,2.542,2933,2.333,3209,5.579,3211,3.28,3212,4.327,3213,3.909,3216,3.017,3218,2.725,3220,2.725,3521,2.507,3523,2.507,3556,6.941,3557,6.27,3558,3.017,3559,4.963,3560,4.963,3561,5.804,3562,4.963,3563,5.06,3564,5.804,3565,5.804,3566,4.963,3567,3.46,3568,4.327,3569,3.46,3570,4.963,3571,3.46,3572,3.46,3573,3.46,3574,3.46,3575,3.46,3576,3.46,3577,3.46,3578,3.46,3579,3.46,3580,3.46,3581,4.963,3582,3.46,3583,3.46,3584,3.46,3585,3.46,3586,3.46,3587,4.963,3588,4.963,3589,4.963,3590,3.46,3591,3.46,3592,3.46,3593,3.46,3594,3.46,3595,3.46,3596,4.963,3597,3.46,3598,3.46,3599,3.46,3600,3.46,3601,3.017]],["title/components/PostalCodeComponent.html",[313,0.128,544,0.879]],["body/components/PostalCodeComponent.html",[0,0.005,3,0.126,4,0.137,5,0.094,8,0.126,9,0.507,10,1.714,11,0.862,13,0.507,20,0.574,23,0.666,25,1.126,26,0.013,27,0.617,28,0.4,29,0.811,30,1.072,33,0.988,37,1.149,43,1.039,44,1.062,45,0.803,50,1.222,52,0.685,56,1.022,57,0.802,64,0.748,65,1.079,71,0.585,79,0.206,81,0.27,82,0.619,84,0.115,87,1.067,88,2.018,89,0.597,99,0.005,100,0.007,101,0.005,114,2.005,147,0.892,173,0.558,181,3.109,209,0.597,220,0.915,235,1.249,246,0.619,269,0.64,295,0.685,300,1.464,309,1.24,313,0.167,319,2.061,326,1.549,380,0.619,400,2.612,407,0.895,416,1.061,423,1.022,466,0.662,467,0.733,468,0.708,469,0.733,473,0.619,474,1.403,476,0.892,478,0.892,493,0.685,494,1.13,495,0.502,496,1.498,497,0.758,498,0.758,499,0.662,500,0.758,501,0.64,502,0.758,503,0.64,504,0.758,505,0.662,506,0.758,507,0.662,508,0.758,509,0.662,510,0.758,511,0.662,512,0.758,513,0.662,514,0.708,515,0.758,516,0.64,517,0.758,518,0.64,519,0.758,520,0.662,521,0.758,522,0.758,523,0.64,524,0.758,525,0.662,526,1.351,527,0.662,528,0.619,529,0.685,530,1.13,531,0.64,532,0.758,533,0.662,534,0.758,535,0.662,536,0.758,537,0.619,538,0.758,539,0.662,540,0.758,541,0.662,542,0.733,543,0.758,544,1.266,545,1.654,546,0.758,547,0.64,548,0.758,549,0.64,550,0.758,551,0.662,552,0.758,553,0.662,554,0.758,555,0.662,556,0.758,557,0.64,558,0.758,559,0.662,560,0.708,561,0.662,562,0.64,563,0.758,564,0.598,565,0.64,566,0.758,567,0.64,568,0.758,569,0.64,570,0.758,571,0.64,572,0.758,573,0.64,574,0.733,575,0.758,633,1.892,640,1.194,647,0.621,650,1.24,661,1.401,668,1.484,670,1.031,671,0.961,672,0.961,673,0.928,674,1.031,705,1.338,713,1.628,718,2.105,721,1.222,734,1.838,739,1.905,740,1.905,742,2.05,743,2.05,745,2.273,758,1.149,760,2.37,761,1.149,765,2.965,766,1.194,771,1.593,774,1.593,776,1.593,825,1.384,826,1.384,833,2.091,835,1.25,855,2.522,934,1.057,958,0.961,959,1.068,960,0.961,961,0.897,970,3.097,971,2.734,972,3.03,973,2.398,974,2.302,975,3.097,976,2.5,977,2.5,978,1.608,979,3.097,984,1.85,992,1.691,994,1.691,998,2.184,1000,2.005,1004,1.608,1006,1.691,1008,1.691,1009,1.031,1010,1.537,1011,1.031,1012,1.537,1013,1.537,1014,1.537,1015,1.031,1016,1.031,1017,1.537,1018,1.537,1019,1.031,1020,1.031,1021,1.031,1022,1.031,1023,1.031,1024,1.537,1025,1.484,1026,1.031,1027,1.537,1028,1.537,1029,1.031,1030,1.537,1031,1.031,1032,1.031,1033,1.031,1034,1.031,1035,2.038,1036,1.031,1037,1.031,1038,1.031,1039,1.031,1040,1.031,1041,1.031,1042,1.031,1043,1.031,1044,1.031,1045,1.031,1046,1.031,1047,1.031,1048,1.031,1049,1.031,1050,1.031,1051,1.031,1052,1.537,1053,1.031,1054,1.031,1055,1.031,1056,1.031,1057,1.031,1058,1.031,1059,1.031,1060,1.031,1061,1.031,1062,1.031,1063,1.031,1064,1.031,1065,1.031,1066,1.537,1067,1.031,1068,1.031,1069,1.031,1070,1.031,1071,1.031,1072,0.838,1073,1.031,1074,1.031,1075,1.031,1076,1.031,1077,1.031,1078,1.031,1079,1.031,1080,1.031,1081,2.091,1082,1.464,1083,1.464,1084,1.402,1085,0.961,1086,1.533,1087,1.464,1183,2.895,1333,1.533,1395,2.662,2169,2.398,2174,3.234,2369,1.892,2479,3.009,2903,2.018,2927,4.809,2931,3.742,2933,3.009,3211,3.016,3213,3.515,3218,3.515,3220,3.515,3228,2.609,3263,3.867,3265,2.168,3272,1.892,3342,3.009,3403,2.018,3521,2.168,3523,2.168,3524,2.018,3528,2.357,3532,2.357,3563,4.654,3602,6.433,3603,6.433,3604,2.609,3605,4.463,3606,4.463,3607,5.337,3608,4.654,3609,4.463,3610,2.992,3611,2.992,3612,2.992,3613,4.463,3614,2.992,3615,2.992,3616,4.463,3617,4.463,3618,2.992,3619,4.463,3620,2.992,3621,2.992,3622,2.992,3623,2.992,3624,2.992,3625,2.992,3626,2.992,3627,2.992,3628,2.992,3629,2.992,3630,2.992,3631,2.992,3632,5.917,3633,5.917,3634,4.463,3635,2.992,3636,2.992,3637,2.992,3638,7.068,3639,2.992,3640,5.917,3641,2.992]],["title/components/ProvinceComponent.html",[313,0.128,547,0.879]],["body/components/ProvinceComponent.html",[0,0.005,3,0.13,4,0.141,5,0.096,8,0.13,9,0.52,10,1.748,11,0.883,13,0.52,20,0.588,23,0.667,25,1.112,26,0.013,27,0.614,28,0.401,29,0.806,30,1.136,33,1.013,37,1.189,43,1.046,44,1.057,45,1.083,50,1.47,52,0.709,56,1.048,57,0.789,64,0.767,65,1.087,71,0.583,79,0.209,81,0.279,82,0.64,84,0.231,87,0.914,89,0.414,99,0.005,100,0.007,101,0.005,106,1.55,114,2.056,147,0.619,173,0.853,209,0.612,220,0.928,235,1.252,246,0.64,269,0.662,295,0.709,313,0.17,319,2.084,378,2.73,380,0.64,382,4.385,383,3.733,400,2.665,407,0.913,416,1.113,423,1.048,466,0.685,467,0.758,468,0.733,469,0.758,473,0.64,474,1.407,476,0.914,478,0.914,493,0.709,494,1.159,495,0.519,496,1.523,497,0.784,498,0.784,499,0.685,500,0.784,501,0.662,502,0.784,503,0.662,504,0.784,505,0.685,506,0.784,507,0.685,508,0.784,509,0.685,510,0.784,511,0.685,512,0.784,513,0.685,514,0.733,515,0.784,516,0.662,517,0.784,518,0.662,519,0.784,520,0.685,521,0.784,522,0.784,523,0.662,524,0.784,525,0.685,526,1.379,527,0.685,528,0.64,529,0.709,530,1.159,531,0.662,532,0.784,533,0.685,534,0.784,535,0.685,536,0.784,537,0.64,538,0.784,539,0.685,540,0.784,541,0.685,542,0.758,543,0.784,544,0.662,545,0.709,546,0.784,547,1.287,548,0.784,549,0.662,550,0.784,551,0.685,552,0.784,553,0.685,554,0.784,555,0.685,556,0.784,557,0.662,558,0.784,559,0.685,560,0.733,561,0.685,562,0.662,563,0.784,564,0.619,565,0.662,566,0.784,567,0.662,568,0.784,569,0.662,570,0.784,571,0.662,572,0.784,573,0.662,574,0.758,575,0.784,632,2.586,643,5.056,647,0.758,650,1.897,661,1.424,668,1.522,670,1.066,671,0.994,672,0.994,673,0.96,674,1.066,705,1.372,713,1.646,718,2,721,1.246,734,1.875,739,1.944,740,1.944,742,2.091,743,2.091,745,2.091,758,1.189,760,2.399,761,1.189,765,2.818,766,1.235,771,1.634,774,1.634,776,1.634,825,1.42,826,1.42,833,2.144,835,0.867,901,0.538,934,1.084,958,0.994,959,1.105,960,0.994,961,0.928,970,3.141,971,2.789,972,2.789,973,2.459,974,2.348,975,2.665,976,2.551,977,2.551,978,1.663,979,3.141,984,1.897,992,1.749,994,1.749,998,2.24,1000,2.056,1004,1.663,1006,1.749,1008,1.749,1009,1.066,1010,1.576,1011,1.066,1012,1.576,1013,1.576,1014,1.576,1015,1.066,1016,1.066,1017,1.576,1018,1.576,1019,1.066,1020,1.066,1021,1.066,1022,1.066,1023,1.066,1024,1.576,1025,1.522,1026,1.066,1027,1.576,1028,1.576,1029,1.066,1030,1.576,1031,1.066,1032,1.066,1033,1.066,1034,1.066,1035,2.072,1036,1.066,1037,1.066,1038,1.066,1039,1.066,1040,1.066,1041,1.066,1042,1.066,1043,1.066,1044,1.066,1045,1.066,1046,1.066,1047,1.576,1048,1.066,1049,1.066,1050,1.066,1051,1.066,1052,1.576,1053,1.066,1054,1.066,1055,1.066,1056,1.066,1057,1.066,1058,1.066,1059,1.066,1060,1.066,1061,1.066,1062,1.066,1063,1.066,1064,1.066,1065,1.066,1066,1.576,1067,1.066,1068,1.066,1069,1.066,1070,1.066,1071,1.066,1072,0.867,1073,1.066,1074,1.066,1075,1.066,1076,1.066,1077,1.066,1078,1.066,1079,1.066,1080,1.066,1081,2.144,1082,1.515,1083,1.515,1084,1.45,1085,0.994,1086,1.585,1087,1.515,1387,3.945,1395,2.73,1414,4.385,1486,2.243,1490,2.087,1595,2.243,2396,3.086,2587,2.438,3642,2.438,3643,3.99,3644,3.99,3645,5.038,3646,4.576,3647,3.095,3648,3.095,3649,3.99,3650,3.095,3651,3.095,3652,3.095,3653,4.288,3654,3.095,3655,3.095,3656,3.095,3657,4.576,3658,3.095,3659,3.095,3660,3.095,3661,3.095,3662,3.095,3663,3.095,3664,3.095,3665,3.095,3666,3.095,3667,3.095,3668,3.095,3669,3.095,3670,2.699,3671,2.438,3672,6.765,3673,2.699,3674,2.438,3675,2.699,3676,2.699,3677,2.699,3678,2.699,3679,2.699,3680,2.699,3681,2.699,3682,2.699,3683,2.699,3684,2.699,3685,2.699,3686,2.699,3687,2.699,3688,2.699,3689,2.699,3690,2.699,3691,2.699,3692,2.699,3693,2.699,3694,2.699,3695,2.699,3696,2.699,3697,2.699]],["title/interfaces/ProvinceList.html",[901,0.714,3645,2.975]],["body/interfaces/ProvinceList.html",[0,0.007,3,0.178,4,0.193,5,0.089,8,0.178,9,0.648,10,1.359,20,0.544,26,0.014,28,0.32,29,0.621,30,1.078,44,1.019,45,1.028,50,0.969,65,1,71,0.599,79,0.241,81,0.382,82,0.875,84,0.266,87,0.846,89,0.566,99,0.007,100,0.009,101,0.007,106,1.649,147,0.846,173,1.065,209,0.566,220,0.612,235,0.635,313,0.179,319,1.268,378,2.524,382,4.665,383,3.543,400,2.071,416,1.19,474,0.709,476,0.846,478,0.846,547,0.905,632,3.227,643,5.69,647,0.899,650,2.367,661,1.352,713,1.71,718,2.149,721,1.479,734,1.967,739,1.511,740,1.511,742,1.625,743,1.625,745,1.625,760,2.47,765,3.027,771,2.038,774,2.038,776,2.038,825,1.771,826,1.771,833,2.675,835,1.185,901,0.735,934,1.002,960,1.359,961,1.268,970,2.794,971,2.167,972,2.167,974,1.825,975,2.071,976,1.982,977,1.982,979,2.794,984,1.754,998,2.071,1000,1.901,1009,1.458,1010,1.967,1011,1.458,1012,1.967,1013,1.967,1014,1.967,1015,1.458,1016,1.458,1017,1.967,1018,1.967,1019,1.458,1020,1.458,1021,1.458,1022,1.458,1023,1.458,1024,1.967,1025,1.899,1026,1.458,1027,1.967,1028,1.967,1029,1.458,1030,1.967,1031,1.458,1032,1.458,1033,1.458,1034,1.458,1035,2.383,1036,1.458,1037,1.458,1038,1.458,1039,1.458,1040,1.458,1041,1.458,1042,1.458,1043,1.458,1044,1.458,1045,1.458,1046,1.458,1047,1.967,1048,1.458,1049,1.458,1050,1.458,1051,1.458,1052,1.967,1053,1.458,1054,1.458,1055,1.458,1056,1.458,1057,1.458,1058,1.458,1059,1.458,1060,1.458,1061,1.458,1062,1.458,1063,1.458,1064,1.458,1065,1.458,1066,1.967,1067,1.458,1068,1.458,1069,1.458,1070,1.458,1071,1.458,1072,1.185,1073,1.458,1074,1.458,1075,1.458,1076,1.458,1077,1.458,1078,1.458,1079,1.458,1080,1.458,1081,2.675,1082,2.071,1083,2.071,1084,1.982,1085,1.359,1086,2.167,1087,2.071,1164,1.688,1387,3.066,1395,2.524,1414,4.606,1486,3.066,1490,2.853,1595,3.066,2396,2.853,2587,3.333,3642,3.333,3643,3.69,3644,3.69,3645,5.234,3649,3.69,3653,4.497,3670,3.69,3671,3.333,3672,7.197,3673,3.69,3674,3.333,3675,3.69,3676,3.69,3677,3.69,3678,3.69,3679,3.69,3680,3.69,3681,3.69,3682,3.69,3683,3.69,3684,3.69,3685,3.69,3686,3.69,3687,3.69,3688,3.69,3689,3.69,3690,3.69,3691,3.69,3692,3.69,3693,3.69,3694,3.69,3695,3.69,3696,3.69,3697,3.69]],["title/components/RadioComponent.html",[313,0.128,549,0.879]],["body/components/RadioComponent.html",[0,0.005,3,0.146,4,0.158,5,0.104,8,0.146,9,0.564,10,1.866,11,0.959,13,0.564,20,0.639,23,0.663,25,1.09,26,0.013,27,0.612,28,0.398,29,0.801,30,1.169,33,1.1,34,1.557,37,1.331,43,1.043,44,1.055,45,1.142,50,1.138,51,3.351,52,0.794,56,1.138,57,0.763,64,0.833,65,1.084,71,0.557,79,0.202,81,0.313,82,0.717,84,0.191,99,0.005,100,0.008,101,0.005,106,0.693,162,2.151,209,0.665,215,1.49,220,1.114,235,1.262,239,1.652,246,0.717,269,0.742,274,2.545,295,0.794,302,4.998,313,0.182,319,2.353,326,1.301,380,0.717,407,0.974,416,1.126,423,1.138,466,0.767,467,0.849,468,0.821,469,0.849,473,0.717,474,1.417,476,0.993,478,0.993,493,0.794,494,1.258,495,0.581,496,1.607,497,0.878,498,0.878,499,0.767,500,0.878,501,0.742,502,0.878,503,0.742,504,0.878,505,0.767,506,0.878,507,0.767,508,0.878,509,0.767,510,0.878,511,0.767,512,0.878,513,0.767,514,0.821,515,0.878,516,0.742,517,0.878,518,0.742,519,0.878,520,0.767,521,0.878,522,0.878,523,0.742,524,0.878,525,0.767,526,1.471,527,0.767,528,0.717,529,0.794,530,1.258,531,0.742,532,0.878,533,0.767,534,0.878,535,0.767,536,0.878,537,0.717,538,0.878,539,0.767,540,0.878,541,0.767,542,0.849,543,0.878,544,0.742,545,0.794,546,0.878,547,0.742,548,0.878,549,1.496,550,0.878,551,0.767,552,0.878,553,0.767,554,0.878,555,0.767,556,0.878,557,0.742,558,0.878,559,0.767,560,0.821,561,0.767,562,0.742,563,0.878,564,0.693,565,0.742,566,0.878,567,0.742,568,0.878,569,0.742,570,0.878,571,0.742,572,0.878,573,0.742,574,0.849,575,0.878,627,3.143,647,0.482,661,1.502,668,1.652,670,1.194,671,1.113,672,1.113,673,1.075,674,1.194,678,4.333,682,4.333,705,1.49,713,1.502,721,1.138,734,2.001,736,5.533,739,2.074,740,2.074,742,1.909,743,1.909,745,1.909,746,5.291,747,3.674,758,1.909,760,2.265,761,1.909,766,1.982,771,1.237,774,1.774,776,1.237,934,1.177,937,5.066,945,3.143,958,1.113,959,1.237,960,1.113,961,1.039,970,3.288,973,2.67,978,1.862,979,3.288,998,2.432,1000,2.232,1004,1.862,1081,2.328,1082,1.696,1087,1.696,1236,3.143,1291,3.351,1333,3.688,1368,3.143,2174,3.601,2368,1.959,2392,3.601,2716,3.914,2806,4.998,3018,3.914,3086,3.914,3555,3.914,3601,4.333,3698,3.022,3699,6.786,3700,4.97,3701,4.333,3702,4.97,3703,6.346,3704,4.333,3705,4.97,3706,6.991,3707,4.97,3708,6.991,3709,4.97,3710,4.97,3711,6.718,3712,4.97,3713,4.97,3714,4.97,3715,6.346,3716,4.97,3717,4.97,3718,4.97,3719,4.97,3720,4.97,3721,5.066,3722,4.97,3723,3.466,3724,3.466,3725,4.333,3726,3.466,3727,3.466,3728,3.466,3729,3.466,3730,3.466,3731,3.466,3732,3.466,3733,3.466,3734,3.466,3735,3.466,3736,4.97,3737,3.466,3738,3.466,3739,3.466,3740,3.466,3741,3.466,3742,3.466,3743,3.466,3744,4.97]],["title/guards/RouteGuardService.html",[201,2.449,214,2.449]],["body/guards/RouteGuardService.html",[0,0.007,3,0.178,4,0.194,5,0.089,8,0.178,11,1.338,13,0.787,15,2.908,16,4.382,20,0.546,21,2.864,22,4.445,23,0.565,25,1.08,26,0.014,27,0.565,28,0.343,29,0.753,30,1.161,45,1.247,57,0.735,59,2.119,64,1.249,71,0.474,74,3.549,79,0.241,81,0.384,83,2.079,84,0.163,87,1.144,89,0.997,99,0.007,100,0.009,101,0.007,106,0.849,108,3.384,136,2.571,138,3.705,165,1.908,173,1.067,187,2.682,196,2.119,197,5.015,199,2.864,202,4.211,203,3.62,204,1.776,209,0.568,214,4.731,215,1.716,216,4.991,217,2.66,218,2.225,219,6.497,239,2.304,273,4.712,274,2.932,342,6.042,360,2.199,405,2.571,481,1.776,578,2.932,621,4.148,681,2.801,806,2.864,807,2.149,853,4.508,861,4.508,862,4.508,872,1.761,879,3.86,880,3.078,888,4.148,900,3.345,905,2.534,906,2.534,913,5.1,921,5.457,1248,4.508,1249,3.415,1293,4.508,1368,4.095,1473,5.399,2137,3.415,2265,3.316,2461,4.366,2465,3.862,2584,5.84,2754,4.508,3534,3.078,3745,6.307,3746,3.704,3747,5.724,3748,5.724,3749,5.724,3750,5.724,3751,5.724,3752,7.452,3753,7.846,3754,7.846,3755,5.724,3756,5.724,3757,5.724,3758,5.724,3759,4.508,3760,5.724,3761,5.724,3762,5.724,3763,5.724,3764,4.248,3765,5.724,3766,4.248,3767,4.248,3768,4.248,3769,7.616,3770,7.616,3771,4.248,3772,6.475,3773,4.248,3774,4.248,3775,4.248,3776,4.248,3777,5.724,3778,4.248,3779,4.248,3780,4.248,3781,4.248,3782,4.248]],["title/injectables/ServerPayload.html",[196,1.52,803,2.975]],["body/injectables/ServerPayload.html",[0,0.01,3,0.219,4,0.238,5,0.109,8,0.219,9,0.743,23,0.612,26,0.013,28,0.371,42,5.572,71,0.625,79,0.261,81,0.471,84,0.251,89,1.054,99,0.008,100,0.01,101,0.008,107,3.841,112,4.522,117,4.041,138,4.036,146,3.112,164,2.803,165,2.343,173,0.973,196,2.647,198,2.948,220,1.034,779,3.299,780,6.082,781,4.109,787,5.706,788,6.234,790,5.631,791,5.706,792,6.611,794,5.706,795,6.871,796,6.537,798,4.549,799,4.028,800,3.78,801,6.234,802,3.517,803,4.741,804,5.207,805,6.234,806,3.517,807,1.618,808,6.234,809,6.234,810,5.706,811,4.549,812,5.706,813,6.234,3783,5.217,3784,5.217,3785,5.217,3786,5.217]],["title/modules/SharedCoreModule.html",[814,2.321,3787,2.597]],["body/modules/SharedCoreModule.html",[0,0.005,3,0.136,4,0.147,5,0.068,26,0.013,36,1.746,52,1.08,79,0.294,81,0.291,82,0.667,83,1.579,84,0.124,99,0.005,100,0.007,101,0.005,173,0.601,203,2.983,217,1.684,246,1.569,269,1.009,300,1.579,311,2.04,378,1.924,380,1.569,421,1.733,466,1.68,491,2.996,492,2.309,493,0.738,499,1.68,501,1.624,503,1.624,507,1.68,509,1.68,511,1.68,513,1.68,516,1.624,518,1.624,520,1.68,523,1.624,525,1.68,527,1.68,528,1.569,531,1.624,533,1.68,535,1.68,537,1.569,539,1.68,541,1.68,544,1.624,547,1.624,549,1.624,551,1.68,553,1.68,555,1.68,557,1.624,559,1.68,561,1.044,562,1.624,565,1.624,567,1.624,569,1.624,571,1.624,573,1.624,616,1.239,632,1.823,666,1.511,676,1.733,726,2.541,814,1.823,816,1.924,817,3.761,818,4.393,823,3.715,824,2.337,832,2.175,844,4.113,847,4.113,848,2.541,1361,2.541,2133,2.813,2326,2.541,2849,3.418,2890,2.337,3069,2.541,3211,1.823,3277,2.541,3297,2.541,3557,2.541,3603,2.541,3787,5.468,3788,2.813,3789,2.813,3790,2.813,3791,2.813,3792,2.813,3793,3.226,3794,3.226,3795,4.718,3796,5.577,3797,4.718,3798,3.226,3799,3.226,3800,3.226,3801,2.541,3802,3.226,3803,3.226,3804,3.226,3805,4.718,3806,3.226,3807,3.226,3808,3.226,3809,3.226,3810,3.226,3811,3.226,3812,3.226,3813,3.226,3814,3.226,3815,3.226,3816,3.226,3817,3.226,3818,4.718,3819,4.718,3820,3.226,3821,3.226,3822,3.226,3823,4.718,3824,2.813,3825,3.226,3826,3.226,3827,3.226,3828,3.226,3829,3.226,3830,3.226,3831,3.226,3832,3.226,3833,3.226,3834,3.226,3835,3.226,3836,3.226,3837,3.226,3838,3.226,3839,3.226,3840,3.226,3841,3.226,3842,3.226,3843,3.226,3844,3.226,3845,3.226,3846,3.226,3847,3.226,3848,3.226,3849,3.226,3850,3.226,3851,2.541,3852,3.226,3853,3.226,3854,2.541,3855,3.226,3856,4.863,3857,3.226,3858,3.226,3859,3.226,3860,3.226,3861,3.226]],["title/interfaces/SimpleDate.html",[901,0.714,1991,2.449]],["body/interfaces/SimpleDate.html",[3,0.266,4,0.289,5,0.133,8,0.266,9,0.834,26,0.013,28,0.384,84,0.243,99,0.01,100,0.011,101,0.01,106,1.263,162,2.34,326,2.203,901,1.277,1164,2.522,1991,4.384,2010,4.772,2015,4.772,2083,4.521,3862,5.513,3863,5.513,3864,5.513,3865,6.322,3866,6.322,3867,5.513,3868,6.322]],["title/components/SinComponent.html",[313,0.128,551,0.909]],["body/components/SinComponent.html",[0,0.005,3,0.132,4,0.143,5,0.097,8,0.132,9,0.525,10,1.762,11,0.892,13,0.525,20,0.594,23,0.668,25,1.14,26,0.014,27,0.623,28,0.401,29,0.82,30,1.088,33,1.023,37,1.205,43,1.035,44,1.067,45,0.988,50,1.256,52,0.718,56,1.058,57,0.814,63,3.349,64,0.775,65,1.091,71,0.589,79,0.211,81,0.283,82,0.649,84,0.12,87,1.097,89,0.734,94,1.12,99,0.009,100,0.007,101,0.005,114,2.076,147,0.627,162,1.711,173,0.862,177,2.115,181,3.357,187,1.47,209,0.618,220,0.933,235,1.253,246,0.649,269,0.671,294,2.273,295,0.718,309,1.3,313,0.172,319,2.261,326,1.999,333,4.27,380,0.649,400,2.685,407,0.92,416,1.076,423,1.058,466,0.694,467,0.768,468,0.743,469,0.768,473,0.649,474,1.408,476,0.924,478,0.924,493,0.718,494,1.17,495,0.526,496,1.533,497,0.794,498,0.794,499,0.694,500,0.794,501,0.671,502,0.794,503,0.671,504,0.794,505,0.694,506,0.794,507,0.694,508,0.794,509,0.694,510,0.794,511,0.694,512,0.794,513,0.694,514,0.743,515,0.794,516,0.671,517,0.794,518,0.671,519,0.794,520,0.694,521,0.794,522,0.794,523,0.671,524,0.794,525,0.694,526,1.39,527,0.694,528,0.649,529,0.718,530,1.17,531,0.671,532,0.794,533,0.694,534,0.794,535,0.694,536,0.794,537,0.649,538,0.794,539,0.694,540,0.794,541,0.694,542,0.768,543,0.794,544,0.671,545,0.718,546,0.794,547,0.671,548,0.794,549,0.671,550,0.794,551,1.34,552,0.794,553,0.694,554,0.794,555,0.694,556,0.794,557,0.671,558,0.794,559,0.694,560,0.743,561,0.694,562,0.671,563,0.794,564,0.627,565,0.671,566,0.794,567,0.671,568,0.794,569,0.671,570,0.794,571,0.671,572,0.794,573,0.671,574,0.768,575,0.794,633,1.984,640,2.189,647,0.643,650,1.3,661,1.434,668,1.537,670,1.081,671,1.007,672,1.007,673,0.973,674,1.081,705,1.385,713,1.653,718,2.146,721,1.256,734,1.89,739,1.959,740,1.959,742,2.108,743,2.108,745,2.326,758,1.205,760,2.411,761,1.205,765,3.024,766,1.251,771,1.65,774,1.65,776,1.65,807,1.702,833,2.165,835,1.295,926,2.367,934,1.094,958,1.007,959,1.12,960,1.007,961,0.94,970,3.159,971,2.811,972,3.101,973,2.483,974,2.367,975,2.685,976,2.571,977,2.571,978,1.685,979,3.159,984,1.916,992,1.773,994,1.773,998,2.262,1000,2.076,1004,1.685,1006,1.773,1008,1.773,1081,2.165,1082,1.535,1083,1.535,1084,1.47,1085,1.007,1086,1.607,1087,1.535,1133,2.076,1206,2.757,1333,1.607,2095,2.076,2169,2.948,2369,1.984,2479,3.116,2512,3.349,2524,2.273,2903,2.115,3130,4.03,3211,3.101,3263,4.387,3265,3.349,3403,2.115,3502,5.888,3521,2.273,3523,2.273,3524,2.115,3528,3.64,3532,2.471,3534,2.273,3535,2.735,3545,5.279,3554,4.03,3555,3.64,3869,2.735,3870,6.722,3871,4.622,3872,4.622,3873,5.488,3874,5.488,3875,4.622,3876,3.137,3877,4.622,3878,3.137,3879,4.622,3880,3.137,3881,3.137,3882,3.137,3883,3.137,3884,4.622,3885,3.137,3886,3.137,3887,3.137,3888,3.137,3889,3.137,3890,3.137,3891,3.137,3892,3.137,3893,3.137,3894,3.137,3895,3.137,3896,3.137,3897,3.137,3898,3.137,3899,3.137,3900,7.315,3901,6.455,3902,3.137,3903,3.137,3904,3.137,3905,3.137,3906,3.137,3907,3.137]],["title/components/StreetComponent.html",[313,0.128,553,0.909]],["body/components/StreetComponent.html",[0,0.004,3,0.119,4,0.129,5,0.09,8,0.119,9,0.486,10,1.658,11,0.827,13,0.486,20,0.55,23,0.671,25,1.148,26,0.013,27,0.633,28,0.402,29,0.821,30,1.052,33,0.948,34,1.272,37,1.088,43,1.025,44,1.044,45,1.036,50,0.98,51,2.887,52,0.648,56,0.98,57,0.837,59,1.911,63,2.051,64,0.718,65,1.122,71,0.584,74,2.193,79,0.235,81,0.256,82,0.585,84,0.109,89,0.77,99,0.01,100,0.007,101,0.009,104,2.006,107,1.521,114,1.923,130,3.433,132,1.088,138,3.166,147,0.566,165,1.272,166,2.469,168,1.521,181,1.326,183,3.372,209,0.573,220,0.894,235,1.243,246,0.585,269,0.606,295,0.648,300,2.526,313,0.161,319,2.024,336,1.923,373,1.326,380,0.585,388,2.051,395,3.372,400,2.526,401,2.051,407,0.965,410,1.79,411,2.469,415,3.102,416,1.107,423,0.98,466,0.627,467,0.693,468,0.67,469,0.693,472,1.496,473,0.585,474,1.398,476,0.856,478,0.856,481,1.785,491,1.521,492,1.386,493,0.648,494,1.084,495,0.475,496,1.457,497,0.717,498,0.717,499,0.627,500,0.717,501,0.606,502,0.717,503,0.606,504,0.717,505,0.627,506,0.717,507,0.627,508,0.717,509,0.627,510,0.717,511,0.627,512,0.717,513,0.627,514,0.67,515,0.717,516,0.606,517,0.717,518,0.606,519,0.717,520,0.627,521,0.717,522,0.717,523,0.606,524,0.717,525,0.627,526,1.307,527,0.627,528,0.585,529,1.182,530,1.084,531,0.606,532,0.717,533,0.627,534,0.717,535,0.627,536,0.717,537,0.585,538,0.717,539,0.627,540,0.717,541,0.627,542,0.693,543,0.717,544,0.606,545,0.648,546,0.717,547,0.606,548,0.717,549,0.606,550,0.717,551,0.627,552,0.717,553,1.274,554,0.717,555,0.627,556,0.717,557,0.606,558,0.717,559,0.627,560,0.67,561,0.627,562,0.606,563,0.717,564,0.566,565,0.606,566,0.717,567,0.606,568,0.717,569,0.606,570,0.717,571,0.606,572,0.717,573,0.606,574,0.693,575,0.717,576,3.252,589,4.798,616,1.088,637,5.018,641,1.521,647,0.904,650,1.775,661,1.363,668,1.424,670,0.975,671,0.909,672,0.909,673,0.878,674,0.975,705,1.283,713,1.717,718,2.162,721,1.318,734,1.778,739,1.843,740,1.843,742,1.983,743,1.983,745,1.983,758,1.088,760,2.321,761,1.088,765,2.696,766,1.129,771,1.528,774,1.528,776,1.528,799,1.521,807,2.094,825,1.328,826,1.328,833,2.006,835,1.446,871,3.639,934,1.014,958,0.909,959,1.011,960,0.909,961,0.849,970,3.025,971,2.644,972,2.644,973,2.3,974,2.482,975,2.526,976,2.419,977,2.419,978,1.521,979,3.025,984,1.775,992,1.6,994,1.6,998,2.095,1000,1.923,1004,1.521,1006,1.6,1008,1.6,1009,0.975,1010,1.475,1011,0.975,1012,1.475,1013,1.475,1014,1.475,1015,0.975,1016,0.975,1017,1.475,1018,1.475,1019,0.975,1020,0.975,1021,0.975,1022,0.975,1023,0.975,1024,1.475,1025,1.424,1026,0.975,1027,1.475,1028,1.475,1029,0.975,1030,1.475,1031,0.975,1032,0.975,1033,0.975,1034,0.975,1035,1.982,1036,0.975,1037,0.975,1038,0.975,1039,0.975,1040,0.975,1041,0.975,1042,0.975,1043,0.975,1044,0.975,1045,0.975,1046,0.975,1047,0.975,1048,0.975,1049,0.975,1050,0.975,1051,0.975,1052,1.475,1053,0.975,1054,0.975,1055,0.975,1056,0.975,1057,0.975,1058,0.975,1059,0.975,1060,0.975,1061,0.975,1062,0.975,1063,0.975,1064,0.975,1065,0.975,1066,1.475,1067,0.975,1068,0.975,1069,0.975,1070,0.975,1071,0.975,1072,0.793,1073,0.975,1074,0.975,1075,0.975,1076,0.975,1077,0.975,1078,0.975,1079,0.975,1080,0.975,1081,2.006,1082,1.386,1083,1.386,1084,1.326,1085,0.909,1086,1.45,1087,1.386,1197,1.909,1223,1.79,1284,5.12,1395,3.08,2020,2.051,2112,4.066,2121,3.733,2338,2.887,2392,2.051,2435,2.469,2479,1.909,2503,1.909,2586,2.23,2838,3.733,2867,2.23,2941,2.23,2964,1.79,2968,4.5,3020,2.469,3229,2.23,3390,2.23,3908,2.469,3909,4.281,3910,4.281,3911,5.163,3912,6.18,3913,4.281,3914,4.281,3915,5.163,3916,5.163,3917,5.163,3918,4.281,3919,2.831,3920,4.281,3921,2.831,3922,4.281,3923,2.831,3924,2.831,3925,2.831,3926,2.831,3927,4.281,3928,2.831,3929,2.831,3930,2.831,3931,2.831,3932,2.831,3933,4.281,3934,2.831,3935,2.831,3936,4.281,3937,2.831,3938,4.281,3939,5.755,3940,2.831,3941,2.831,3942,2.831,3943,2.831,3944,2.831,3945,2.831,3946,2.831,3947,2.831,3948,2.831,3949,4.281,3950,5.163,3951,6.18,3952,2.831,3953,3.733,3954,2.831,3955,2.831,3956,5.018,3957,2.831,3958,2.831,3959,4.281,3960,2.831,3961,2.831,3962,2.831,3963,2.831,3964,2.831,3965,2.831,3966,2.831,3967,2.831,3968,2.831,3969,2.831,3970,2.831,3971,2.831,3972,2.831,3973,2.831,3974,2.831,3975,2.831,3976,2.831,3977,4.281,3978,2.831,3979,2.831,3980,2.831,3981,2.831,3982,4.281,3983,2.831,3984,2.831]],["title/components/ThumbnailComponent.html",[313,0.128,555,0.909]],["body/components/ThumbnailComponent.html",[0,0.006,3,0.172,4,0.187,5,0.117,8,0.172,9,0.633,11,1.076,13,0.633,20,0.525,23,0.648,25,0.869,26,0.013,27,0.582,28,0.379,29,0.606,30,0.869,33,1.234,37,1.569,43,0.776,44,0.717,45,1.004,52,0.935,56,1.276,57,0.774,64,0.935,65,0.986,71,0.299,79,0.221,80,1.762,81,0.369,84,0.157,99,0.006,100,0.009,101,0.006,147,0.816,173,0.762,209,0.746,220,0.918,235,1.276,246,0.845,269,0.874,295,0.935,313,0.199,326,1.46,370,2.755,380,0.845,407,0.935,416,0.953,423,1.276,466,0.904,467,1,468,0.967,469,1,472,1.839,473,0.845,474,1.43,476,1.114,478,1.114,481,2.115,491,2.195,492,1.999,493,0.935,494,1.412,495,0.685,496,1.727,497,1.035,498,1.035,499,0.904,500,1.035,501,0.874,502,1.035,503,0.874,504,1.035,505,0.904,506,1.035,507,0.904,508,1.035,509,0.904,510,1.035,511,0.904,512,1.035,513,0.904,514,0.967,515,1.035,516,0.874,517,1.035,518,0.874,519,1.035,520,0.904,521,1.035,522,1.035,523,0.874,524,1.035,525,0.904,526,1.607,527,0.904,528,0.845,529,0.935,530,1.412,531,0.874,532,1.035,533,0.904,534,1.035,535,0.904,536,1.035,537,0.845,538,1.035,539,0.904,540,1.035,541,0.904,542,1,543,1.035,544,0.874,545,0.935,546,1.035,547,0.874,548,1.035,549,0.874,550,1.035,551,0.904,552,1.035,553,0.904,554,1.035,555,1.509,556,1.035,557,0.874,558,1.035,559,0.904,560,0.967,561,0.904,562,0.874,563,1.035,564,0.816,565,0.874,566,1.035,567,0.874,568,1.035,569,0.874,570,1.035,571,0.874,572,1.035,573,0.874,574,1,575,1.035,647,0.568,705,1.671,713,1.614,721,1.276,807,1.969,825,1.73,826,1.73,1009,1.407,1010,1.921,1011,1.407,1012,1.921,1013,1.921,1014,1.921,1015,1.407,1016,1.407,1017,1.921,1018,1.921,1019,1.407,1020,1.407,1021,1.407,1022,1.407,1023,1.407,1024,1.921,1025,1.854,1026,1.407,1027,1.921,1028,1.921,1029,1.407,1030,1.921,1031,1.407,1032,1.407,1033,1.407,1034,1.407,1035,2.349,1036,1.407,1037,1.407,1038,1.407,1039,1.407,1040,1.407,1041,1.407,1042,1.407,1043,1.407,1044,1.407,1045,1.407,1046,1.407,1047,1.407,1048,1.407,1049,1.407,1050,1.407,1051,1.407,1052,1.921,1053,1.407,1054,1.407,1055,1.407,1056,1.407,1057,1.407,1058,1.407,1059,1.407,1060,1.407,1061,1.407,1062,1.407,1063,1.407,1064,1.407,1065,1.407,1066,1.921,1067,1.407,1068,1.407,1069,1.407,1070,1.407,1071,1.407,1072,1.144,1073,1.407,1074,1.407,1075,1.407,1076,1.407,1077,1.407,1078,1.407,1079,1.407,1080,1.407,1088,3.41,1395,4.068,2095,1.835,2331,4.999,2343,3.563,2368,3.151,2459,3.563,2482,4.04,2535,4.862,2581,3.563,2716,3.218,2825,4.391,3150,4.862,3151,5.534,3169,5.534,3985,3.563,3986,5.576,3987,5.576,3988,6.347,3989,7.947,3990,6.347,3991,6.347,3992,6.347,3993,6.347,3994,5.576,3995,5.576,3996,4.086,3997,4.086,3998,4.086,3999,4.086,4000,4.086,4001,4.086,4002,4.086,4003,4.086,4004,4.086,4005,6.819,4006,4.086,4007,4.086,4008,5.576,4009,4.086,4010,4.086,4011,4.086,4012,5.576,4013,6.819,4014,4.086,4015,5.576,4016,5.576]],["title/components/ToggleComponent.html",[313,0.128,557,0.879]],["body/components/ToggleComponent.html",[0,0.007,3,0.188,4,0.204,5,0.124,8,0.188,9,0.673,11,1.144,13,0.673,20,0.854,23,0.617,26,0.013,27,0.542,28,0.35,30,0.923,33,1.311,43,0.622,44,0.575,52,1.024,56,1.356,57,0.508,64,0.993,65,0.647,71,0.486,79,0.206,81,0.404,84,0.172,99,0.007,100,0.009,101,0.007,147,0.894,191,2.754,209,0.793,220,0.857,235,1.282,246,0.925,269,0.957,295,1.024,313,0.208,319,1.992,380,0.925,407,1.114,416,0.998,423,1.356,466,0.99,467,1.095,468,1.059,469,1.095,472,1.925,473,0.925,474,1.437,476,1.184,478,1.184,481,2.194,493,1.024,494,1.5,495,0.75,496,1.791,497,1.132,498,1.132,499,0.99,500,1.132,501,0.957,502,1.132,503,0.957,504,1.132,505,0.99,506,1.132,507,0.99,508,1.132,509,0.99,510,1.132,511,0.99,512,1.132,513,0.99,514,1.059,515,1.132,516,0.957,517,1.132,518,0.957,519,1.132,520,0.99,521,1.132,522,1.132,523,0.957,524,1.132,525,0.99,526,1.682,527,0.99,528,0.925,529,1.024,530,1.5,531,0.957,532,1.132,533,0.99,534,1.132,535,0.99,536,1.132,537,0.925,538,1.132,539,0.99,540,1.132,541,0.99,542,1.095,543,1.132,544,0.957,545,1.024,546,1.132,547,0.957,548,1.132,549,0.957,550,1.132,551,0.99,552,1.132,553,0.99,554,1.132,555,0.99,556,1.132,557,1.514,558,1.132,559,0.99,560,1.059,561,0.99,562,0.957,563,1.132,564,0.894,565,0.957,566,1.132,567,0.957,568,1.132,569,0.957,570,1.132,571,0.957,572,1.132,573,0.957,574,1.095,575,1.132,647,0.622,661,1.675,668,1.97,670,1.54,671,1.436,672,1.436,673,1.387,674,1.54,705,1.776,713,1.675,721,1.356,733,4.666,748,5.233,825,1.838,826,1.838,934,1.403,958,1.436,959,1.597,960,1.436,961,1.341,1009,1.54,1010,2.041,1011,1.54,1012,2.041,1013,2.041,1014,2.041,1015,1.54,1016,1.54,1017,2.041,1018,2.041,1019,1.54,1020,1.54,1021,1.54,1022,1.54,1023,1.54,1024,2.041,1025,1.97,1026,1.54,1027,2.041,1028,2.041,1029,1.54,1030,2.041,1031,1.54,1032,1.54,1033,1.54,1034,1.54,1035,2.437,1036,1.54,1037,1.54,1038,1.54,1039,1.54,1040,1.54,1041,1.54,1042,1.54,1043,1.54,1044,1.54,1045,1.54,1046,1.54,1047,1.54,1048,1.54,1049,1.54,1050,1.54,1051,1.54,1052,2.041,1053,1.54,1054,1.54,1055,1.54,1056,1.54,1057,1.54,1058,1.54,1059,1.54,1060,1.54,1061,1.54,1062,1.54,1063,1.54,1064,1.54,1065,1.54,1066,2.041,1067,1.54,1068,1.54,1069,1.54,1070,1.54,1071,1.54,1072,1.253,1073,1.54,1074,1.54,1075,1.54,1076,1.54,1077,1.54,1078,1.54,1079,1.54,1080,1.54,4017,3.9,4018,5.925,4019,5.925,4020,5.925,4021,4.472,4022,4.472,4023,4.472]],["title/directives/ValidateBcPostalDirective.html",[495,0.688,569,0.879]],["body/directives/ValidateBcPostalDirective.html",[0,0.009,3,0.239,4,0.26,5,0.119,8,0.239,13,0.783,23,0.464,25,0.886,26,0.013,27,0.464,28,0.341,29,0.618,57,0.645,71,0.416,79,0.24,81,0.513,82,1.176,84,0.265,87,1.485,88,3.833,89,0.994,99,0.009,100,0.011,101,0.009,163,3.833,173,1.287,204,2.14,209,0.923,217,2.463,218,2.216,448,2.782,473,1.176,474,1.157,495,1.157,545,1.301,564,1.136,569,1.653,603,6.736,604,6.016,605,3.833,606,4.956,607,4.956,632,4.199,640,3.157,735,3.232,1183,2.782,2067,4.698,2165,4.366,2283,5.383,2284,5.383,2290,4.119,2294,4.999,3272,3.595,3342,3.833,3383,4.119,3602,5.434,3851,5.434,4024,4.956,4025,6.736,4026,6.901,4027,5.684,4028,6.016,4029,6.016,4030,5.684,4031,4.956,4032,5.684]],["title/directives/ValidateNameDirective.html",[495,0.688,571,0.879]],["body/directives/ValidateNameDirective.html",[0,0.009,3,0.241,4,0.262,5,0.12,8,0.241,13,0.787,23,0.468,25,0.893,26,0.013,27,0.566,28,0.343,29,0.623,57,0.651,71,0.419,79,0.241,81,0.518,82,1.185,84,0.266,87,1.49,88,3.864,89,0.998,99,0.009,100,0.011,101,0.009,163,3.864,173,1.293,204,2.151,209,0.928,217,2.475,218,2.227,448,2.805,473,1.185,474,1.162,495,1.162,564,1.145,571,1.658,605,3.864,640,3.164,735,3.248,2067,4.715,2165,4.378,2283,5.402,2284,5.402,2290,4.153,2294,5.024,2927,5.024,2928,4.514,3272,3.624,3342,4.675,3383,4.153,4026,6.917,4028,6.046,4029,6.046,4031,4.997,4033,6.046,4034,4.997,4035,6.755,4036,5.731,4037,5.731]],["title/components/WizardProgressBarComponent.html",[313,0.128,559,0.909]],["body/components/WizardProgressBarComponent.html",[0,0.005,3,0.144,4,0.157,5,0.103,8,0.144,9,0.56,11,0.953,13,0.56,20,0.441,21,2.314,22,4.156,23,0.627,25,0.769,26,0.013,27,0.546,28,0.345,29,0.536,33,1.092,37,1.895,43,0.478,44,0.441,52,0.786,53,3.57,56,1.13,57,0.76,64,0.827,65,0.835,68,3.265,74,2.527,76,3.886,78,1.608,79,0.233,80,1.48,81,0.31,83,1.68,84,0.132,89,0.773,94,1.225,99,0.005,100,0.008,101,0.005,106,0.686,132,1.318,135,2.487,147,1.155,165,2.595,168,1.844,173,1.248,209,0.66,220,0.835,235,1.262,246,0.71,269,0.734,280,2.487,295,0.786,313,0.181,326,1.825,335,1.844,336,1.542,354,2.046,380,0.71,407,0.827,416,0.741,422,2.944,423,1.13,466,0.76,467,0.84,468,0.813,469,0.84,472,1.674,473,0.71,474,1.416,476,0.986,478,0.986,481,1.96,491,2.651,492,2.415,493,0.786,494,1.249,495,0.575,496,1.6,497,0.869,498,0.869,499,0.76,500,0.869,501,0.734,502,0.869,503,0.734,504,0.869,505,0.76,506,0.869,507,0.76,508,0.869,509,0.76,510,0.869,511,0.76,512,0.869,513,0.76,514,0.813,515,0.869,516,0.734,517,0.869,518,0.734,519,0.869,520,0.76,521,0.869,522,0.869,523,0.734,524,0.869,525,0.76,526,1.463,527,0.76,528,0.71,529,0.786,530,1.249,531,0.734,532,0.869,533,0.76,534,0.869,535,0.76,536,0.869,537,0.71,538,0.869,539,0.76,540,0.869,541,0.76,542,0.84,543,0.869,544,0.734,545,0.786,546,0.869,547,0.734,548,0.869,549,0.734,550,0.869,551,0.76,552,0.869,553,0.76,554,0.869,555,0.76,556,0.869,557,0.734,558,0.869,559,1.398,560,1.7,561,1.852,562,0.734,563,0.869,564,0.686,565,0.734,566,0.869,567,0.734,568,0.869,569,0.734,570,0.869,571,0.734,572,0.869,573,0.734,574,0.84,575,0.869,616,1.318,619,4.303,650,2.046,664,2.651,666,2.312,692,2.944,719,3.446,806,2.314,807,2.227,825,1.531,826,1.531,835,0.961,872,2.395,986,3.121,1009,1.182,1010,1.7,1011,1.182,1012,1.7,1013,1.7,1014,1.7,1015,1.182,1016,1.182,1017,1.7,1018,1.7,1019,1.182,1020,1.182,1021,1.182,1022,1.182,1023,1.182,1024,1.7,1025,1.641,1026,1.182,1027,1.7,1028,1.7,1029,1.182,1030,1.7,1031,1.182,1032,1.182,1033,1.182,1034,1.182,1035,2.176,1036,1.182,1037,1.182,1038,1.182,1039,1.182,1040,1.182,1041,1.182,1042,1.182,1043,1.182,1044,1.182,1045,1.182,1046,1.182,1047,1.182,1048,1.182,1049,1.182,1050,1.182,1051,1.182,1052,1.7,1053,1.182,1054,1.182,1055,1.182,1056,1.182,1057,1.182,1058,1.182,1059,1.182,1060,1.182,1061,1.182,1062,1.182,1063,1.182,1064,1.182,1065,1.182,1066,1.7,1067,1.182,1068,1.182,1069,1.182,1070,1.182,1071,1.182,1072,0.961,1073,1.182,1074,1.182,1075,1.182,1076,1.182,1077,1.182,1078,1.182,1079,1.182,1080,1.182,1085,1.102,1206,2.047,1249,2.944,1250,2.047,1259,2.171,1272,2.703,1274,2.703,1331,3.121,1336,4.55,1339,3.654,1988,3.896,1989,3.995,2021,2.171,2086,2.487,2092,2.703,2169,3.394,2264,3.327,2265,2.527,2337,2.171,2338,2.314,2449,5.835,2464,2.487,2584,3.575,2850,2.487,2851,3.886,2852,3.886,2862,2.993,2895,3.886,3048,5.038,3049,2.993,3050,2.993,3051,2.993,3142,4.303,3524,2.314,3568,4.303,3801,6.118,3867,4.303,4038,6.773,4039,5.777,4040,5.777,4041,4.935,4042,5.777,4043,5.777,4044,5.777,4045,6.317,4046,4.935,4047,6.317,4048,6.317,4049,4.935,4050,3.432,4051,4.935,4052,3.432,4053,3.432,4054,3.432,4055,3.432,4056,4.935,4057,4.935,4058,5.038,4059,4.303,4060,4.935,4061,4.935,4062,3.886,4063,3.432,4064,5.777,4065,4.935,4066,3.432,4067,5.777,4068,4.935,4069,3.432,4070,3.432,4071,3.432,4072,3.432,4073,3.432,4074,3.432,4075,3.432,4076,3.432,4077,3.432,4078,3.432,4079,3.432,4080,3.432,4081,5.777,4082,3.432,4083,3.432,4084,3.432,4085,3.432,4086,3.432,4087,3.432,4088,6.692,4089,3.432,4090,4.935,4091,3.432,4092,3.432,4093,3.432,4094,3.432,4095,2.993,4096,3.432,4097,4.935,4098,3.432,4099,3.432,4100,3.432,4101,3.432,4102,3.432,4103,3.432,4104,3.432,4105,3.432,4106,2.703,4107,3.432,4108,3.432,4109,3.432,4110,3.432,4111,3.432,4112,3.432,4113,3.432,4114,3.432,4115,4.935]],["title/interfaces/WizardProgressItem.html",[901,0.714,1339,2.597]],["body/interfaces/WizardProgressItem.html",[0,0.009,3,0.316,4,0.267,5,0.123,8,0.246,9,0.797,17,2.423,26,0.013,28,0.347,59,2.164,65,0.845,71,0.608,74,4.258,79,0.203,83,2.86,84,0.269,89,0.939,99,0.009,100,0.011,101,0.009,150,2.423,162,2.164,236,4.604,305,4.604,364,3.697,483,5.461,560,1.384,561,1.294,661,1.384,870,4.186,901,1.219,926,2.994,1164,2.331,1331,4.437,1332,4.604,1333,2.994,1334,5.097,1335,5.097,1336,4.604,1338,5.097,1339,4.755,1341,5.097,1342,5.097,1344,5.097,1345,5.097,1346,5.084,1350,5.097,1351,5.097,1352,5.097,1353,5.097,1354,5.097,1355,5.097,1356,5.097,1357,6.118,1358,5.097,1359,5.097]],["title/components/XiconButtonComponent.html",[313,0.128,562,0.879]],["body/components/XiconButtonComponent.html",[0,0.008,3,0.204,4,0.222,5,0.131,8,0.204,11,1.207,13,0.71,20,0.889,23,0.616,26,0.013,27,0.564,28,0.342,33,1.384,52,1.112,56,1.672,57,0.552,64,1.048,65,0.702,71,0.457,79,0.169,81,0.439,84,0.186,99,0.008,100,0.01,101,0.008,235,1.288,246,1.005,269,1.039,295,1.112,313,0.216,319,2.073,352,2.745,380,1.005,407,1.048,416,0.939,423,1.432,466,1.075,467,1.189,468,1.15,469,1.189,473,1.005,474,1.442,476,1.25,478,1.25,488,5.752,493,1.112,494,1.584,495,0.814,496,1.849,497,1.23,498,1.23,499,1.075,500,1.23,501,1.039,502,1.23,503,1.039,504,1.23,505,1.075,506,1.23,507,1.075,508,1.23,509,1.075,510,1.23,511,1.075,512,1.23,513,1.075,514,1.15,515,1.23,516,1.039,517,1.23,518,1.039,519,1.23,520,1.075,521,1.23,522,1.23,523,1.039,524,1.23,525,1.075,526,1.751,527,1.075,528,1.005,529,1.112,530,1.584,531,1.039,532,1.23,533,1.075,534,1.23,535,1.075,536,1.23,537,1.005,538,1.23,539,1.075,540,1.23,541,1.075,542,1.189,543,1.23,544,1.039,545,1.112,546,1.23,547,1.039,548,1.23,549,1.039,550,1.23,551,1.075,552,1.23,553,1.075,554,1.23,555,1.075,556,1.23,557,1.039,558,1.23,559,1.075,560,1.15,561,1.075,562,1.563,563,1.993,564,0.971,565,1.039,566,1.23,567,1.039,568,1.23,569,1.039,570,1.23,571,1.039,572,1.23,573,1.039,574,1.189,575,1.23,647,0.87,698,5.453,699,5.453,705,1.875,713,1.863,721,1.583,728,3.52,1085,1.56,2368,2.745,3854,6.093,4106,3.826,4116,6.745,4117,4.236,4118,7.303,4119,6.916,4120,6.254,4121,4.858,4122,4.858,4123,4.858,4124,4.858,4125,4.858]],["title/directives/YearValidateDirective.html",[495,0.688,573,0.879]],["body/directives/YearValidateDirective.html",[0,0.008,3,0.205,4,0.223,5,0.102,8,0.205,13,0.712,23,0.597,25,0.76,26,0.014,27,0.398,28,0.374,29,0.53,33,1.387,34,2.19,44,0.806,57,0.553,71,0.576,79,0.241,81,0.44,82,1.008,84,0.187,87,1.574,89,1.036,99,0.008,100,0.01,101,0.008,147,0.974,163,3.287,173,1.444,181,2.284,204,1.944,209,0.839,217,2.238,218,2.013,309,2.021,326,1.814,337,2.497,367,3.532,416,1.098,448,2.386,473,1.008,474,1.051,495,1.051,564,0.974,573,1.565,574,1.535,640,2.917,641,2.619,667,3.285,681,2.386,691,3.287,702,2.565,735,2.936,814,2.755,872,2.598,879,3.287,1132,2.386,1135,3.287,1136,2.908,1177,3.542,1198,2.908,1212,3.368,1998,5.456,2006,3.532,2010,4.362,2015,4.362,2026,3.532,2056,3.532,2057,3.532,2059,3.532,2060,3.532,2067,4.784,2070,3.839,2083,4.451,2094,5.02,2095,3.112,2096,5.02,2165,3.542,2177,5.465,2222,5.759,2283,5.02,2284,5.02,2286,6.041,2290,3.532,2293,4.251,2294,5.02,2295,4.251,2867,3.839,3311,3.839,3479,6.376,3538,4.251,4126,6.596,4127,4.251,4128,6.928,4129,6.928,4130,4.875,4131,4.875,4132,4.875,4133,4.875,4134,4.875,4135,6.928,4136,4.875,4137,4.875,4138,6.268,4139,6.928,4140,4.875,4141,4.875,4142,4.875,4143,4.875]],["title/changelog.html",[4144,2.048,4145,2.048,4146,2.994]],["body/changelog.html",[0,0.004,2,1.198,5,0.11,11,1.123,13,0.328,15,1.298,23,0.236,26,0.008,27,0.534,35,2.52,42,1.949,43,0.868,44,0.372,47,1.553,50,0.995,53,2.457,56,0.995,64,0.876,71,0.382,74,1.48,79,0.151,84,0.201,89,0.387,99,0.004,100,0.007,101,0.004,104,2.037,108,1.246,132,1.67,147,0.578,162,1.07,171,2.094,177,1.949,187,3.731,188,3.424,191,1.198,201,1.724,214,1.724,215,1.303,220,0.629,230,2.094,232,2.094,235,1.251,237,3.791,239,0.961,240,4.707,241,4.687,244,2.094,276,1.633,278,1.828,280,2.094,285,2.52,287,4.418,295,1.197,296,4.58,311,1.828,313,0.228,318,3.151,319,1.303,320,3.151,326,1.139,327,4.58,333,1.828,335,2.336,336,3.275,338,2.276,339,2.094,348,2.276,360,1.11,362,1.724,366,2.52,370,1.949,373,1.354,378,1.724,379,1.246,380,0.598,383,2.677,388,4.747,389,2.52,390,2.276,397,2.276,401,3.151,405,1.953,407,1.098,409,1.724,410,1.828,416,0.984,421,1.553,499,1.45,501,0.93,503,1.244,505,0.64,523,0.618,528,0.598,529,0.995,531,0.618,537,0.899,542,1.065,544,0.618,545,1.331,549,1.244,557,1.118,562,0.618,576,2.954,578,1.48,584,1.724,589,1.949,632,1.633,641,1.553,647,0.605,664,3.652,665,1.633,673,1.349,675,1.633,681,3.713,684,2.75,692,3.118,695,2.52,722,2.677,728,2.094,732,2.52,733,4.117,734,0.995,765,1.354,804,4.205,814,1.633,815,2.75,825,1.349,826,1.349,832,1.949,836,3.791,840,3.525,876,2.094,885,1.828,914,2.276,926,1.48,974,1.246,975,3.052,1085,1.396,1090,1.724,1128,1.828,1133,1.953,1164,1.153,1178,3.306,1179,2.276,1180,2.336,1183,2.846,1203,4.117,1207,2.276,1212,2.336,1236,1.828,1291,1.949,1331,1.828,1339,1.828,1363,2.094,1373,2.932,1991,2.594,2021,1.828,2025,1.949,2061,2.336,2064,2.954,2088,2.276,2095,2.348,2130,5.437,2138,2.75,2140,2.276,2161,2.52,2167,2.52,2186,2.276,2268,3.791,2274,2.276,2308,3.791,2334,2.094,2336,2.52,2368,3.524,2369,4.143,2370,2.276,2374,2.276,2391,3.791,2392,2.094,2463,2.52,2482,4.213,2483,2.52,2491,2.276,2503,2.932,2512,2.094,2515,4.117,2518,4.558,2526,2.52,2534,5.07,2558,2.094,2569,3.791,2624,2.52,2625,2.276,2647,4.558,2650,5.842,2654,2.094,2666,2.52,2688,3.424,2721,1.828,2754,3.424,2868,5.437,2878,3.677,2884,2.276,2967,3.424,3017,3.791,3019,2.276,3021,1.949,3104,2.094,3107,2.52,3134,6.457,3136,5.437,3166,2.52,3211,1.633,3232,3.424,3233,3.791,3234,3.791,3279,2.52,3284,2.52,3362,2.276,3374,4.993,3454,1.828,3456,2.52,3487,5.07,3491,2.52,3524,1.949,3608,2.52,3699,5.437,3701,2.52,3704,2.52,3721,2.52,3759,2.276,3870,5.713,3956,2.52,4106,2.276,4144,1.724,4145,1.724,4146,5.713,4147,2.89,4148,7.219,4149,6.945,4150,5.437,4151,8.032,4152,2.89,4153,2.89,4154,2.89,4155,5.227,4156,2.89,4157,8.089,4158,2.89,4159,2.89,4160,2.89,4161,2.52,4162,2.89,4163,5.815,4164,2.89,4165,2.89,4166,2.89,4167,2.89,4168,2.89,4169,3.791,4170,2.89,4171,2.89,4172,2.89,4173,2.89,4174,2.89,4175,2.89,4176,2.89,4177,2.89,4178,2.89,4179,2.52,4180,2.89,4181,2.89,4182,4.993,4183,2.89,4184,2.276,4185,2.89,4186,6.236,4187,2.52,4188,2.89,4189,2.89,4190,2.89,4191,2.89,4192,2.89,4193,2.89,4194,2.89,4195,2.52,4196,2.89,4197,2.89,4198,2.89,4199,2.89,4200,2.89,4201,2.89,4202,2.89,4203,2.89,4204,5.227,4205,2.89,4206,2.89,4207,2.89,4208,2.89,4209,2.89,4210,2.89,4211,2.89,4212,2.89,4213,2.89,4214,2.89,4215,2.89,4216,2.89,4217,2.89,4218,2.89,4219,2.89,4220,2.89,4221,5.227,4222,2.89,4223,2.276,4224,2.89,4225,2.89,4226,2.89,4227,4.348,4228,2.89,4229,2.89,4230,2.89,4231,4.348,4232,2.89,4233,2.52,4234,5.227,4235,2.89,4236,2.89,4237,2.89,4238,4.348,4239,2.89,4240,2.89,4241,4.58,4242,2.89,4243,2.89,4244,2.89,4245,5.07,4246,2.89,4247,2.89,4248,2.89,4249,2.89,4250,2.89,4251,2.89,4252,2.89,4253,2.89,4254,2.89,4255,4.348,4256,2.89,4257,2.89,4258,2.89,4259,2.89,4260,2.89,4261,5.815,4262,2.52,4263,2.52,4264,2.52,4265,2.52,4266,2.89,4267,2.89,4268,2.89,4269,2.89,4270,4.558,4271,2.89,4272,2.89,4273,2.89,4274,2.89,4275,7.502,4276,2.89,4277,2.89,4278,5.815,4279,4.558,4280,3.424,4281,2.89,4282,2.89,4283,2.89,4284,2.89,4285,2.89,4286,2.89,4287,2.89,4288,2.89,4289,2.89,4290,2.89,4291,2.89,4292,2.89,4293,2.89,4294,2.89,4295,2.89,4296,2.89,4297,2.89,4298,2.89,4299,2.89,4300,2.89,4301,4.348,4302,2.89,4303,2.89,4304,2.89,4305,2.89,4306,2.89,4307,2.89,4308,2.89,4309,2.89,4310,2.89,4311,2.89,4312,2.89,4313,2.89,4314,2.89,4315,2.89,4316,2.89,4317,2.89,4318,2.89,4319,2.89,4320,2.52,4321,2.89,4322,2.89,4323,2.89,4324,2.89,4325,2.89,4326,2.89,4327,2.89,4328,2.89,4329,2.89,4330,2.89,4331,2.89,4332,2.89,4333,2.89,4334,2.89,4335,2.52,4336,2.89,4337,2.89,4338,2.52,4339,2.89,4340,2.89,4341,2.89,4342,2.52,4343,2.89,4344,2.89,4345,2.89,4346,2.52,4347,2.89,4348,2.89,4349,2.89,4350,2.89,4351,5.227,4352,5.815,4353,2.89,4354,3.791,4355,2.89,4356,2.89,4357,2.094,4358,2.89,4359,2.89,4360,2.89,4361,2.89,4362,2.89,4363,2.89,4364,2.89,4365,2.89,4366,2.52,4367,2.52,4368,2.89,4369,4.348,4370,2.89,4371,2.89,4372,2.89,4373,2.276,4374,2.89,4375,2.52,4376,2.89,4377,2.89,4378,2.52,4379,2.094,4380,2.89,4381,2.89,4382,4.558,4383,2.89,4384,2.89,4385,2.89,4386,2.89,4387,2.89,4388,2.89,4389,2.89,4390,2.89,4391,2.89,4392,2.89,4393,2.89,4394,2.89,4395,2.89,4396,2.52,4397,2.89,4398,2.89,4399,2.89,4400,2.89,4401,1.949,4402,2.52,4403,2.52,4404,2.89,4405,2.52,4406,2.89,4407,2.89,4408,2.89,4409,4.348,4410,2.89,4411,2.89,4412,2.89,4413,2.89,4414,2.89,4415,2.89,4416,3.791,4417,2.89,4418,2.89,4419,2.89,4420,2.094,4421,2.89,4422,2.89,4423,2.89,4424,2.89,4425,2.89,4426,2.89,4427,2.89,4428,2.89,4429,2.52,4430,2.89,4431,2.52,4432,2.89,4433,2.89,4434,2.89,4435,2.89,4436,2.89,4437,2.89,4438,2.89]],["title/coverage.html",[4439,4.878]],["body/coverage.html",[0,0.012,1,2.596,5,0.069,6,2.874,7,2.874,26,0.013,28,0.163,52,1.097,94,3.048,99,0.005,100,0.007,101,0.005,102,1.771,103,3.775,104,1.544,105,2.874,193,2.388,196,2.544,197,2.085,199,2.223,200,2.874,201,1.966,214,1.966,230,2.388,231,2.874,232,2.388,233,2.874,246,0.682,269,1.025,272,2.859,313,0.261,326,0.863,380,0.682,421,1.771,466,0.73,470,2.874,495,1.104,499,0.73,501,0.705,503,0.705,505,0.73,507,0.73,509,0.73,511,0.73,513,0.73,516,0.705,518,0.705,520,0.73,523,0.705,525,0.73,527,0.73,528,0.682,531,0.705,533,0.73,535,0.73,537,0.682,539,0.73,541,0.73,544,0.705,547,0.705,549,0.705,551,0.73,553,0.73,555,0.73,557,0.705,559,0.73,561,1.061,562,0.705,565,0.705,567,0.705,569,0.705,571,0.705,573,0.705,576,1.863,577,2.874,632,2.708,647,0.459,650,3.314,661,0.78,662,2.874,667,3.087,671,1.059,677,2.874,725,2.874,726,2.596,727,2.874,779,2.085,780,3.775,781,3.775,803,2.388,849,2.388,850,3.775,851,3.775,893,2.388,901,1.352,933,2.874,967,2.874,986,4.921,1088,1.771,1089,3.921,1116,4.165,1125,1.966,1148,1.966,1152,1.863,1170,2.223,1171,4.092,1178,2.085,1198,1.966,1331,2.085,1332,3.775,1339,2.085,1360,2.874,1361,2.596,1362,2.874,1383,5.187,1386,2.388,1389,2.596,1414,1.863,1415,2.596,1968,4.447,1991,1.966,1994,2.223,2083,1.863,2095,1.481,2104,2.874,2105,2.874,2129,3.775,2169,1.771,2281,4.179,2282,4.179,2302,2.874,2324,2.596,2325,5.743,2326,5.187,2333,2.596,2353,1.966,2358,2.874,2361,2.596,2461,4.441,2465,2.859,2472,2.596,2475,3.473,2479,3.808,2487,2.388,2491,3.775,2503,3.231,2507,4.492,2508,2.874,2515,5.412,2848,3.775,2849,3.473,2850,4.092,2889,3.775,2890,3.473,2891,3.775,2922,2.388,2931,2.085,2964,2.085,2965,3.775,2968,2.085,3014,2.874,3067,2.596,3068,4.179,3069,3.775,3070,4.179,3209,2.388,3210,5.406,3231,2.874,3276,3.775,3277,2.596,3278,2.874,3297,2.596,3298,2.874,3304,4.447,3331,2.388,3336,2.596,3372,2.596,3422,4.179,3486,2.874,3556,2.874,3557,2.596,3558,2.874,3602,4.447,3603,2.596,3604,2.874,3642,4.883,3645,2.388,3653,2.596,3671,2.596,3698,2.874,3725,2.874,3745,2.874,3746,2.874,3791,2.874,3792,2.874,3801,2.596,3851,3.775,3854,2.596,3856,2.874,3862,2.874,3863,2.874,3869,2.874,3908,2.874,3985,2.874,4017,2.874,4024,4.179,4025,2.874,4033,4.179,4034,4.179,4035,2.874,4038,2.874,4116,2.874,4117,2.874,4126,4.179,4127,4.179,4150,4.179,4169,4.179,4179,4.179,4182,2.223,4195,4.179,4439,2.874,4440,3.296,4441,6.199,4442,2.874,4443,3.296,4444,3.296,4445,3.296,4446,4.793,4447,3.296,4448,3.296,4449,3.296,4450,3.296,4451,3.296,4452,3.296,4453,3.296,4454,4.793,4455,5.406,4456,6.199,4457,3.296,4458,8.408,4459,8.442,4460,7.781,4461,5.647,4462,3.296,4463,6.199,4464,3.296,4465,3.296,4466,3.296,4467,5.647,4468,3.296,4469,3.296,4470,3.296,4471,3.296,4472,3.296,4473,3.296,4474,3.296,4475,4.793,4476,3.296,4477,3.296,4478,3.296,4479,4.793,4480,3.296,4481,3.296,4482,3.296,4483,3.296,4484,3.296,4485,3.296,4486,3.296,4487,3.296,4488,3.296,4489,3.296,4490,3.296,4491,3.296,4492,3.296,4493,3.296,4494,3.296,4495,3.296,4496,3.296,4497,3.296,4498,3.296,4499,3.296,4500,3.296,4501,3.296,4502,3.296,4503,3.296,4504,3.296,4505,3.296,4506,3.296,4507,4.924,4508,4.924,4509,2.874,4510,2.388,4511,4.179,4512,2.874,4513,4.179,4514,6.97,4515,3.296,4516,3.296,4517,4.793,4518,3.296,4519,3.296,4520,3.296,4521,3.296,4522,3.296,4523,3.296,4524,3.296,4525,3.296,4526,3.296,4527,3.296,4528,3.296,4529,3.296,4530,5.992,4531,2.874,4532,2.874,4533,2.874,4534,2.874,4535,2.874,4536,2.874,4537,4.924,4538,4.924,4539,2.874,4540,2.874,4541,6.561,4542,6.586,4543,3.296,4544,3.296,4545,3.296,4546,5.743,4547,2.874,4548,2.874,4549,2.874,4550,2.874,4551,2.874,4552,4.793,4553,3.296,4554,3.296,4555,3.296]],["title/dependencies.html",[665,1.941,666,2.312]],["body/dependencies.html",[26,0.013,81,0.554,82,1.269,83,3.002,99,0.01,100,0.011,101,0.01,165,2.755,300,3.002,311,3.879,378,3.659,422,4.308,491,3.296,492,3.534,514,1.452,666,2.874,667,2.755,676,3.296,800,4.445,842,6.296,848,4.831,1090,3.659,2333,4.831,2334,5.232,2360,5.349,2361,4.831,2364,5.349,3211,3.467,3824,5.349,4233,5.349,4556,6.134,4557,8.375,4558,6.134,4559,6.134,4560,6.134,4561,6.134,4562,6.134,4563,6.134,4564,6.134,4565,6.134,4566,5.349,4567,6.134,4568,6.134,4569,6.134,4570,6.134,4571,6.134,4572,6.134,4573,6.134]],["title/miscellaneous/enumerations.html",[4574,2.488,4575,4.304]],["body/miscellaneous/enumerations.html",[3,0.304,8,0.258,26,0.013,43,1.005,44,1.082,99,0.01,100,0.011,101,0.01,147,1.444,274,3.145,346,4.837,349,4.837,872,2.546,1089,3.884,1103,4.31,1117,4.141,1118,4.141,1119,4.141,1120,4.141,1121,3.884,1122,4.141,1123,4.141,1124,4.141,1171,4.45,1181,4.837,1282,5.691,1368,3.884,1473,4.45,1734,4.837,2129,4.837,2145,6.301,2168,6.301,2265,3.145,2461,4.141,2465,3.663,2469,4.837,2472,4.837,4442,5.355,4574,4.45,4575,5.355,4576,7.226,4577,6.141,4578,6.141,4579,6.141,4580,6.141,4581,6.141,4582,6.141,4583,6.141,4584,6.141,4585,6.141,4586,6.141,4587,6.141,4588,6.141]],["title/miscellaneous/functions.html",[4062,3.888,4574,2.488]],["body/miscellaneous/functions.html",[5,0.153,8,0.205,25,1.303,26,0.013,27,0.686,28,0.383,29,0.909,30,0.977,50,1.117,57,0.923,71,0.459,77,2.91,79,0.17,99,0.008,100,0.01,101,0.008,131,3.29,133,3.966,136,2.192,137,3.086,150,2.023,160,3.741,181,2.286,235,0.733,239,1.622,240,2.757,241,2.757,275,4.229,278,4.785,294,3.535,336,2.192,346,5.761,469,2.003,579,3.29,590,3.29,616,1.874,640,1.946,665,3.544,1238,3.086,1271,3.29,2137,2.91,2138,4.626,2211,4.544,2265,2.499,2467,5.468,2586,4.939,2651,3.843,2878,3.086,2998,3.843,3104,3.535,3534,3.535,3953,4.254,4062,3.843,4095,4.254,4357,5.022,4429,5.468,4507,4.254,4508,4.254,4509,5.468,4510,4.544,4511,4.254,4512,5.468,4513,6.378,4514,5.468,4530,4.254,4531,5.468,4532,6.043,4533,5.468,4534,5.468,4535,5.468,4536,5.468,4537,4.254,4538,6.378,4539,5.468,4540,5.468,4541,4.254,4546,4.254,4547,5.468,4548,5.468,4549,5.468,4550,5.468,4551,5.468,4574,3.535,4589,8.228,4590,6.931,4591,6.271,4592,4.879,4593,6.271,4594,4.879,4595,7.979,4596,4.879,4597,4.879,4598,4.879,4599,4.879,4600,4.879,4601,4.879,4602,4.879,4603,4.879,4604,4.879,4605,7.567,4606,4.879,4607,6.271,4608,6.271,4609,7.877,4610,4.879,4611,6.271,4612,6.271,4613,6.271,4614,4.879,4615,4.879,4616,4.254,4617,4.879,4618,6.271,4619,4.879,4620,7.315,4621,4.879,4622,4.879,4623,4.879,4624,4.879,4625,4.879,4626,4.879,4627,4.879,4628,4.254,4629,4.879,4630,4.879,4631,6.271]],["title/index.html",[8,0.144,4144,2.048,4145,2.048]],["body/index.html",[26,0.013,79,0.212,99,0.009,100,0.011,101,0.009,132,2.336,144,3.846,202,3.437,203,3.846,210,3.437,217,2.171,235,1.186,240,4.321,241,3.437,269,1.301,390,4.789,407,1.204,664,3.86,679,4.406,817,4.1,832,4.1,1363,5.205,2139,4.285,2353,3.627,2396,4.1,2415,4.789,2466,4.789,2585,4.1,2654,4.406,3096,6.264,3308,4.789,3407,4.789,3543,5.302,3787,4.543,4059,5.302,4144,3.627,4145,3.627,4161,6.264,4182,5.327,4320,5.302,4379,4.406,4632,6.081,4633,6.081,4634,6.081,4635,7.184,4636,7.184,4637,6.081,4638,6.081,4639,6.081,4640,6.081,4641,7.184,4642,6.081,4643,6.081,4644,6.081,4645,6.081,4646,6.081,4647,6.081,4648,6.081,4649,6.081,4650,6.081]],["title/license.html",[4144,2.048,4145,2.048,4510,2.488]],["body/license.html",[5,0.133,26,0.012,50,1.447,99,0.01,100,0.011,101,0.01,213,2.727,239,2.102,383,3.238,590,4.263,627,3.998,1233,4.581,1414,3.573,1490,4.263,2138,3.998,2721,4.914,3229,4.979,3674,4.979,4510,6.025,4616,5.513,4651,6.322,4652,6.322,4653,6.322,4654,6.322,4655,6.322,4656,6.322,4657,6.322,4658,6.322,4659,6.322,4660,6.322,4661,6.322,4662,5.513,4663,6.322,4664,7.35,4665,6.322,4666,6.322,4667,6.322,4668,6.322,4669,6.322,4670,6.322,4671,6.322,4672,6.322,4673,6.322,4674,6.322]],["title/modules.html",[816,3.337]],["body/modules.html",[26,0.012,99,0.01,100,0.012,101,0.01,422,4.5,815,4.183,816,3.946,2450,6.577,3787,4.183,4675,7.543,4676,7.543]],["title/overview.html",[4677,4.878]],["body/overview.html",[2,1.737,26,0.013,99,0.007,100,0.009,101,0.007,198,2.368,201,2.5,217,1.496,246,1.569,380,1.569,407,0.702,466,1.68,492,2.051,493,0.959,499,1.68,501,1.624,503,1.624,505,1.68,507,1.68,509,1.68,511,1.68,513,1.68,516,1.624,518,1.624,520,1.68,523,1.624,525,1.68,527,1.68,528,1.569,531,1.624,533,1.68,535,1.68,537,1.569,539,1.68,541,1.68,544,1.624,547,1.624,549,1.624,551,1.68,553,1.68,555,1.68,557,1.624,559,1.68,562,1.624,564,0.837,565,1.624,567,1.624,569,1.624,571,1.624,573,1.624,616,1.609,666,1.963,779,4.066,814,2.368,815,4.799,816,2.5,817,2.825,818,3.3,819,3.654,820,3.654,821,3.654,822,3.654,823,4.467,824,3.036,872,1.737,1164,1.671,2265,2.146,2465,2.5,2469,3.3,2487,3.036,2503,2.825,3787,5.497,3788,3.654,3789,3.654,3790,3.654,4455,3.654,4677,3.654]],["title/additional-documentation/getting-started.html",[64,0.495,4144,1.76,4145,1.76,4678,2.138]],["body/additional-documentation/getting-started.html",[0,0.008,2,3.32,5,0.104,13,0.564,15,2.849,26,0.013,40,4.596,68,2.806,75,2.962,79,0.287,84,0.268,99,0.008,100,0.01,101,0.008,102,3.755,104,2.971,108,3.176,109,2.962,111,3.348,130,2.962,132,1.908,136,2.231,150,2.059,173,0.926,196,1.838,198,3.585,202,3.585,203,4.011,204,1.968,212,5.53,215,1.489,217,2.264,235,1.261,239,1.651,240,4.733,241,4.161,274,2.543,297,3.598,309,2.059,352,2.806,354,2.059,360,1.908,365,4.33,373,2.326,379,2.142,381,4.33,384,3.14,385,1.981,396,2.962,407,1.276,416,0.746,514,1.176,576,3.95,578,3.249,624,3.598,627,4.011,647,0.691,681,3.104,694,3.911,709,3.911,730,4.33,804,4.712,814,3.585,815,4.011,817,4.277,831,4.33,832,4.965,833,2.326,855,2.806,934,1.176,1025,1.651,1088,2.668,1103,2.962,1152,2.806,1164,2.53,1180,2.668,1183,2.43,1206,2.962,1238,3.14,1253,3.598,1373,3.348,2064,2.806,2137,2.962,2139,2.962,2146,4.995,2263,4.33,2374,3.911,2414,4.33,2415,3.911,2585,3.348,2721,4.011,2878,3.14,2964,3.14,2968,4.011,3021,4.277,3086,3.911,3280,4.33,3285,3.598,3292,3.911,3454,3.14,3787,4.657,4058,4.33,4144,2.962,4145,2.962,4182,3.348,4187,4.33,4223,3.911,4262,5.53,4263,6.42,4264,4.33,4265,4.33,4280,3.911,4342,6.42,4367,5.53,4396,6.094,4679,4.966,4680,4.33,4681,4.33,4682,7.608,4683,4.966,4684,4.966,4685,4.966,4686,4.966,4687,4.966,4688,4.966,4689,4.966,4690,4.966,4691,4.966,4692,4.966,4693,4.966,4694,4.966,4695,4.966,4696,4.966,4697,4.966,4698,4.966,4699,4.966,4700,4.966,4701,3.911,4702,4.966,4703,4.966,4704,4.966,4705,4.33,4706,4.966,4707,6.343,4708,4.966,4709,4.966]],["title/additional-documentation/local-development.html",[64,0.495,3454,1.866,4420,2.138,4678,2.138]],["body/additional-documentation/local-development.html",[26,0.012,99,0.01,100,0.012,101,0.01,407,1.118,3454,4.218,4401,4.497,4420,4.833]],["title/additional-documentation/local-development/schematics.html",[64,0.576,4401,2.315,4678,2.488]],["body/additional-documentation/local-development/schematics.html",[5,0.101,26,0.013,27,0.563,36,1.791,50,1.107,64,0.811,67,3.261,68,3.524,77,2.885,87,0.967,99,0.008,100,0.01,101,0.008,136,3.275,150,2.861,187,3.233,194,3.505,202,3.524,215,1.45,235,1.18,239,2.295,240,4.618,241,2.733,244,3.505,274,2.477,276,2.733,311,3.944,313,0.151,318,5.283,335,3.351,336,3.275,337,3.194,384,3.059,385,2.487,387,3.809,405,2.173,407,1.046,410,3.059,483,3.261,578,2.477,579,4.654,647,1.05,664,4.36,666,2.266,681,2.367,690,4.217,691,3.261,692,4.349,700,2.086,701,1.929,816,3.72,838,4.217,1085,1.553,1180,2.599,1183,3.052,1221,3.059,1249,2.885,1291,3.261,1363,3.505,1373,3.261,1988,4.205,2005,2.885,2021,5.037,2022,3.505,2023,3.809,2061,3.351,2087,3.72,2137,4.117,2138,3.944,2139,2.885,2255,3.809,2264,3.261,2369,3.059,2509,4.217,2524,3.505,2558,5.001,2585,3.261,2625,3.809,2654,3.505,2688,3.809,2753,4.217,2758,4.217,2877,4.217,2883,3.059,3110,4.217,3232,3.809,3285,4.519,3374,4.916,3759,3.809,4148,4.217,4149,4.217,4184,3.809,4241,3.809,4270,4.217,4279,5.438,4354,4.217,4357,5.283,4366,4.217,4373,5.436,4378,6.018,4379,4.519,4382,4.217,4401,5.647,4402,6.58,4403,6.358,4405,4.217,4431,4.217,4566,5.438,4662,4.217,4681,4.217,4701,6.391,4705,4.217,4710,4.217,4711,4.217,4712,5.438,4713,4.217,4714,4.837,4715,4.837,4716,6.236,4717,4.217,4718,4.837,4719,4.837,4720,4.837,4721,7.291,4722,6.236,4723,4.837,4724,4.837,4725,4.837,4726,4.837,4727,4.837,4728,4.837,4729,4.837,4730,4.837,4731,4.837,4732,4.217,4733,5.438,4734,4.837,4735,4.837,4736,4.837,4737,6.236,4738,4.837,4739,4.837,4740,4.837,4741,4.837,4742,6.236,4743,4.837,4744,4.837,4745,4.837,4746,4.837,4747,4.837,4748,4.837,4749,4.837,4750,4.837,4751,4.837,4752,4.837,4753,4.837,4754,4.837,4755,4.837,4756,4.837,4757,4.837,4758,4.837,4759,4.837,4760,4.837,4761,4.837,4762,4.837,4763,4.837,4764,4.837,4765,4.837,4766,4.837,4767,4.837,4768,4.837,4769,4.837,4770,4.837,4771,4.837,4772,4.837,4773,4.837,4774,4.837,4775,4.837,4776,4.837,4777,4.837,4778,4.217,4779,4.217]],["title/additional-documentation/local-development/components.html",[64,0.576,407,0.576,4678,2.488]],["body/additional-documentation/local-development/components.html",[5,0.102,19,4.937,23,0.398,26,0.013,27,0.511,47,2.619,50,1.116,67,3.287,68,4.275,77,2.908,79,0.218,87,0.974,99,0.008,100,0.01,101,0.008,132,1.872,136,3.398,150,2.598,162,2.32,202,3.915,205,4.251,210,2.755,211,3.839,213,2.703,215,1.461,235,1.255,239,1.621,240,4.65,241,4.555,274,2.497,276,2.755,290,3.839,311,3.964,312,4.251,313,0.152,318,5.299,335,2.619,338,4.937,339,4.542,345,3.839,357,4.251,360,2.906,364,3.083,373,2.936,379,2.102,388,4.542,399,4.251,405,2.19,407,1.051,578,3.21,579,5.379,628,4.251,641,2.619,647,0.678,664,4.33,665,2.755,666,2.284,679,3.532,681,2.386,684,3.083,721,1.435,816,2.908,835,1.365,873,3.532,1180,2.619,1183,2.386,1234,3.532,1238,3.083,2021,4.381,2025,3.287,2061,2.619,2137,4.513,2139,4.97,2186,4.937,2265,3.21,2334,3.532,2372,3.839,2407,4.251,2558,3.532,2584,3.532,2721,3.083,3019,4.937,3104,3.532,3285,3.532,3374,5.31,3454,4.381,3457,4.251,3864,5.465,4182,3.287,4184,3.839,4223,3.839,4241,3.839,4245,4.251,4280,3.839,4335,4.251,4338,5.465,4346,4.251,4357,5.299,4373,4.937,4375,4.251,4379,4.542,4401,5.479,4416,4.251,4420,5.299,4628,4.251,4680,4.251,4701,6.4,4710,4.251,4711,5.465,4712,4.251,4713,5.465,4717,4.251,4732,5.465,4733,5.465,4778,4.251,4779,4.251,4780,4.875,4781,4.875,4782,4.875,4783,4.875,4784,6.268,4785,6.268,4786,6.268,4787,4.875,4788,4.875,4789,4.875,4790,4.875,4791,6.268,4792,4.875,4793,4.875,4794,4.875,4795,4.875,4796,4.875,4797,6.268,4798,6.268,4799,6.928,4800,6.268,4801,4.875,4802,6.928,4803,4.875,4804,4.875,4805,4.875,4806,4.875,4807,4.875,4808,4.875,4809,4.875,4810,4.875,4811,4.875,4812,4.875,4813,4.875,4814,4.875,4815,4.875,4816,4.875,4817,4.875]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["0",{"_index":94,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["0.0.17",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["0.0.18",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["0.0.19",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["0.0.20",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["0.0.21",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["0.0.22",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["0.0.23",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["0.0.24",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["0.0.25",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["0.0.26",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["0.0.27",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["0.0.28",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["0.0.29",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["0.0.30",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["0.0.31",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["0.0.32",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["0.0.33",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["0.0.34",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":4562,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":2737,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0.8.26",{"_index":4573,"title":{},"body":{"dependencies.html":{}}}],["0.8to",{"_index":2616,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0/1",{"_index":4459,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4482,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4467,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4461,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4463,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4441,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4485,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4494,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4468,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["017bd5f",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["01d17d3",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":4382,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["03c1243",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4149,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["07",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["09ae712",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["09ce95a",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["0ba1d1e",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["0s",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":872,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1',space,'(',number,number,number,')',space,number,number,number",{"_index":3593,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["1.0.0",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":4233,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":4460,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":4472,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":4493,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":4449,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":4465,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4504,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":4452,"title":{},"body":{"coverage.html":{}}}],["1/23",{"_index":4457,"title":{},"body":{"coverage.html":{}}}],["1/24",{"_index":4479,"title":{},"body":{"coverage.html":{}}}],["1/25",{"_index":4476,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4456,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4475,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4499,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":4446,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":4483,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":4454,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":4450,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2095,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["10.256s",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["10/31",{"_index":4464,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":986,"title":{},"body":{"components/CityComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["1024",{"_index":2706,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1048576",{"_index":2724,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["10^10",{"_index":3354,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["10th",{"_index":3550,"title":{},"body":{"components/PhnComponent.html":{}}}],["11",{"_index":2487,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"coverage.html":{},"overview.html":{}}}],["111",{"_index":3502,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["1111",{"_index":3501,"title":{},"body":{"components/PhnComponent.html":{}}}],["12",{"_index":2491,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["13",{"_index":2503,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["14",{"_index":2508,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["15",{"_index":2512,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["150",{"_index":4138,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["151f173",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2515,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["17",{"_index":2518,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["18",{"_index":2526,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["180",{"_index":4009,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["185148b",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["185px",{"_index":2245,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["18d69c6",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2534,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["19/23",{"_index":4445,"title":{},"body":{"coverage.html":{}}}],["1].iscomplete",{"_index":923,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["1a1",{"_index":3617,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["1a288cd",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["1c8242e",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["1ea543d",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":2265,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"overview.html":{},"additional-documentation/local-development/components.html":{}}}],["2.0",{"_index":4654,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":3284,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["2.0.550",{"_index":4570,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":4658,"title":{},"body":{"license.html":{}}}],["2.16.2",{"_index":4560,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":4564,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":4568,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":4567,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":4484,"title":{},"body":{"coverage.html":{}}}],["2/20",{"_index":4480,"title":{},"body":{"coverage.html":{}}}],["2/21",{"_index":4473,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":4471,"title":{},"body":{"coverage.html":{}}}],["2/25",{"_index":4478,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":4490,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":4506,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":4470,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4195,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2017",{"_index":4652,"title":{},"body":{"license.html":{}}}],["2019",{"_index":4148,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["201px",{"_index":2247,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["22",{"_index":4469,"title":{},"body":{"coverage.html":{}}}],["22710b7",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["238c01d",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":4179,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25",{"_index":4169,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["250",{"_index":1395,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{}}}],["255",{"_index":3244,"title":{},"body":{"components/NameComponent.html":{}}}],["26(a",{"_index":3115,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["2600",{"_index":2739,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["2625608",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":4150,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2a511e7",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["2c5c994",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["2ddfc23",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1368,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["3.2.0",{"_index":4569,"title":{},"body":{"dependencies.html":{}}}],["3/15",{"_index":4488,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":4451,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":4443,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":4492,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":4496,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2583,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["300",{"_index":4005,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["31",{"_index":2027,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{}}}],["32",{"_index":3336,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["33",{"_index":4455,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["3300",{"_index":2742,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["355945207",{"_index":3378,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["35d0bba",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["36476f8",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":4502,"title":{},"body":{"coverage.html":{}}}],["3868c50",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["3a06f99",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["3a98fb0",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["3ac6d4d",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["3b90e60",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["3d0a6bc",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["3f42b31",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2461,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"guards/RouteGuardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["4.3.1",{"_index":4565,"title":{},"body":{"dependencies.html":{}}}],["4/14",{"_index":4501,"title":{},"body":{"coverage.html":{}}}],["4/24",{"_index":4477,"title":{},"body":{"coverage.html":{}}}],["4/29",{"_index":4474,"title":{},"body":{"coverage.html":{}}}],["4/30",{"_index":4481,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2243,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["4/8",{"_index":4498,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":4505,"title":{},"body":{"coverage.html":{}}}],["400/500",{"_index":148,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["41f5609",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":4495,"title":{},"body":{"coverage.html":{}}}],["4295b03",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["4766a2b",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["479804f",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["47d614a",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["48966c0",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["48dfa9d",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["4b884a6",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["4d5992a",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["4e8eb9b",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2465,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["5/10",{"_index":4497,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2507,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["51bfe3b",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["532a3ec",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["53a109b",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":3596,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5555",{"_index":3597,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5b88093",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":2469,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.4.0",{"_index":4571,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":4637,"title":{},"body":{"index.html":{}}}],["6/36",{"_index":4453,"title":{},"body":{"coverage.html":{}}}],["6242bea",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["6254d29",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["650025e",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["65b8144",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":4489,"title":{},"body":{"coverage.html":{}}}],["66f9608",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["6775a4d",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["67c4797",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["6b8cedd",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["6c09982",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["6caf36c",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["6d5649d",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":2472,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.7",{"_index":4557,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":4500,"title":{},"body":{"coverage.html":{}}}],["7/25",{"_index":4462,"title":{},"body":{"coverage.html":{}}}],["7226b37",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":4491,"title":{},"body":{"coverage.html":{}}}],["7d2e7cd",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["7eaf326",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["7f968a4",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["7fd6537",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["7febf6d",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["7ff8510",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2475,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["8.9.4",{"_index":4634,"title":{},"body":{"index.html":{}}}],["8/21",{"_index":4503,"title":{},"body":{"coverage.html":{}}}],["8/33",{"_index":4448,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":4487,"title":{},"body":{"coverage.html":{}}}],["8004583",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["82",{"_index":4444,"title":{},"body":{"coverage.html":{}}}],["85eab15",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["88",{"_index":4486,"title":{},"body":{"coverage.html":{}}}],["8a22405",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["8d79d30",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["8e823c5",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["8f24e2e",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2479,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"coverage.html":{}}}],["9.0.0",{"_index":4563,"title":{},"body":{"dependencies.html":{}}}],["9/37",{"_index":4466,"title":{},"body":{"coverage.html":{}}}],["96a58b1",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["9][a",{"_index":3633,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["9]{1}\\\\d{2",{"_index":3587,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["9f5a04e",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":771,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["_applicationheadermap",{"_index":3157,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["_bypassguards",{"_index":856,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_context",{"_index":4595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_continue",{"_index":3763,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_continue(pageurl",{"_index":3765,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_headers",{"_index":109,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["_log",{"_index":1295,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_log(message",{"_index":1215,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_logerror",{"_index":1296,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_logerror(errormessage",{"_index":1218,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_name",{"_index":3470,"title":{},"body":{"classes/Person.html":{}}}],["_name.concat",{"_index":3471,"title":{},"body":{"classes/Person.html":{}}}],["_not_",{"_index":425,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["_onchange",{"_index":739,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["_only_",{"_index":4073,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["_ontouched",{"_index":740,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["_options",{"_index":4618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_sendlog",{"_index":1297,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_sendlog(message",{"_index":1240,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_starturl",{"_index":857,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["a1a",{"_index":3616,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["a702d6d",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["a9aaf59",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["a9cafca",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":1047,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["abort",{"_index":2490,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["above",{"_index":3285,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["absolute",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":15,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["abstractcontrol",{"_index":4026,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["abstractform",{"_index":1,"title":{"classes/AbstractForm.html":{}},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["abstracthttpservice",{"_index":102,"title":{"classes/AbstractHttpService.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["abstracthttpservice:11",{"_index":1321,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:16",{"_index":1320,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:22",{"_index":1315,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:30",{"_index":1317,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:38",{"_index":1318,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:59",{"_index":1316,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstractpgcheckservice",{"_index":197,"title":{"injectables/AbstractPgCheckService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["abstractpgservice",{"_index":3751,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["abstracttestpage",{"_index":230,"title":{"classes/AbstractTestPage.html":{}},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"coverage.html":{}}}],["abw",{"_index":1443,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ac7406b",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["acbbdc1",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":2752,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accept",{"_index":2455,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["accepting",{"_index":4141,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["access",{"_index":40,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["accessible",{"_index":2224,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["accessors",{"_index":114,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["accomplish",{"_index":4142,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["accordion",{"_index":475,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion'},{'name",{"_index":498,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["accordion.component.html",{"_index":479,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion.component.scss",{"_index":477,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordioncommoncomponent",{"_index":466,"title":{"components/AccordionCommonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordioncomponent",{"_index":471,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordionmodule",{"_index":3841,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accordionmodule.forroot",{"_index":3861,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["account",{"_index":3715,"title":{},"body":{"components/RadioComponent.html":{}}}],["accusamus",{"_index":1048,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["acl",{"_index":3207,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["act",{"_index":3121,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["action",{"_index":52,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":3769,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["activeindex",{"_index":4042,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["actual",{"_index":2263,"title":{},"body":{"components/DatepickerComponent.html":{},"additional-documentation/getting-started.html":{}}}],["actual_component",{"_index":575,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["adam",{"_index":4649,"title":{},"body":{"index.html":{}}}],["add",{"_index":187,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["added",{"_index":1128,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["adding",{"_index":1373,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["additional",{"_index":4678,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{}}],["additionaldocumentation",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["addpackagejsonscript",{"_index":4547,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagejsonscript(tree",{"_index":4592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addpackagetopackagejson",{"_index":4539,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagetopackagejson(host",{"_index":4606,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addr",{"_index":4702,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address",{"_index":576,"title":{"classes/Address.html":{}},"body":{"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/StreetComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["address'},{'name",{"_index":500,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["address();the",{"_index":4703,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address_url",{"_index":2971,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["addresscomponent",{"_index":499,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["addressline1",{"_index":581,"title":{},"body":{"classes/Address.html":{}}}],["addressline2",{"_index":582,"title":{},"body":{"classes/Address.html":{}}}],["addressline3",{"_index":583,"title":{},"body":{"classes/Address.html":{}}}],["adds",{"_index":4095,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{}}}],["addtag",{"_index":2305,"title":{},"body":{"components/DropdownComponent.html":{}}}],["addtagtext",{"_index":2306,"title":{},"body":{"components/DropdownComponent.html":{}}}],["adipisicing",{"_index":1015,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["administer",{"_index":3125,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["advantages",{"_index":685,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ae493e7",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["aee4761",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["af516d0",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["afg",{"_index":1417,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["afghanistan",{"_index":1418,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["africa",{"_index":1874,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["african",{"_index":1515,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["aftercontentinit",{"_index":2327,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["afterviewinit",{"_index":2330,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["again",{"_index":2022,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["against",{"_index":3538,"title":{},"body":{"components/PhnComponent.html":{},"directives/YearValidateDirective.html":{}}}],["age",{"_index":3438,"title":{},"body":{"classes/Person.html":{}}}],["ago",{"_index":1430,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["agreecheck",{"_index":3163,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agreeconsentmodal",{"_index":249,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["agreed",{"_index":4661,"title":{},"body":{"license.html":{}}}],["agreelabel",{"_index":3146,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agrees",{"_index":289,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["aia",{"_index":1432,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["aka",{"_index":3087,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ala",{"_index":1419,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["alb",{"_index":1422,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["albania",{"_index":1423,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["alberta",{"_index":3673,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["algeria",{"_index":1425,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["algorithm",{"_index":2517,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["alias",{"_index":1073,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["allmembers",{"_index":3716,"title":{},"body":{"components/RadioComponent.html":{}}}],["allow",{"_index":1293,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{}}}],["allowed",{"_index":2727,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["allowemptyvalue",{"_index":3513,"title":{},"body":{"components/PhnComponent.html":{}}}],["allowing",{"_index":886,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["alone",{"_index":3145,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["along",{"_index":123,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["already",{"_index":1206,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["alreadyexists",{"_index":1120,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":171,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["american",{"_index":1427,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["amet",{"_index":1013,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["amultiples",{"_index":2696,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["amultiples[nmultiple",{"_index":2708,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["andorra",{"_index":1429,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["angola",{"_index":1431,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["anguilla",{"_index":1433,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["angular",{"_index":68,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular's",{"_index":1272,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["angular.json",{"_index":4778,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular/animations",{"_index":4556,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":848,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":164,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["angular/compiler",{"_index":4558,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":82,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{},"dependencies.html":{}}}],["angular/http",{"_index":800,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":842,"title":{},"body":{"modules/CaptchaModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":83,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["angular2",{"_index":676,"title":{},"body":{"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angularjs2",{"_index":2436,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["animi",{"_index":1060,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["another",{"_index":63,"title":{},"body":{"classes/AbstractForm.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["answer",{"_index":795,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["answer.label",{"_index":778,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["antarctica",{"_index":1435,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["antigua",{"_index":1437,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["any)).then((pdfdoc",{"_index":2808,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["any).controls[input_name",{"_index":2424,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["anything",{"_index":1113,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["anywhere",{"_index":4727,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["apache",{"_index":4616,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["aperiam",{"_index":1036,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["api",{"_index":104,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"components/StreetComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["apibaseurl",{"_index":790,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["apiservice",{"_index":4698,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["apostrophe",{"_index":2936,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["apostrophes",{"_index":3275,"title":{},"body":{"components/NameComponent.html":{}}}],["app",{"_index":3073,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["app.component.ts",{"_index":4597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appcomponentcss",{"_index":4518,"title":{},"body":{"coverage.html":{}}}],["appcomponenthtml",{"_index":4519,"title":{},"body":{"coverage.html":{}}}],["appconstants",{"_index":2378,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["appear",{"_index":4785,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["appears",{"_index":283,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["appendselectortobody",{"_index":2239,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["applicable",{"_index":4659,"title":{},"body":{"license.html":{}}}],["applicant",{"_index":887,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["applicants",{"_index":890,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["application",{"_index":360,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["application's",{"_index":205,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"additional-documentation/local-development/components.html":{}}}],["application.information",{"_index":3111,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["applicationbase",{"_index":2355,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["applicationid",{"_index":1184,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["appropriate",{"_index":2758,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["approximation",{"_index":2695,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["april",{"_index":2039,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["arab",{"_index":1899,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["arabia",{"_index":1849,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["architecto",{"_index":1022,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aren't",{"_index":1285,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["arg",{"_index":1439,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["argentina",{"_index":1440,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["args",{"_index":2781,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguably",{"_index":2522,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguments",{"_index":2110,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["aria",{"_index":3416,"title":{},"body":{"components/PasswordComponent.html":{}}}],["arm",{"_index":1441,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["armenia",{"_index":1442,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["aroud",{"_index":3026,"title":{},"body":{"components/HeaderComponent.html":{}}}],["around",{"_index":2895,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["array",{"_index":2392,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/RadioComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["array(0",{"_index":2393,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["artifacts",{"_index":4802,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["aruba",{"_index":1444,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ascension",{"_index":1821,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ask",{"_index":4648,"title":{},"body":{"index.html":{}}}],["asm",{"_index":1426,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["assets",{"_index":4772,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["assets/gov3_bc_logo.png",{"_index":3038,"title":{},"body":{"components/HeaderComponent.html":{}}}],["assistance",{"_index":3127,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["associate",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":332,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["assuming",{"_index":4810,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["assumption",{"_index":4679,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["async",{"_index":259,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ata",{"_index":1434,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["atf",{"_index":1593,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["atg",{"_index":1436,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["attachmentorder",{"_index":1092,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attr",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["attr.aria",{"_index":3414,"title":{},"body":{"components/PasswordComponent.html":{}}}],["attribute",{"_index":397,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"changelog.html":{}}}],["attributes",{"_index":2981,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["audit",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":2042,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["aus",{"_index":1445,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["australia",{"_index":1446,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["austria",{"_index":1448,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["aut",{"_index":1447,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["autem",{"_index":1042,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["auto",{"_index":2064,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["autocomplete",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["autocomplete=\"false",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["autocorrect",{"_index":2307,"title":{},"body":{"components/DropdownComponent.html":{}}}],["automatically",{"_index":75,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["available",{"_index":2486,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["avoids",{"_index":363,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["await",{"_index":436,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["awkward",{"_index":3373,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["aze",{"_index":1449,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["azerbaijan",{"_index":1450,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["b",{"_index":3867,"title":{},"body":{"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["b555787",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["b80520f",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":3109,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["backend",{"_index":1265,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["backticks",{"_index":3131,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bad",{"_index":4692,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["bahamas",{"_index":1452,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bahrain",{"_index":1454,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bangladesh",{"_index":1456,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bar",{"_index":53,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":526,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["bar.component",{"_index":3796,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bar.component.html",{"_index":2852,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":2851,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":2850,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":2860,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:12",{"_index":2857,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:13",{"_index":2859,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:14",{"_index":2858,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:15",{"_index":2856,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:17",{"_index":2886,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:18",{"_index":2875,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:19",{"_index":2861,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:20",{"_index":2876,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:21",{"_index":2887,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:22",{"_index":2862,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":4066,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":4069,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:26",{"_index":4063,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:28",{"_index":4049,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:31",{"_index":2874,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:33",{"_index":4054,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:35",{"_index":2888,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:50",{"_index":4053,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:55",{"_index":4050,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:70",{"_index":4052,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:80",{"_index":4055,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar/form",{"_index":2849,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["bar/wizard",{"_index":3801,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["barbados",{"_index":1458,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["barbuda",{"_index":1438,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bars",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["barthélemy",{"_index":1818,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["base",{"_index":661,"title":{"classes/Base.html":{}},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["base.component",{"_index":2349,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.model",{"_index":2357,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.service.ts",{"_index":851,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["base.service.ts:10",{"_index":3296,"title":{},"body":{"interfaces/PageListInterface.html":{}}}],["base.service.ts:101",{"_index":869,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:105",{"_index":881,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:26",{"_index":894,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:28",{"_index":892,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:29",{"_index":865,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:33",{"_index":896,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:37",{"_index":898,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:41",{"_index":866,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:45",{"_index":867,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:50",{"_index":882,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:57",{"_index":889,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:72",{"_index":884,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:82",{"_index":877,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:93",{"_index":874,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base64",{"_index":4774,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["base:11",{"_index":959,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["base_url",{"_index":2969,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["basecomponent",{"_index":2348,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["based",{"_index":302,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/RadioComponent.html":{}}}],["basic",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["basis",{"_index":4665,"title":{},"body":{"license.html":{}}}],["bc",{"_index":632,"title":{},"body":{"classes/Address.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["bclogobase64",{"_index":4523,"title":{},"body":{"coverage.html":{}}}],["bdi",{"_index":1502,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["beatae",{"_index":1066,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["befc319",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2087,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["begin",{"_index":2930,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["beginning",{"_index":3090,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["behavior",{"_index":95,"title":{},"body":{"classes/AbstractForm.html":{}}}],["being",{"_index":1174,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["bel",{"_index":1461,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["belarus",{"_index":1460,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["belgium",{"_index":1462,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["belize",{"_index":1464,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["below",{"_index":3086,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/RadioComponent.html":{},"additional-documentation/getting-started.html":{}}}],["ben",{"_index":1465,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["benefits",{"_index":3124,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["benin",{"_index":1466,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bermuda",{"_index":1468,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bes",{"_index":1474,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["best",{"_index":3022,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bf3cf23",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["bfa",{"_index":1499,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bg",{"_index":3410,"title":{},"body":{"components/PasswordComponent.html":{}}}],["bgd",{"_index":1455,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bgr",{"_index":1497,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bhr",{"_index":1453,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bhs",{"_index":1451,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bhutan",{"_index":1469,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["big",{"_index":2765,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["bih",{"_index":1479,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bind",{"_index":941,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["bindings",{"_index":2412,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["binds",{"_index":2409,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["birth",{"_index":3439,"title":{},"body":{"classes/Person.html":{}}}],["birthdate",{"_index":3431,"title":{},"body":{"classes/Person.html":{}}}],["bissau",{"_index":1624,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["blanditiis",{"_index":1051,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["blank",{"_index":2883,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["blm",{"_index":1816,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["blob",{"_index":2510,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["blob.size",{"_index":2687,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["block",{"_index":3708,"title":{},"body":{"components/RadioComponent.html":{}}}],["blr",{"_index":1459,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["blue",{"_index":3016,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blueimp",{"_index":2364,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["blur",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["blurevent",{"_index":976,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["blz",{"_index":1463,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bmu",{"_index":1467,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["body",{"_index":154,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["body).subscribe",{"_index":1256,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["boilerplate",{"_index":3091,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bol",{"_index":1470,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bolivarian",{"_index":1949,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bolivia",{"_index":1471,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bonaire",{"_index":1475,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":492,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/accordion",{"_index":3842,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bosnia",{"_index":1480,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["both",{"_index":244,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CheckboxComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["botswana",{"_index":1483,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bottom",{"_index":371,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["bound",{"_index":4644,"title":{},"body":{"index.html":{}}}],["bouvet",{"_index":1485,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["box",{"_index":310,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["bps",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["bra",{"_index":1487,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["brazil",{"_index":1488,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["brb",{"_index":1457,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bread",{"_index":1334,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["breadcrumb",{"_index":1364,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb'},{'name",{"_index":515,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["breadcrumb.component",{"_index":3794,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["breadcrumb.component.html",{"_index":1380,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":1379,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts",{"_index":1362,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb.component.ts:29",{"_index":1381,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts:33",{"_index":1382,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb/core",{"_index":1361,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["break",{"_index":3107,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["breaking",{"_index":4106,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["british",{"_index":1490,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["british_columbia",{"_index":3671,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["brn",{"_index":1494,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["broken",{"_index":4783,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["broswefileinputelement",{"_index":2828,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browse",{"_index":2450,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules.html":{}}}],["browsefileref",{"_index":2382,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browsefilestream",{"_index":2549,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser",{"_index":422,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":2471,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser.actions().sendkeys(protractor.key.enter).perform",{"_index":446,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0",{"_index":429,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0,0",{"_index":460,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get(&#39;/enrolment/profile&#39",{"_index":368,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get('/enrolment/profile",{"_index":426,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.need",{"_index":3105,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["browsermodule",{"_index":841,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["brunei",{"_index":1495,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["brunswick",{"_index":3677,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["btn",{"_index":723,"title":{},"body":{"components/ButtonComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["btnclick",{"_index":706,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bug",{"_index":2650,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["buiding",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3374,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["build:schematics",{"_index":4725,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["building",{"_index":4711,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["builds",{"_index":4713,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["buildtime",{"_index":4543,"title":{},"body":{"coverage.html":{}}}],["built",{"_index":3019,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["bulgaria",{"_index":1498,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["burkina",{"_index":1500,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["burundi",{"_index":1503,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["button",{"_index":56,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":502,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component",{"_index":3855,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["button.component.html",{"_index":699,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.scss",{"_index":698,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.ts",{"_index":4117,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:10",{"_index":4121,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:14",{"_index":4122,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:15",{"_index":4120,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4123,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button/xicon",{"_index":3854,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":501,"title":{"components/ButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttongroup",{"_index":741,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["buttongroupcomponent",{"_index":503,"title":{"components/ButtonGroupComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttons",{"_index":682,"title":{},"body":{"components/ButtonComponent.html":{},"components/RadioComponent.html":{}}}],["buttontype",{"_index":704,"title":{},"body":{"components/ButtonComponent.html":{}}}],["bvt",{"_index":1484,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bwa",{"_index":1482,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bypass",{"_index":899,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bypassguards",{"_index":864,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bytes",{"_index":1145,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["c",{"_index":3116,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["c04b81d",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["c054ca5",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["c347c39",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["c580225",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["c6befdf",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["c8cd6f4",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["c8fb31b",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["ca8bd7c",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["caf",{"_index":1513,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["caicos",{"_index":1929,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["calculateprogresspercentage",{"_index":4045,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["calculates",{"_index":3437,"title":{},"body":{"classes/Person.html":{}}}],["caledonia",{"_index":1760,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["call",{"_index":1249,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["callback",{"_index":2794,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callback(imgel",{"_index":2782,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["called",{"_index":2651,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"miscellaneous/functions.html":{}}}],["caller",{"_index":2012,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["calling",{"_index":351,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callout",{"_index":3177,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["calls",{"_index":4769,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["cambodia",{"_index":1505,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cameroon",{"_index":1507,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["can't",{"_index":2411,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canactivate",{"_index":3753,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivate(route",{"_index":3768,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild",{"_index":3754,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild(next",{"_index":3773,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canada",{"_index":1414,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"license.html":{}}}],["canbypassguards",{"_index":221,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cancel",{"_index":2539,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cancontinue",{"_index":14,"title":{},"body":{"classes/AbstractForm.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["cannotopen",{"_index":1122,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["cannotopenpdf",{"_index":1124,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["canvas",{"_index":2400,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.getcontext('2d",{"_index":2803,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.toblob((blob",{"_index":2685,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cape",{"_index":1509,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["captcha",{"_index":804,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["captcha'},{'name",{"_index":506,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["captcha.component",{"_index":845,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha/audio",{"_index":812,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["captcha_state",{"_index":4576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["captchacomponent",{"_index":505,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["captchadataservice",{"_index":779,"title":{"injectables/CaptchaDataService.html":{}},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"overview.html":{}}}],["captchamodule",{"_index":815,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["capturefileinputelement",{"_index":2830,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefileref",{"_index":2384,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefilestream",{"_index":2551,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["care",{"_index":1251,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["careful",{"_index":4060,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["case",{"_index":364,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/components.html":{}}}],["cases",{"_index":855,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/MaskModel.html":{},"interfaces/PageListInterface.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"additional-documentation/getting-started.html":{}}}],["catch",{"_index":4114,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["catcherror",{"_index":166,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/StreetComponent.html":{}}}],["catcherror(err",{"_index":3968,"title":{},"body":{"components/StreetComponent.html":{}}}],["categories",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["causes",{"_index":2755,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cayman",{"_index":1512,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cb65dc6",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["cck",{"_index":1525,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cd",{"_index":1988,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["center",{"_index":1370,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["central",{"_index":1514,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["chaange",{"_index":4074,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["chad",{"_index":1518,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["chanfges",{"_index":4816,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["change",{"_index":1085,"title":{},"body":{"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changed",{"_index":2647,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["changedetection",{"_index":4040,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy",{"_index":4071,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":4041,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectorref",{"_index":1989,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["changelog",{"_index":4146,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelog.md",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":692,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changes.password",{"_index":3397,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["changes['images",{"_index":2442,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue.length",{"_index":2443,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue",{"_index":2445,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue.length",{"_index":2444,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changing",{"_index":2278,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["character",{"_index":2937,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["characters",{"_index":3272,"title":{},"body":{"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["che",{"_index":1895,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["check",{"_index":309,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["check.service",{"_index":900,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["check.service.ts",{"_index":200,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["check.service.ts:24",{"_index":225,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:25",{"_index":228,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:26",{"_index":229,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:27",{"_index":226,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["checkbox",{"_index":287,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["checkbox'},{'name",{"_index":508,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["checkbox.component.html",{"_index":936,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":935,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":507,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcompletebaseservice",{"_index":849,"title":{"injectables/CheckCompleteBaseService.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["checkconsentmodal",{"_index":250,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checkdigit",{"_index":3548,"title":{},"body":{"components/PhnComponent.html":{}}}],["checked",{"_index":937,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["checkimagedimensions(file",{"_index":2846,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checkimageexists(file",{"_index":2425,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checking",{"_index":902,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["checks",{"_index":294,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"miscellaneous/functions.html":{}}}],["checksum",{"_index":1147,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["child",{"_index":3092,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["chile",{"_index":1520,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["china",{"_index":1522,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["chl",{"_index":1519,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["chn",{"_index":1521,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["choice",{"_index":412,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["christmas",{"_index":1524,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["city",{"_index":584,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["city'},{'name",{"_index":510,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["city.component.html",{"_index":969,"title":{},"body":{"components/CityComponent.html":{}}}],["city.component.scss",{"_index":968,"title":{},"body":{"components/CityComponent.html":{}}}],["city/country/province",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["city_",{"_index":983,"title":{},"body":{"components/CityComponent.html":{}}}],["citycomponent",{"_index":509,"title":{"components/CityComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cityindex",{"_index":3000,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["civ",{"_index":1541,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"classes/MaskModel.html":{},"classes/Person.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"classes/Person.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["classval",{"_index":303,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clean",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":2167,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{}}}],["clearable",{"_index":2308,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["clearbutton",{"_index":2154,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cleardate",{"_index":2148,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cleared",{"_index":2229,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cli",{"_index":4745,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["click",{"_index":488,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{}}}],["click)=\"showfullsizeview",{"_index":4015,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["clickbutton",{"_index":251,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickbutton(classval",{"_index":299,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox",{"_index":252,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox(refnameval",{"_index":307,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickconsentmodalcontinue",{"_index":253,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickevent",{"_index":4119,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["clicking",{"_index":271,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink",{"_index":254,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink(label",{"_index":316,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicks",{"_index":60,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["clickskiptocontent",{"_index":255,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["client",{"_index":149,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["clito",{"_index":4748,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["close",{"_index":3103,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["closes",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["cluster_captchamodule",{"_index":819,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_declarations",{"_index":820,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_exports",{"_index":821,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_providers",{"_index":822,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule",{"_index":3788,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_declarations",{"_index":3789,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_exports",{"_index":3790,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cmr",{"_index":1506,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["coard",{"_index":4650,"title":{},"body":{"index.html":{}}}],["cocos",{"_index":1526,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cod",{"_index":1534,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["code",{"_index":1183,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["code'},{'name",{"_index":546,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["code.component",{"_index":3820,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["code.component.html",{"_index":3606,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.scss",{"_index":3605,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts",{"_index":3604,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:104",{"_index":3627,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:14",{"_index":3612,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:15",{"_index":3611,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:16",{"_index":3615,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:17",{"_index":3618,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:18",{"_index":3614,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:19",{"_index":3610,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:22",{"_index":3619,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:28",{"_index":3637,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:33",{"_index":3621,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:34",{"_index":3620,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:36",{"_index":3636,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:37",{"_index":3631,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:38",{"_index":3635,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:40",{"_index":3629,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:41",{"_index":3609,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:43",{"_index":3630,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:52",{"_index":3623,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:62",{"_index":3622,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:80",{"_index":3628,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:88",{"_index":3624,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:93",{"_index":3625,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:97",{"_index":3626,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code/postal",{"_index":3603,"title":{},"body":{"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["code/validate",{"_index":3851,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["cog",{"_index":1532,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cok",{"_index":1536,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["col",{"_index":1528,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["collected",{"_index":3112,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["collection",{"_index":290,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["colombia",{"_index":1529,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["colour",{"_index":696,"title":{},"body":{"components/ButtonComponent.html":{}}}],["colours",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["columbia",{"_index":3674,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["column",{"_index":3286,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["com",{"_index":1530,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["come",{"_index":3108,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["comes",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":4373,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commas",{"_index":2999,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["commit",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["committed",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["commmon",{"_index":4338,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["common",{"_index":235,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commondatefieldformat",{"_index":2106,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["commondatefieldformat]'},{'name",{"_index":566,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commondayvalidation][ngmodel",{"_index":2285,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["commondayvalidation][ngmodel]'},{'name",{"_index":568,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonformactionbar",{"_index":3282,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["commonimage",{"_index":1088,"title":{"classes/CommonImage.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror",{"_index":1103,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror.cannotopen",{"_index":2592,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.cannotopenpdf",{"_index":2597,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.pdfnotsupported",{"_index":2819,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.toobig",{"_index":2589,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror",{"_index":1125,"title":{"classes/CommonImageProcessingError.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopen",{"_index":2788,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopenpdf",{"_index":2638,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.toobig",{"_index":2729,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimagescalefactors",{"_index":1148,"title":{"interfaces/CommonImageScaleFactors.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimagescalefactorsimpl",{"_index":1152,"title":{"classes/CommonImageScaleFactorsImpl.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimagescalefactorsimpl(1",{"_index":2562,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonlogger",{"_index":1178,"title":{"injectables/CommonLogger.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["commonlogmessage",{"_index":1170,"title":{"interfaces/CommonLogMessage.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["commonmodule",{"_index":847,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["commonvalidatebcpostal",{"_index":4025,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["commonvalidatebcpostal]'},{'name",{"_index":570,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatename",{"_index":4035,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["commonvalidatename]'},{'name",{"_index":572,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonyearvalidate",{"_index":4128,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["commonyearvalidate][ngmodel",{"_index":574,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["comoros",{"_index":1531,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["compare",{"_index":3549,"title":{},"body":{"components/PhnComponent.html":{}}}],["comparing",{"_index":4143,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["compat",{"_index":2759,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compatible",{"_index":4161,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compilation",{"_index":4753,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compile",{"_index":4279,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["compiles",{"_index":4722,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compiliation",{"_index":2422,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compiling",{"_index":4716,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["complete",{"_index":272,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["completed",{"_index":880,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["completeness",{"_index":903,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["complex",{"_index":1366,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["compliance",{"_index":4655,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":3058,"title":{},"body":{"components/HeaderComponent.html":{}}}],["compodoccrc.json",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":313,"title":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["component's",{"_index":3164,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["component_template",{"_index":497,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["componentlist",{"_index":3856,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["components",{"_index":407,"title":{"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["components/accordion/accordion.component",{"_index":3843,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/address/address.component",{"_index":3826,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button",{"_index":3831,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button/button.component",{"_index":3833,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":3834,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/city.component",{"_index":3829,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/consent",{"_index":3835,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/core",{"_index":3793,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/country/country.component",{"_index":3827,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date",{"_index":3809,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date.component",{"_index":3806,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/day",{"_index":3807,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/year",{"_index":3811,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/datepicker/datepicker.component",{"_index":3813,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":3822,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/file",{"_index":3815,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/form",{"_index":3795,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/full",{"_index":3848,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/header/header.component",{"_index":3850,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/models",{"_index":3865,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["components/name/name.component",{"_index":3837,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/name/validate",{"_index":3844,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/page",{"_index":3797,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/password/password.component",{"_index":3799,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/phn.component",{"_index":3847,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phone",{"_index":3838,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/postal",{"_index":3819,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/province/province.component",{"_index":3828,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/radio/radio.component",{"_index":3840,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/sin.component",{"_index":3846,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/street.component",{"_index":3830,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/thumbnail/thumbnail.component",{"_index":3817,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/toggle/toggle.component",{"_index":3825,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/wizard",{"_index":3800,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/xicon",{"_index":3853,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["compose",{"_index":4768,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["computer",{"_index":3098,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["concatenates",{"_index":3450,"title":{},"body":{"classes/Person.html":{}}}],["conditions",{"_index":4667,"title":{},"body":{"license.html":{}}}],["config",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["config.ts",{"_index":4538,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configurable",{"_index":4766,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["configuration",{"_index":1371,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["configure",{"_index":1248,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{}}}],["configured",{"_index":836,"title":{},"body":{"modules/CaptchaModule.html":{},"changelog.html":{}}}],["configures",{"_index":4625,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":4809,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["confirm",{"_index":3741,"title":{},"body":{"components/RadioComponent.html":{}}}],["congo",{"_index":1533,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["connectivity",{"_index":1224,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["consectetur",{"_index":1014,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["consent",{"_index":295,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["consentmodal",{"_index":3136,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["consentmodalcomponent",{"_index":511,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["considered",{"_index":617,"title":{},"body":{"classes/Address.html":{}}}],["consistency",{"_index":686,"title":{},"body":{"components/ButtonComponent.html":{}}}],["consistent",{"_index":1235,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PageFrameworkComponent.html":{}}}],["console",{"_index":188,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["console.error('an",{"_index":1263,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error('geocoder",{"_index":3005,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["console.error('mspmaintenanceservice",{"_index":3183,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(`backend",{"_index":1267,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error(`mspmaintenanceservice",{"_index":3184,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(msg",{"_index":1246,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log",{"_index":181,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["console.log(\"error",{"_index":2823,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('cancel",{"_index":2542,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('completed",{"_index":2600,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('error",{"_index":2578,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["console.log('file",{"_index":2725,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('files",{"_index":2557,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('fileuploader",{"_index":2441,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('handleerror",{"_index":3182,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log('http",{"_index":192,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.log('image.name",{"_index":2661,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('loading",{"_index":2772,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('log",{"_index":2841,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('logservice",{"_index":1257,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log('scaled",{"_index":4012,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["console.log('start",{"_index":2677,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('taplog",{"_index":3967,"title":{},"body":{"components/StreetComponent.html":{}}}],["console.log('this",{"_index":2784,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`compare",{"_index":2428,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`file",{"_index":2711,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`image",{"_index":2673,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`max",{"_index":2814,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`this",{"_index":2431,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(error",{"_index":2844,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(event",{"_index":963,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["console.log(response",{"_index":2843,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(this.spaenvres",{"_index":3198,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log(var1",{"_index":2602,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["const",{"_index":173,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["constants",{"_index":359,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["constructor(controldir",{"_index":978,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["constructor(errorcode",{"_index":1159,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["constructor(form",{"_index":1987,"title":{},"body":{"components/DateComponent.html":{}}}],["constructor(http",{"_index":116,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["constructor(httpclient",{"_index":785,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["constructor(private",{"_index":806,"title":{},"body":{"injectables/CaptchaDataService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(protected",{"_index":85,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["constructor(public",{"_index":1140,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(router",{"_index":21,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(viewcontainerref",{"_index":3994,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["constructor(wfactor",{"_index":1153,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["consume",{"_index":4815,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["contact",{"_index":3129,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["contain",{"_index":2498,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["container",{"_index":1331,"title":{"classes/Container.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["container.length",{"_index":4104,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["container[0].scrollleft",{"_index":4111,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["contains",{"_index":3363,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["content",{"_index":278,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["contentchild",{"_index":2328,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contentchild('uploadinstruction",{"_index":2389,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contents",{"_index":3062,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contenttype",{"_index":1093,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["context",{"_index":4553,"title":{},"body":{"coverage.html":{}}}],["continue",{"_index":16,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{}}}],["continuebutton",{"_index":247,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["contributing",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["contributing.md",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["control",{"_index":2165,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}}}],["control.value",{"_index":2294,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}}}],["controlcontainer",{"_index":701,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["controldir",{"_index":970,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["controldir.valueaccessor",{"_index":1082,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["controlvalueaccessor",{"_index":734,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["convert",{"_index":2005,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["convertdatetosimpledate",{"_index":2149,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertdatetosimpledate(date",{"_index":2195,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertroutetotitle",{"_index":1337,"title":{},"body":{"classes/Container.html":{}}}],["convertroutetotitle(routepath",{"_index":1342,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["converts",{"_index":1344,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["convertsimpledatetodate",{"_index":2150,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertsimpledatetodate(date",{"_index":2197,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cook",{"_index":1537,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["copied",{"_index":389,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["copies",{"_index":4615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copy",{"_index":590,"title":{},"body":{"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["copy(object",{"_index":611,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{}}}],["copying",{"_index":3132,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["copylicense",{"_index":4509,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copylicense(_options",{"_index":4614,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copyright",{"_index":4651,"title":{},"body":{"license.html":{}}}],["copyversionfile",{"_index":4548,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copyversionfile(options",{"_index":4594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":514,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{},"additional-documentation/getting-started.html":{}}}],["core.module.ts",{"_index":3792,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["corebreadcrumb",{"_index":1367,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["corebreadcrumbcomponent",{"_index":513,"title":{"components/CoreBreadcrumbComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["corporis",{"_index":1062,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["correct",{"_index":4431,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["correctly",{"_index":3756,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["correspond",{"_index":245,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponding",{"_index":353,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponds",{"_index":399,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["costa",{"_index":1539,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["could've",{"_index":2523,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["counter",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["countlength",{"_index":256,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countlength(refnameval",{"_index":323,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countries",{"_index":1412,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["country",{"_index":382,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["country'},{'name",{"_index":517,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["country.component.html",{"_index":1385,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["country.component.scss",{"_index":1384,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["country/country.component",{"_index":3670,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["country_",{"_index":1393,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["country_list",{"_index":1389,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"coverage.html":{}}}],["countrycode",{"_index":1413,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["countrycomponent",{"_index":516,"title":{"components/CountryComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countrylist",{"_index":1386,"title":{"interfaces/CountryList.html":{}},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"coverage.html":{}}}],["counts",{"_index":325,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["coverage",{"_index":4439,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpv",{"_index":1508,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["create",{"_index":681,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["created",{"_index":2407,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["createifmissing",{"_index":4531,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createifmissing(host",{"_index":4619,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":4737,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["creating",{"_index":852,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cri",{"_index":1538,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["criteria",{"_index":3383,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["criteria.test",{"_index":4031,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["criteriamsg",{"_index":3316,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["croatia",{"_index":1545,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["crumbs",{"_index":1335,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["css",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":2802,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cub",{"_index":1546,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cuba",{"_index":1547,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cunha",{"_index":1824,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cupiditate",{"_index":1070,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["curaçao",{"_index":1549,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["curr",{"_index":2751,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["current",{"_index":2070,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["currently",{"_index":297,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["currentpage",{"_index":2799,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["currentyear",{"_index":4135,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["custom",{"_index":409,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["customize",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["cutoffdate",{"_index":3152,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["cuw",{"_index":1548,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cxr",{"_index":1523,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cycles",{"_index":2267,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cym",{"_index":1511,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cyp",{"_index":1550,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cyprus",{"_index":1551,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cze",{"_index":1552,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["czech",{"_index":1553,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["côte",{"_index":1542,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["d",{"_index":2726,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{}}}],["d.ts",{"_index":4729,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["d4f0e3b",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["d5bf00b",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["d5f44c4",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["d[abceghj",{"_index":606,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["d\\'ivoire",{"_index":1543,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["d]+/.test",{"_index":2124,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["da",{"_index":1823,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["danger",{"_index":439,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/PasswordComponent.html":{}}}],["darussalam",{"_index":1496,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dashboard",{"_index":1375,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["data",{"_index":191,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["data.service",{"_index":846,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["data.service.ts",{"_index":781,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":3783,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:11",{"_index":3786,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:12",{"_index":3784,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:16",{"_index":786,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:21",{"_index":793,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:29",{"_index":797,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:40",{"_index":789,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:9",{"_index":3785,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["datachange",{"_index":748,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/ToggleComponent.html":{}}}],["dataservice",{"_index":2402,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dataurl",{"_index":2474,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["date",{"_index":1212,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["date'},{'name",{"_index":519,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["date(date.year",{"_index":2231,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.component.html",{"_index":1970,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["date.component.scss",{"_index":1969,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["date.component.ts",{"_index":3868,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["date.day",{"_index":2233,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getdate",{"_index":2228,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getfullyear",{"_index":2226,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getmonth",{"_index":2227,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.interface",{"_index":2054,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{}}}],["date.interface.ts",{"_index":3863,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["date.month",{"_index":2232,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.year",{"_index":2230,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date/date.component",{"_index":2223,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datechange",{"_index":1986,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datecomponent",{"_index":518,"title":{"components/DateComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateerrormsg",{"_index":1994,"title":{"interfaces/DateErrorMsg.html":{}},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{}}}],["datefieldformatdirective",{"_index":565,"title":{"directives/DateFieldFormatDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateformat",{"_index":2155,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["dateobj",{"_index":1211,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["dateofbirth",{"_index":3423,"title":{},"body":{"classes/Person.html":{}}}],["dateofbirthshort",{"_index":3427,"title":{},"body":{"classes/Person.html":{}}}],["datepicker",{"_index":2130,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datepicker'},{'name",{"_index":521,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["datepicker.component.html",{"_index":2143,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepicker.component.scss",{"_index":2142,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickercomponent",{"_index":520,"title":{"components/DatepickerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datepickeroptions",{"_index":2144,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickersizes",{"_index":2145,"title":{},"body":{"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datepickersizes.default",{"_index":2190,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickersizes.mini",{"_index":2241,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["dates",{"_index":2177,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["datetime",{"_index":2218,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["day",{"_index":2010,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{}}}],["day_",{"_index":2029,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["dayinmonth",{"_index":2301,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["daylabelforid",{"_index":1971,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["dayoutofrange",{"_index":2055,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dayref",{"_index":1972,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["days",{"_index":2026,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["daysinmonth",{"_index":2297,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["dayvalidationdirective",{"_index":567,"title":{"directives/DayValidationDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dbb94e1",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["dd29a60",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":4767,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["debouncetime",{"_index":2941,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/StreetComponent.html":{}}}],["debouncetime(500",{"_index":3963,"title":{},"body":{"components/StreetComponent.html":{}}}],["december",{"_index":2046,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["declarations",{"_index":817,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["decorators",{"_index":37,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["deeper",{"_index":4689,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["default",{"_index":43,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["defaultcolor",{"_index":2853,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["defaults",{"_index":2967,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["defining",{"_index":2258,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["delay",{"_index":2341,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delete",{"_index":2825,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["delete(evt",{"_index":3999,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage",{"_index":3993,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage(mspimage",{"_index":2834,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["democratic",{"_index":1535,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["denmark",{"_index":1555,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["denominator",{"_index":4088,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["dependencies",{"_index":666,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["dependency",{"_index":4777,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["deployed",{"_index":837,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["deployurl",{"_index":3059,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deprecated",{"_index":728,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["description",{"_index":106,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["deserunt",{"_index":1078,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["design",{"_index":825,"title":{},"body":{"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["designed",{"_index":3088,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["designs",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["detailed",{"_index":4685,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["detect",{"_index":2438,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["detection",{"_index":2266,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["detector",{"_index":2437,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["determine",{"_index":621,"title":{},"body":{"classes/Address.html":{},"directives/DayValidationDirective.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{}}}],["determines",{"_index":55,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["deu",{"_index":1602,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dev",{"_index":915,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{}}}],["development",{"_index":3454,"title":{"additional-documentation/local-development.html":{}},"body":{"classes/Person.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["device",{"_index":3097,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["devkit/schematics",{"_index":4747,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["df26aa1",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["df678e6",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["diff",{"_index":3479,"title":{},"body":{"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["differ",{"_index":4812,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["different",{"_index":4791,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["digit",{"_index":3551,"title":{},"body":{"components/PhnComponent.html":{}}}],["directive",{"_index":495,"title":{"directives/DateFieldFormatDirective.html":{},"directives/DayValidationDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["directive's",{"_index":3165,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["directives",{"_index":564,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"overview.html":{}}}],["directly",{"_index":628,"title":{},"body":{"classes/Address.html":{},"additional-documentation/local-development/components.html":{}}}],["disablebefore",{"_index":2187,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disabled",{"_index":10,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["disables",{"_index":32,"title":{},"body":{"classes/AbstractForm.html":{}}}],["disablesince",{"_index":2156,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disableuntil",{"_index":2157,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disabling",{"_index":3085,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["disiplay",{"_index":3975,"title":{},"body":{"components/StreetComponent.html":{}}}],["display",{"_index":1333,"title":{},"body":{"classes/Container.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["display=\"table",{"_index":3702,"title":{},"body":{"components/RadioComponent.html":{}}}],["display='inline",{"_index":3707,"title":{},"body":{"components/RadioComponent.html":{}}}],["displayed",{"_index":298,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["displayerr",{"_index":3264,"title":{},"body":{"components/NameComponent.html":{}}}],["displayerrors",{"_index":3237,"title":{},"body":{"components/NameComponent.html":{}}}],["displaying",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["displaymask",{"_index":3563,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["dist",{"_index":2334,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/components.html":{}}}],["dist/common",{"_index":4808,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["distinctio",{"_index":1041,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["distinctuntilchanged",{"_index":3959,"title":{},"body":{"components/StreetComponent.html":{}}}],["distributed",{"_index":4664,"title":{},"body":{"license.html":{}}}],["divide",{"_index":3542,"title":{},"body":{"components/PhnComponent.html":{}}}],["divisible",{"_index":3907,"title":{},"body":{"components/SinComponent.html":{}}}],["dji",{"_index":1556,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["djibouti",{"_index":1557,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dma",{"_index":1558,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dnk",{"_index":1554,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dob",{"_index":3443,"title":{},"body":{"classes/Person.html":{}}}],["dobdt",{"_index":3477,"title":{},"body":{"classes/Person.html":{}}}],["dobformat",{"_index":3424,"title":{},"body":{"classes/Person.html":{}}}],["docinitparams",{"_index":2804,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["docs",{"_index":3134,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["document",{"_index":3232,"title":{},"body":{"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["document.body.scrollheight",{"_index":430,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["document.createelement('canvas",{"_index":2800,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.createelement('img",{"_index":2775,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.getelementsbyclassname('horizontal",{"_index":4102,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["document:paste",{"_index":3329,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["document:paste(event",{"_index":3347,"title":{},"body":{"components/PasswordComponent.html":{}}}],["documentation",{"_index":4182,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["documents",{"_index":2398,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["doing",{"_index":731,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dolor",{"_index":1011,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["dom",{"_index":468,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dominica",{"_index":1559,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dominican",{"_index":1560,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["don't",{"_index":943,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{}}}],["don'ts",{"_index":4687,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["done",{"_index":2524,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["don’t",{"_index":3101,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["dos",{"_index":4686,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["double",{"_index":3292,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"additional-documentation/getting-started.html":{}}}],["down",{"_index":370,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["drag",{"_index":2451,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragover",{"_index":2538,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream",{"_index":2536,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream.pipe(map(evt",{"_index":2540,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["drop",{"_index":2459,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["dropdown",{"_index":327,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"changelog.html":{}}}],["dropdown'},{'name",{"_index":522,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dropdown.component.html",{"_index":2304,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2303,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":380,"title":{"components/DropdownComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["drops",{"_index":2453,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream",{"_index":2544,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream.pipe",{"_index":2546,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropzone",{"_index":2380,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ducimus",{"_index":1065,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["due",{"_index":1275,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dummy",{"_index":3455,"title":{},"body":{"classes/Person.html":{}}}],["duplicate",{"_index":333,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["dutch",{"_index":1863,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dynamic",{"_index":4559,"title":{},"body":{"dependencies.html":{}}}],["dza",{"_index":1424,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["d{3",{"_index":3588,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["d{4",{"_index":3589,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["e",{"_index":3117,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["e.g",{"_index":150,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["e2271b7",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":237,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["e35f16b",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["e458627",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["e485f67",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["e762fc1",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["e81927b",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["ea/pa",{"_index":2531,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["each",{"_index":578,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["earlier",{"_index":2525,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easier",{"_index":693,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["easily",{"_index":2513,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easy",{"_index":2885,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ecu",{"_index":1561,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ecuador",{"_index":1562,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["edward",{"_index":3687,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["egy",{"_index":1563,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["egypt",{"_index":1564,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["eib",{"_index":2701,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["el",{"_index":1566,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["element",{"_index":423,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["element's",{"_index":2480,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element(by.css('.form",{"_index":268,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('.skip",{"_index":277,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('common",{"_index":457,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('div[class=\"modal",{"_index":455,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click",{"_index":454,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[ng",{"_index":449,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[role=\"combobox\"]`)).sendkeys(data",{"_index":445,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`ng",{"_index":440,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext('span.ng",{"_index":443,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(`button[class*=\"${classval",{"_index":451,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(label",{"_index":463,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.id(await",{"_index":434,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.css(`input[ng",{"_index":461,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.csscontainingtext('lib",{"_index":432,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["elementref",{"_index":719,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["elements",{"_index":41,"title":{},"body":{"classes/AbstractForm.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["eligibility",{"_index":3122,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["elit",{"_index":1016,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["embedded",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["emirates",{"_index":1936,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["emit",{"_index":2274,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/MaskModel.html":{},"changelog.html":{}}}],["emits",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":641,"title":{},"body":{"classes/Address.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/StreetComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["encapsulation",{"_index":3288,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["enclose",{"_index":2871,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["encoding",{"_index":4775,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["encountered",{"_index":2764,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["encourage",{"_index":355,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["encryptedanswer",{"_index":796,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["end",{"_index":4798,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["ensure",{"_index":1252,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{}}}],["enter",{"_index":415,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{}}}],["entered",{"_index":3100,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["entering",{"_index":3974,"title":{},"body":{"components/StreetComponent.html":{}}}],["entries",{"_index":2423,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["entry",{"_index":4264,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["entry.model",{"_index":2352,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["enum",{"_index":1114,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["enumerations",{"_index":4575,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":4708,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["env",{"_index":3072,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["environment",{"_index":916,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["equation",{"_index":2615,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["equatorial",{"_index":1569,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["equivalent",{"_index":2185,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["eri",{"_index":1571,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["eritrea",{"_index":1572,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["erorr",{"_index":3188,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["err",{"_index":3935,"title":{},"body":{"components/StreetComponent.html":{}}}],["errmsg",{"_index":2898,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errmsg.criteria",{"_index":3420,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.minlength",{"_index":3419,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.pattern",{"_index":2963,"title":{},"body":{"components/FullNameComponent.html":{}}}],["errmsg.required",{"_index":2962,"title":{},"body":{"components/FullNameComponent.html":{},"components/PasswordComponent.html":{}}}],["error",{"_index":147,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/ButtonComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('this",{"_index":2787,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.error",{"_index":1258,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.error.message",{"_index":1264,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.errorcode",{"_index":2588,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.errordescription",{"_index":2599,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image",{"_index":2591,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image.name",{"_index":2594,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.message",{"_index":1227,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.name",{"_index":1229,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.rawimagefile",{"_index":2593,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.rawimagefile.name",{"_index":2595,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.status",{"_index":1268,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.statustext",{"_index":1231,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error_fetch_img",{"_index":4585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_verify",{"_index":4588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":1141,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordescription",{"_index":1142,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["errordescription.pdf.js",{"_index":1129,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordocument",{"_index":2401,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errorevent",{"_index":1260,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["errormessage",{"_index":1201,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errormessagerequired",{"_index":746,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["errormessages",{"_index":1983,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errormessages.dayoutofrange",{"_index":2098,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.invalidvalue",{"_index":2103,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.nofuturedatesallowed",{"_index":2102,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.nopastdatesallowed",{"_index":2101,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.required",{"_index":2097,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantfuture",{"_index":2100,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantpast",{"_index":2099,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errorname",{"_index":1228,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errorreason",{"_index":2796,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors",{"_index":1221,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["errors.pipe",{"_index":2749,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan",{"_index":2763,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan((acc",{"_index":2762,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["esh",{"_index":1959,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["esp",{"_index":1879,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["especially",{"_index":3095,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["esse",{"_index":1034,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["est",{"_index":1573,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["estonia",{"_index":1574,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["et",{"_index":1053,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["etc",{"_index":384,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["eth",{"_index":1575,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ethiopia",{"_index":1576,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["eum",{"_index":1045,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["eustatius",{"_index":1477,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ev",{"_index":3051,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ev.url",{"_index":4079,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["even",{"_index":2255,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["evenly",{"_index":4093,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["event",{"_index":718,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["event.datatransfer.files",{"_index":2548,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.item",{"_index":3982,"title":{},"body":{"components/StreetComponent.html":{}}}],["event.item.street",{"_index":3983,"title":{},"body":{"components/StreetComponent.html":{}}}],["event.jsdate",{"_index":2273,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["event.keycode",{"_index":3977,"title":{},"body":{"components/StreetComponent.html":{}}}],["event.preventdefault",{"_index":2547,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.stoppropagation",{"_index":2865,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["event.target",{"_index":2118,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["event.target.value",{"_index":3263,"title":{},"body":{"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["event.target['files",{"_index":2554,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eventemitter",{"_index":713,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["eventemitter(false",{"_index":2115,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["events",{"_index":3973,"title":{},"body":{"components/StreetComponent.html":{}}}],["everything",{"_index":1208,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["evt",{"_index":2716,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/RadioComponent.html":{},"components/ThumbnailComponent.html":{}}}],["evt.key",{"_index":2610,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.preventdefault",{"_index":2543,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.result",{"_index":2718,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["exactly",{"_index":2570,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["example",{"_index":215,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["example.component.ts",{"_index":3760,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["example/path.../node/v8.9.4/lib/node_modules/moh",{"_index":4813,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["examples",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["exampletodo",{"_index":4750,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["exceeds",{"_index":2494,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["except",{"_index":1233,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/NameComponent.html":{},"license.html":{}}}],["exception",{"_index":3281,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["exclusive",{"_index":4582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":4110,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["exercitationem",{"_index":1058,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["exist",{"_index":873,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"additional-documentation/local-development/components.html":{}}}],["existing",{"_index":4617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exists",{"_index":2065,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["expand",{"_index":489,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expandtext",{"_index":480,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expect",{"_index":4706,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["experimental",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["expiry",{"_index":805,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["exported",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":818,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["express",{"_index":4669,"title":{},"body":{"license.html":{}}}],["extend",{"_index":580,"title":{},"body":{"classes/Address.html":{},"classes/Base.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["extends",{"_index":934,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/getting-started.html":{}}}],["extra",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":2496,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eye",{"_index":3386,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["f103e7c",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["f334faf",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["f603e99",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["fa",{"_index":3385,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["facere",{"_index":1029,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["facets",{"_index":4792,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["facing",{"_index":3187,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["failed",{"_index":143,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["fails",{"_index":2421,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["falkland",{"_index":1578,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["false",{"_index":45,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{}}}],["family",{"_index":3554,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["faroe",{"_index":1581,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["faso",{"_index":1501,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["favicon_base64",{"_index":4521,"title":{},"body":{"coverage.html":{}}}],["favour",{"_index":4075,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["fbc012d",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["fc7fe65",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["feature.properties",{"_index":2995,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["features",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["february",{"_index":2037,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["februrary",{"_index":2028,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["federated",{"_index":1733,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["federation",{"_index":1813,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["feedback",{"_index":3407,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["fetchaudio",{"_index":782,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchaudio(apibaseurl",{"_index":787,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetchdata",{"_index":783,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchdata(apibaseurl",{"_index":791,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetching_captcha_img",{"_index":4583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["field",{"_index":421,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"coverage.html":{}}}],["fields",{"_index":614,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fiji",{"_index":1583,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["file's",{"_index":2473,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.name",{"_index":2432,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.naturalheight",{"_index":2847,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file_upload",{"_index":2628,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filecontent",{"_index":1094,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["filecontrol",{"_index":2416,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileindex",{"_index":2622,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filelist",{"_index":2560,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filename",{"_index":2467,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/functions.html":{}}}],["fileobservable",{"_index":2656,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filereader",{"_index":2660,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["files",{"_index":2558,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["files.length",{"_index":2559,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop",{"_index":2545,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop).pipe",{"_index":2555,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesize",{"_index":2691,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesizeunit",{"_index":2692,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadbrowse",{"_index":2418,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploader",{"_index":4396,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["fileuploadercomponent",{"_index":523,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadercomponent.checkimageexists(mspimage",{"_index":2565,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadermsg",{"_index":2324,"title":{"interfaces/FileUploaderMsg.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["filled",{"_index":615,"title":{},"body":{"classes/Address.html":{}}}],["fills",{"_index":2024,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["filter",{"_index":2338,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"classes/Person.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter((mspimage",{"_index":2573,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(ev",{"_index":3050,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter(files",{"_index":2556,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(x",{"_index":1359,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["fin",{"_index":1584,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["final",{"_index":2519,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finaldigit",{"_index":3552,"title":{},"body":{"components/PhnComponent.html":{}}}],["finally",{"_index":2527,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["find",{"_index":2415,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["fine",{"_index":1214,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["finish",{"_index":3102,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["finishes",{"_index":2478,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finland",{"_index":1585,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["first",{"_index":335,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["first/middle/last",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":2899,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["firstnamelabel",{"_index":2905,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["fix",{"_index":2369,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fixed",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":2761,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fji",{"_index":1582,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["flag",{"_index":3186,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["flags",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["flatmap",{"_index":2339,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flk",{"_index":1577,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["flow",{"_index":3748,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["fluid",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":760,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["focus",{"_index":633,"title":{},"body":{"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["folder",{"_index":4701,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["folders",{"_index":4375,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["followed",{"_index":2932,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["following",{"_index":3864,"title":{},"body":{"interfaces/SimpleDate.html":{},"additional-documentation/local-development/components.html":{}}}],["fonts",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["footer\"]')).element(by.css('button[type=\"submit\"]')).click",{"_index":456,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["force",{"_index":2020,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["forceoverwrite",{"_index":4608,"title":{},"body":{"miscellaneous/functions.html":{}}}],["forcerender",{"_index":2439,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["forget",{"_index":1254,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["form",{"_index":11,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["form.ts",{"_index":7,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["form.ts:10",{"_index":39,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:13",{"_index":31,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:15",{"_index":46,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:17",{"_index":24,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:30",{"_index":54,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:36",{"_index":72,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:44",{"_index":66,"title":{},"body":{"classes/AbstractForm.html":{}}}],["formactionbar",{"_index":2868,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{}}}],["formactionbarcomponent",{"_index":525,"title":{"components/FormActionBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":2174,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{}}}],["format.directive",{"_index":3810,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["format.directive.ts",{"_index":2105,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:11",{"_index":2113,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["format.directive.ts:8",{"_index":2109,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["formatdateofbirth",{"_index":3428,"title":{},"body":{"classes/Person.html":{}}}],["formats",{"_index":2988,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["formcontrol",{"_index":2222,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["former",{"_index":1705,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["formerrors",{"_index":257,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["forms",{"_index":3234,"title":{},"body":{"components/NameComponent.html":{},"changelog.html":{}}}],["formsmodule",{"_index":844,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["formsubmitbar",{"_index":2866,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formsubmitbarcomponent",{"_index":527,"title":{"components/FormSubmitBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forroot",{"_index":828,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["forwardref",{"_index":702,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"directives/YearValidateDirective.html":{}}}],["found",{"_index":212,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"additional-documentation/getting-started.html":{}}}],["foundation",{"_index":4697,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fpc",{"_index":4270,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fpcare",{"_index":3279,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["fra",{"_index":1586,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["framework",{"_index":2884,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["framework'},{'name",{"_index":534,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["framework.component",{"_index":3798,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["framework.component.html",{"_index":3291,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.scss",{"_index":3290,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts",{"_index":3278,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["framework.component.ts:29",{"_index":3293,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts:31",{"_index":3294,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework/page",{"_index":3277,"title":{},"body":{"components/PageFrameworkComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["france",{"_index":1587,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["free",{"_index":680,"title":{},"body":{"components/ButtonComponent.html":{}}}],["freedom",{"_index":3118,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["french",{"_index":1589,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["friendly",{"_index":2511,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fro",{"_index":1580,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["fromevent",{"_index":2335,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.browsefileref.nativeelement",{"_index":2550,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.capturefileref.nativeelement",{"_index":2552,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.dropzone.nativeelement",{"_index":2537,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.imageplaceholderref.nativeelement",{"_index":2605,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.selectfilelabelref.nativeelement",{"_index":2607,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.uploadinstructionref.nativeelement",{"_index":2608,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fsm",{"_index":1731,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["fugiat",{"_index":1037,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["full",{"_index":529,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["fulladdress",{"_index":2966,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fullname",{"_index":3456,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["fullname.split",{"_index":3472,"title":{},"body":{"classes/Person.html":{}}}],["fullnamecomponent",{"_index":528,"title":{"components/FullNameComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fullnameerrormsg",{"_index":2922,"title":{"interfaces/FullNameErrorMsg.html":{}},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["fullsizeviewmodal",{"_index":3151,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["function",{"_index":650,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["functionality",{"_index":236,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["functiong",{"_index":3532,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["functions",{"_index":4062,"title":{"miscellaneous/functions.html":{}},"body":{"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{}}}],["futuna",{"_index":1958,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["future",{"_index":691,"title":{},"body":{"components/ButtonComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["g",{"_index":4742,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["gab",{"_index":1596,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gabon",{"_index":1597,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gambia",{"_index":1599,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gbr",{"_index":1937,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["generally",{"_index":61,"title":{},"body":{"classes/AbstractForm.html":{}}}],["generate",{"_index":4416,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["generated",{"_index":4598,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generateskiptocontentlink",{"_index":3031,"title":{},"body":{"components/HeaderComponent.html":{}}}],["generation",{"_index":4354,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["geo",{"_index":1600,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["geoaddressresult",{"_index":2964,"title":{"interfaces/GeoAddressResult.html":{}},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/StreetComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoder",{"_index":3950,"title":{},"body":{"components/StreetComponent.html":{}}}],["geocoderservice",{"_index":2968,"title":{"injectables/GeocoderService.html":{}},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/StreetComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["georgia",{"_index":1601,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["germany",{"_index":1603,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["get(url",{"_index":124,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["getactiveindex",{"_index":4046,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getactiveindex(url",{"_index":4051,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getage",{"_index":3425,"title":{},"body":{"classes/Person.html":{}}}],["getapplicationid",{"_index":1322,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getcontinuebutton",{"_index":258,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getdateofbirthshort",{"_index":3441,"title":{},"body":{"classes/Person.html":{}}}],["getformatdateofbirth",{"_index":3445,"title":{},"body":{"classes/Person.html":{}}}],["gethttpoptions",{"_index":158,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{}}}],["getisbconly",{"_index":634,"title":{},"body":{"classes/Address.html":{}}}],["getmaxlenasnumber",{"_index":3260,"title":{},"body":{"components/NameComponent.html":{}}}],["getname",{"_index":3448,"title":{},"body":{"classes/Person.html":{}}}],["getnamecomponent",{"_index":242,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponent(labelname",{"_index":330,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval",{"_index":243,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval(labelname",{"_index":343,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnumericvalue",{"_index":1978,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["getnumericvalue(value",{"_index":2003,"title":{},"body":{"components/DateComponent.html":{}}}],["getpackageversionfrompackagejson",{"_index":4540,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpackageversionfrompackagejson(tree",{"_index":4610,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpasswordstrength",{"_index":3322,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["getpasswordstrength(password",{"_index":3349,"title":{},"body":{"components/PasswordComponent.html":{}}}],["getprogramname",{"_index":1326,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["gets",{"_index":3953,"title":{},"body":{"components/StreetComponent.html":{},"miscellaneous/functions.html":{}}}],["getstarturl",{"_index":222,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["getting",{"_index":4144,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["geturlindex",{"_index":859,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["geturlindex(url",{"_index":868,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["getvalue",{"_index":1006,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["ggy",{"_index":1620,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gha",{"_index":1604,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ghana",{"_index":1605,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gib",{"_index":1606,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["gibraltar",{"_index":1607,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gif",{"_index":2458,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gigantic",{"_index":2580,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gin",{"_index":1622,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["git",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["gitcommit",{"_index":4544,"title":{},"body":{"coverage.html":{}}}],["githooks",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":390,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"index.html":{}}}],["give",{"_index":2663,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["given",{"_index":346,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["gives",{"_index":1130,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["glp",{"_index":1614,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gmb",{"_index":1598,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gnb",{"_index":1623,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gnq",{"_index":1568,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["go",{"_index":352,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["goes",{"_index":4811,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["going",{"_index":2768,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["good",{"_index":3280,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{}}}],["gov",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["governing",{"_index":4672,"title":{},"body":{"license.html":{}}}],["grab",{"_index":334,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["grc",{"_index":1608,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["grd",{"_index":1612,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["greece",{"_index":1609,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["greenland",{"_index":1611,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["grenada",{"_index":1613,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["grenadines",{"_index":1838,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["grl",{"_index":1610,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["group",{"_index":736,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/RadioComponent.html":{}}}],["group'},{'name",{"_index":504,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["group.component",{"_index":3832,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["group.component.html",{"_index":738,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.scss",{"_index":737,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":727,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:38",{"_index":750,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:39",{"_index":754,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:40",{"_index":755,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:41",{"_index":751,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:42",{"_index":752,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:43",{"_index":753,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:44",{"_index":756,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:45",{"_index":770,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:47",{"_index":768,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:48",{"_index":749,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:55",{"_index":764,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:61",{"_index":757,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:66",{"_index":759,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:70",{"_index":762,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:74",{"_index":767,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group/button",{"_index":726,"title":{},"body":{"components/ButtonGroupComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["growing",{"_index":4645,"title":{},"body":{"index.html":{}}}],["gtm",{"_index":1618,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guadeloupe",{"_index":1615,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guam",{"_index":1617,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guard",{"_index":201,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service.ts",{"_index":3746,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:52",{"_index":3764,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:58",{"_index":3771,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:66",{"_index":3774,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:73",{"_index":3766,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guards",{"_index":913,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["guatemala",{"_index":1619,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guernsey",{"_index":1621,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guessable",{"_index":3351,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guesses",{"_index":3353,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guf",{"_index":1588,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guiana",{"_index":1590,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guide",{"_index":4640,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":826,"title":{},"body":{"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["guinea",{"_index":1570,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gum",{"_index":1616,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guy",{"_index":1625,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guyana",{"_index":1626,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["haiti",{"_index":1628,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["half",{"_index":4094,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halfspace",{"_index":4097,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halt",{"_index":4109,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["handle",{"_index":2464,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["handleerror",{"_index":111,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["handleerror(error",{"_index":139,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["handlers",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":142,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["handling",{"_index":172,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["happens",{"_index":58,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hardcoding",{"_index":356,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["harum",{"_index":1076,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["hash",{"_index":2516,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hasvalue",{"_index":585,"title":{},"body":{"classes/Address.html":{}}}],["header",{"_index":3017,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["header'},{'name",{"_index":532,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["header.component.html",{"_index":3028,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":3027,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":531,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":3193,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["headers",{"_index":121,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["health",{"_index":3114,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{}}}],["heard",{"_index":1630,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["height",{"_index":2483,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["heightfactor",{"_index":1150,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["helena",{"_index":1820,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["help",{"_index":4710,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["helper",{"_index":4726,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["here",{"_index":1250,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/WizardProgressBarComponent.html":{}}}],["herzegovina",{"_index":1481,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hfactor",{"_index":1154,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["hidden",{"_index":2470,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hide",{"_index":48,"title":{},"body":{"classes/AbstractForm.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hidefullsizeview",{"_index":3990,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hidevalue",{"_index":3317,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["high",{"_index":4751,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["hit",{"_index":447,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["hkg",{"_index":1637,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hmd",{"_index":1629,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hnd",{"_index":1635,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["holy",{"_index":1633,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["homepage",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["honduras",{"_index":1636,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hong",{"_index":1638,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hood",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["hooks",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":3705,"title":{},"body":{"components/RadioComponent.html":{}}}],["horizontally",{"_index":4057,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["host",{"_index":4609,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hostlistener",{"_index":2114,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hostlistener('input",{"_index":2116,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["hostlisteners",{"_index":2108,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["hrv",{"_index":1544,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hti",{"_index":1627,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["html",{"_index":494,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["html5",{"_index":2462,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlcanvaselement",{"_index":2682,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlimageelement",{"_index":2642,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlinputelement",{"_index":2119,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["http",{"_index":107,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{}}}],["http://full",{"_index":3060,"title":{},"body":{"components/HeaderComponent.html":{}}}],["http://www.apache.org/licenses/license",{"_index":4657,"title":{},"body":{"license.html":{}}}],["http_x_forwarded_host",{"_index":1189,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpclient",{"_index":117,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["httpclientmodule",{"_index":843,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["httperrorresponse",{"_index":140,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpheaders",{"_index":119,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpoptions",{"_index":115,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpopts",{"_index":174,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpopts.params",{"_index":176,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpparams",{"_index":126,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpresponse",{"_index":798,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["https://bcgov.github.io/moh",{"_index":4632,"title":{},"body":{"index.html":{}}}],["https://geocoder.api.gov.bc.ca",{"_index":2970,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://geocoder.api.gov.bc.ca/addresses.json?minscore=50&maxresults=5&echo=false&brief=true&autocomplete=true&addressstring=784+hock",{"_index":2973,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/angular/angular/issues/24818",{"_index":2953,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["https://github.com/dropbox/zxcvbn",{"_index":3355,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/jvandemo/generator",{"_index":3376,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/kekeh/ngx",{"_index":2134,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["human",{"_index":304,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hun",{"_index":1640,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hungary",{"_index":1641,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hyphen",{"_index":2934,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["hyphens",{"_index":3273,"title":{},"body":{"components/NameComponent.html":{}}}],["iceland",{"_index":1643,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["id",{"_index":1072,"title":{},"body":{"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["id='content",{"_index":3024,"title":{},"body":{"components/HeaderComponent.html":{}}}],["idea",{"_index":393,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["identical",{"_index":2571,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["identifier",{"_index":671,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"coverage.html":{}}}],["idn",{"_index":1646,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ids",{"_index":663,"title":{},"body":{"classes/Base.html":{}}}],["idx",{"_index":910,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ie",{"_index":3524,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["ignore",{"_index":3226,"title":{},"body":{"classes/MaskModel.html":{}}}],["ignored",{"_index":2649,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image",{"_index":1090,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{}}}],["image.id",{"_index":2645,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.name",{"_index":2630,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalheight",{"_index":2672,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalwidth",{"_index":2670,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.src",{"_index":2679,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image/jpeg",{"_index":2675,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageexists",{"_index":2564,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile",{"_index":2643,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile.name",{"_index":2646,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist",{"_index":2426,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist.length",{"_index":2427,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist[i].id",{"_index":2429,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageobject",{"_index":3991,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageobject.name",{"_index":4016,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageplaceholderenterkeystream",{"_index":2604,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageplaceholderref",{"_index":2386,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror",{"_index":2637,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror.rawimagefile",{"_index":2789,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images",{"_index":2391,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["images.length",{"_index":2626,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images.map((image",{"_index":2629,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageschange",{"_index":2394,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagesizeok",{"_index":2574,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror",{"_index":2728,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.commonimage",{"_index":2731,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.maxsizeallowed",{"_index":2730,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["img",{"_index":2640,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel",{"_index":2774,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onerror",{"_index":2783,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onload",{"_index":2780,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.src",{"_index":2776,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgelsarray",{"_index":2801,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["immediately",{"_index":2826,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imn",{"_index":1655,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["implement",{"_index":2754,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["implementation",{"_index":2136,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["implemented",{"_index":35,"title":{},"body":{"classes/AbstractForm.html":{},"changelog.html":{}}}],["implementing",{"_index":3750,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["implements",{"_index":209,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{}}}],["implied",{"_index":4670,"title":{},"body":{"license.html":{}}}],["import",{"_index":79,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["importable",{"_index":4780,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["important",{"_index":2023,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["imported",{"_index":338,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["importing",{"_index":4682,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["imports",{"_index":832,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["impose",{"_index":2460,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["improve",{"_index":2666,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["imydate",{"_index":2180,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["incidunt",{"_index":1075,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["include",{"_index":1180,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["includes",{"_index":379,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["including",{"_index":2532,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["incomplete",{"_index":875,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages",{"_index":924,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages.length",{"_index":928,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incorrect",{"_index":365,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["increasewidth",{"_index":2873,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["increment",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["ind",{"_index":1644,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["index.ts",{"_index":4719,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["indexable",{"_index":1172,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/PageListInterface.html":{}}}],["india",{"_index":1645,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["indian",{"_index":1491,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["indicates",{"_index":878,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["individual",{"_index":2894,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["indonesia",{"_index":1647,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{}}}],["infocolectionnoticecomponent",{"_index":292,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["information",{"_index":211,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["ingxmydpoptions",{"_index":2213,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["inherited",{"_index":958,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["init",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":3459,"title":{},"body":{"classes/Person.html":{}}}],["initialized",{"_index":3166,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["initinvalid",{"_index":3271,"title":{},"body":{"components/NameComponent.html":{}}}],["inject",{"_index":3082,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["injectable",{"_index":196,"title":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["injectables",{"_index":198,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["injectiontoken",{"_index":3775,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["injector",{"_index":3776,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["inline",{"_index":3706,"title":{},"body":{"components/RadioComponent.html":{}}}],["inmaintenance",{"_index":3192,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["input",{"_index":416,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["input(event",{"_index":2111,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.getattribute",{"_index":2120,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value",{"_index":2125,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value.trim",{"_index":2123,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input[type='file",{"_index":2410,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["input_name",{"_index":2417,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["inputs",{"_index":33,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["inside",{"_index":306,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["install",{"_index":4379,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["installation",{"_index":4638,"title":{},"body":{"index.html":{}}}],["installed",{"_index":4681,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["installpackagejsondependencies",{"_index":4532,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":1259,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["instead",{"_index":410,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["instruct",{"_index":2492,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["instruction",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["instructiontext",{"_index":2395,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["insurance",{"_index":3130,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["integration",{"_index":4705,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["interface",{"_index":901,"title":{"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":1164,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["internal",{"_index":1232,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["internet",{"_index":152,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["invalid",{"_index":1133,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["invalidbcpostal",{"_index":4032,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["invalidchar",{"_index":4037,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["invalidimagehanlder",{"_index":2769,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidimagehanlder(imagereaderror",{"_index":2790,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidvalue",{"_index":2060,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["invisible",{"_index":2162,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["iot",{"_index":1489,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ipsam",{"_index":1019,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ipsum",{"_index":1010,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["iran",{"_index":1649,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["iraq",{"_index":1652,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ireland",{"_index":1654,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["irl",{"_index":1653,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["irn",{"_index":1648,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["irq",{"_index":1651,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["irrelevant",{"_index":2990,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["is_showing_person",{"_index":1377,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["isbconly",{"_index":593,"title":{},"body":{"classes/Address.html":{}}}],["isbcphn",{"_index":3491,"title":{},"body":{"components/PhnComponent.html":{},"changelog.html":{}}}],["iscomplete",{"_index":591,"title":{},"body":{"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isdate",{"_index":2151,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdate(x",{"_index":2199,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdisabled",{"_index":1000,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["isdobempty",{"_index":3426,"title":{},"body":{"classes/Person.html":{}}}],["isl",{"_index":1642,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["islamic",{"_index":1650,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["island",{"_index":1486,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["islands",{"_index":1421,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["isle",{"_index":1656,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["isloading",{"_index":2854,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["isn't",{"_index":2413,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isnan",{"_index":2096,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["isopen",{"_index":482,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["ispaenvresponse",{"_index":3067,"title":{"interfaces/ISpaEnvResponse.html":{}},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["ispagecomplete",{"_index":223,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispagecomplete(url",{"_index":227,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{}}}],["ispagelistempty",{"_index":860,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispdf",{"_index":2658,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isprerequisitecomplete",{"_index":224,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isr",{"_index":1658,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["israel",{"_index":1659,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["isrequired",{"_index":3325,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["issue",{"_index":2654,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["issues",{"_index":840,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{}}}],["iste",{"_index":1030,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["isundermaintenance",{"_index":3141,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isvalid",{"_index":586,"title":{},"body":{"classes/Address.html":{}}}],["it'll",{"_index":2260,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["it's",{"_index":337,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ita",{"_index":1660,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["italy",{"_index":1661,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["item",{"_index":904,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["item.iscomplete",{"_index":919,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["items",{"_index":870,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["iterate",{"_index":3981,"title":{},"body":{"components/StreetComponent.html":{}}}],["jam",{"_index":1662,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jamaica",{"_index":1663,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jan",{"_index":1889,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["january",{"_index":2036,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["japan",{"_index":1665,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["javascript",{"_index":620,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["jersey",{"_index":1667,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jey",{"_index":1666,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jor",{"_index":1668,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jordan",{"_index":1669,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jpeg",{"_index":2505,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpg",{"_index":2457,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpn",{"_index":1664,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["js",{"_index":4566,"title":{},"body":{"dependencies.html":{},"additional-documentation/local-development/schematics.html":{}}}],["js/files/version.generated.ts",{"_index":4542,"title":{},"body":{"coverage.html":{}}}],["js/index.ts",{"_index":4546,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["jsdate",{"_index":2256,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["jsdocs",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1277,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["json.stringify(error",{"_index":2636,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["july",{"_index":2041,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["june",{"_index":2040,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["kaz",{"_index":1670,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kazakhstan",{"_index":1671,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["keeling",{"_index":1527,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["keep",{"_index":673,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["ken",{"_index":1672,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kenya",{"_index":1673,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["key",{"_index":448,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DayValidationDirective.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}}}],["keyboard",{"_index":3972,"title":{},"body":{"components/StreetComponent.html":{}}}],["keyboardevent",{"_index":2112,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["keys",{"_index":4613,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyup",{"_index":2606,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kgz",{"_index":1682,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["khm",{"_index":1504,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kib",{"_index":2697,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kind",{"_index":4668,"title":{},"body":{"license.html":{}}}],["kingdom",{"_index":1938,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kir",{"_index":1674,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kiribati",{"_index":1675,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kitts",{"_index":1826,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kna",{"_index":1825,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["know",{"_index":730,"title":{},"body":{"components/ButtonGroupComponent.html":{},"additional-documentation/getting-started.html":{}}}],["known",{"_index":839,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["kong",{"_index":1639,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kor",{"_index":1679,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["korea",{"_index":1677,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kuwait",{"_index":1681,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kwt",{"_index":1680,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kyrgyzstan",{"_index":1683,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["label",{"_index":319,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DropdownComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["label.getattribute('for",{"_index":435,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelforid",{"_index":400,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["labelid",{"_index":398,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelledby=\"mylargemodallabel\"]')).isdisplayed",{"_index":459,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname",{"_index":340,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname)).first",{"_index":433,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labels",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["labeltext",{"_index":2158,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["labrador",{"_index":3680,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["land",{"_index":1420,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["language",{"_index":4671,"title":{},"body":{"license.html":{}}}],["lanka",{"_index":1883,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lao",{"_index":1684,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["largely",{"_index":2131,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["last",{"_index":2893,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastname",{"_index":2900,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastnamelabel",{"_index":2906,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["later",{"_index":2468,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["latvia",{"_index":1686,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["law",{"_index":4660,"title":{},"body":{"license.html":{}}}],["layout",{"_index":2879,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["lbn",{"_index":1687,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lbr",{"_index":1691,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lby",{"_index":1693,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lca",{"_index":1828,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["leads",{"_index":361,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["leave",{"_index":3144,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lebanon",{"_index":1688,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["left",{"_index":1369,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["left/right",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":493,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["length",{"_index":2373,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{}}}],["leone",{"_index":1858,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lesotho",{"_index":1690,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["less",{"_index":688,"title":{},"body":{"components/ButtonComponent.html":{}}}],["leste",{"_index":1911,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["letter",{"_index":2931,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["letters",{"_index":2933,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["level",{"_index":1238,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["levelthen",{"_index":4728,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["lib",{"_index":241,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["lib/captcha",{"_index":831,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["lib/e2e",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["lib/images",{"_index":4707,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/images';this",{"_index":4709,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/models",{"_index":4367,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services",{"_index":4342,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services';setting",{"_index":4696,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/services/geocoder.service';if",{"_index":4693,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["liberia",{"_index":1692,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["libif",{"_index":4796,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["library",{"_index":2139,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["library/issues/221#issuecomment",{"_index":3377,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["libsetup",{"_index":4639,"title":{},"body":{"index.html":{}}}],["libya",{"_index":1694,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["license",{"_index":4510,"title":{"license.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["license/index.ts",{"_index":4508,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["licensed",{"_index":4653,"title":{},"body":{"license.html":{}}}],["lie",{"_index":1695,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["liechtenstein",{"_index":1696,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["likes",{"_index":4691,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["limitations",{"_index":4674,"title":{},"body":{"license.html":{}}}],["line",{"_index":2372,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["line:max",{"_index":3156,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["link",{"_index":318,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linking",{"_index":4733,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linknote",{"_index":4807,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["links",{"_index":357,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["list",{"_index":871,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/StreetComponent.html":{}}}],["listed",{"_index":4688,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["literal",{"_index":163,"title":{},"body":{"classes/AbstractHttpService.html":{},"directives/DayValidationDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}}}],["literals",{"_index":1292,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lithuania",{"_index":1698,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["live",{"_index":4788,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lka",{"_index":1881,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["load",{"_index":2360,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["loadimage",{"_index":2358,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["loadimage_",{"_index":2363,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loading",{"_index":12,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["local",{"_index":4420,"title":{"additional-documentation/local-development.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["locality,street,block,intersection",{"_index":2984,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["locally",{"_index":3110,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["localstorage",{"_index":2533,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["location",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["lodaing",{"_index":4754,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["log",{"_index":1197,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{}}}],["log(message",{"_index":1306,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logentry",{"_index":2350,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logerror",{"_index":1200,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logerror(errormessage",{"_index":1308,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logged",{"_index":1175,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logger",{"_index":1179,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logging",{"_index":189,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["logging/log",{"_index":2351,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loghttperror",{"_index":1298,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["loghttperror(error",{"_index":1226,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["loghttprequeststoconsole",{"_index":110,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["logic",{"_index":853,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["logo",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["logosrc",{"_index":3034,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":1203,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logservice",{"_index":2403,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["logsource",{"_index":1187,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["long",{"_index":208,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["look",{"_index":4795,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["looking",{"_index":2998,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["lookup",{"_index":395,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/GeocoderService.html":{},"components/StreetComponent.html":{}}}],["lookup(address",{"_index":2974,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lorem",{"_index":1009,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["losing",{"_index":1222,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lost",{"_index":151,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["lower",{"_index":1345,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["lso",{"_index":1689,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ltu",{"_index":1697,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lucia",{"_index":1829,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lux",{"_index":1699,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["luxembourg",{"_index":1700,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lva",{"_index":1685,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["maarten",{"_index":1862,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mac",{"_index":1701,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["macao",{"_index":1702,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["macedonia",{"_index":1704,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["machine",{"_index":4746,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["madagascar",{"_index":1708,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["made",{"_index":4346,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maf",{"_index":1830,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["magnam",{"_index":1018,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["main",{"_index":684,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maintenance",{"_index":3074,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenanceflag",{"_index":3148,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenancemessage",{"_index":3154,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["majorly",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":136,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["makes",{"_index":129,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["making",{"_index":690,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["malawi",{"_index":1710,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["malaysia",{"_index":1712,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["maldives",{"_index":1714,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["malformed",{"_index":2748,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mali",{"_index":1716,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["malta",{"_index":1718,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["malvinas",{"_index":1579,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["man",{"_index":1657,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["manage",{"_index":2514,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manitoba",{"_index":3675,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["manually",{"_index":2264,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["many",{"_index":3709,"title":{},"body":{"components/RadioComponent.html":{}}}],["map",{"_index":2337,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{}}}],["map((ev",{"_index":4078,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["map((event",{"_index":2612,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["map([['acl",{"_index":3158,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["map(x",{"_index":1352,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["map.js",{"_index":4730,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["maps",{"_index":2179,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["mar",{"_index":1745,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["march",{"_index":2038,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["margins",{"_index":2881,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["mariana",{"_index":1775,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["marino",{"_index":1842,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["markallinputstouched",{"_index":18,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markastouched",{"_index":69,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markdown",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["markup",{"_index":689,"title":{},"body":{"components/ButtonComponent.html":{}}}],["marshall",{"_index":1720,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["martin",{"_index":1831,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["martinique",{"_index":1722,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mask",{"_index":3211,"title":{},"body":{"classes/MaskModel.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["maskmodel",{"_index":3209,"title":{"classes/MaskModel.html":{}},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["maskmodel:11",{"_index":3576,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:12",{"_index":3578,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:14",{"_index":3574,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:15",{"_index":3575,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:17",{"_index":3591,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:18",{"_index":3592,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:27",{"_index":3585,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:34",{"_index":3584,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["match",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":100,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["matchprecisionnot",{"_index":2991,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["math.abs(target.nativeelement.offsetleft",{"_index":4112,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.ceil",{"_index":3478,"title":{},"body":{"classes/Person.html":{}}}],["math.ceil(math.random()*100",{"_index":2667,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["math.round(((numerator",{"_index":4098,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["mauritania",{"_index":1724,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mauritius",{"_index":1726,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["max",{"_index":2722,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxheight",{"_index":2741,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maximum",{"_index":2495,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxlen",{"_index":974,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["maxlenasnumber",{"_index":3238,"title":{},"body":{"components/NameComponent.html":{}}}],["maxlength",{"_index":2121,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/StreetComponent.html":{}}}],["maxretry",{"_index":2746,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxsizeallowed",{"_index":1127,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["maxsizebytes",{"_index":2723,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxwidth",{"_index":2738,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mayen",{"_index":1890,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mayotte",{"_index":1728,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mb",{"_index":2587,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["mcdonald",{"_index":1631,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mco",{"_index":1737,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mda",{"_index":1735,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mdg",{"_index":1707,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mdv",{"_index":1713,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["means",{"_index":288,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["meant",{"_index":2869,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["meet",{"_index":3384,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["member",{"_index":3555,"title":{},"body":{"components/PhnComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["members",{"_index":3714,"title":{},"body":{"components/RadioComponent.html":{}}}],["menu",{"_index":4695,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["merge",{"_index":2336,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["merge(merge(browsefilestream).pipe",{"_index":2553,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["message",{"_index":1198,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["messages",{"_index":1132,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["meta",{"_index":1204,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["metadata",{"_index":473,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["method",{"_index":184,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["mex",{"_index":1729,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mexico",{"_index":1730,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mhl",{"_index":1719,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mib",{"_index":2698,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["micronesia",{"_index":1732,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["middle",{"_index":2892,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{}}}],["middlename",{"_index":2901,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["middlenamelabel",{"_index":2907,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["mime",{"_index":2456,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mini",{"_index":2168,"title":{},"body":{"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":2270,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["minimum",{"_index":3306,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ministry",{"_index":3113,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["minlen",{"_index":3326,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlength",{"_index":3381,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg1",{"_index":3318,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg2",{"_index":3319,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minor",{"_index":391,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["miquelon",{"_index":1835,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mirror",{"_index":394,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["miscellaneous",{"_index":4574,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missing",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["mistakes",{"_index":4641,"title":{},"body":{"index.html":{}}}],["mkd",{"_index":1703,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mli",{"_index":1715,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mlt",{"_index":1717,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mm').daysinmonth",{"_index":2300,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["mmr",{"_index":1749,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mne",{"_index":1741,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mng",{"_index":1739,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mnp",{"_index":1773,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mobile",{"_index":3568,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mod",{"_index":3547,"title":{},"body":{"components/PhnComponent.html":{}}}],["modal",{"_index":296,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["modal')).element(by.css('div[aria",{"_index":458,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["modal'},{'name",{"_index":512,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["modal.component",{"_index":3836,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modal.component.html",{"_index":1115,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["modal.component.scss",{"_index":3139,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["modal.component.ts",{"_index":3070,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["modal/consent",{"_index":3069,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modaldirective",{"_index":2331,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["modalmodule",{"_index":3803,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modalmodule.forroot",{"_index":3859,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["model",{"_index":2146,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"additional-documentation/getting-started.html":{}}}],["model/application",{"_index":2356,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["model/application.model",{"_index":2354,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["models",{"_index":4263,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["models/base",{"_index":960,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["models/container",{"_index":4072,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["models/images.model",{"_index":2343,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["models/mask.model",{"_index":3521,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["models/person.model",{"_index":2940,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["models/simple",{"_index":2053,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["modifyjson",{"_index":4512,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modifyjson(host",{"_index":4630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":814,"title":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["modules",{"_index":816,"title":{"modules.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["modulewithproviders",{"_index":830,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["moh",{"_index":240,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["mohstart",{"_index":4533,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mohstart(_options",{"_index":4621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["moldova",{"_index":1736,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["molestiae",{"_index":1074,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["molestias",{"_index":1033,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mollitia",{"_index":1031,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["moment",{"_index":667,"title":{},"body":{"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"dependencies.html":{}}}],["moment().date",{"_index":2074,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment().get",{"_index":4136,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["moment().month",{"_index":2072,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment().toisostring",{"_index":1280,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["moment().year",{"_index":2076,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment(str",{"_index":2298,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["moment_",{"_index":1177,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["momentjs",{"_index":4776,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["monaco",{"_index":1738,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mongolia",{"_index":1740,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["montenegro",{"_index":1742,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["month",{"_index":2015,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{}}}],["month_",{"_index":2034,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthlabelforid",{"_index":1973,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthlist",{"_index":1974,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthref",{"_index":1975,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["montserrat",{"_index":1744,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["more",{"_index":210,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["morocco",{"_index":1746,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["move",{"_index":4366,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["moz",{"_index":1747,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mozambique",{"_index":1748,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mrt",{"_index":1723,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["msg",{"_index":1243,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["msp",{"_index":2806,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/RadioComponent.html":{}}}],["msp/api/env",{"_index":3149,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["mspdataservice",{"_index":2346,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperror",{"_index":2822,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperrornum",{"_index":2821,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage",{"_index":2563,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.attachmentorder",{"_index":2668,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.contenttype",{"_index":2674,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.error",{"_index":2818,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.filecontent",{"_index":2717,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.id",{"_index":2719,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.name",{"_index":2662,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalheight",{"_index":2671,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalwidth",{"_index":2669,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.size",{"_index":2686,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizetxt",{"_index":2713,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizeunit",{"_index":2710,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.uuid",{"_index":2837,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimagefile",{"_index":2820,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimages",{"_index":2619,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msplogservice",{"_index":2344,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msr",{"_index":1743,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mtq",{"_index":1721,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["multi",{"_index":735,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhoneNumberComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}}}],["multiple",{"_index":1291,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/RadioComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["multiples",{"_index":2694,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["multiply",{"_index":3537,"title":{},"body":{"components/PhnComponent.html":{}}}],["mus",{"_index":1725,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mutually",{"_index":4581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwi",{"_index":1709,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["myanmar",{"_index":1750,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mydatepicker",{"_index":2133,"title":{},"body":{"components/DatepickerComponent.html":{},"modules/SharedCoreModule.html":{}}}],["myriadwebprottf_base64",{"_index":4516,"title":{},"body":{"coverage.html":{}}}],["mys",{"_index":1711,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["myself",{"_index":3712,"title":{},"body":{"components/RadioComponent.html":{}}}],["myselfonly",{"_index":3713,"title":{},"body":{"components/RadioComponent.html":{}}}],["myt",{"_index":1727,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["n",{"_index":2452,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nam",{"_index":1751,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["name'},{'name",{"_index":530,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["name.component",{"_index":3849,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.component.html",{"_index":2897,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.scss",{"_index":2896,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.ts",{"_index":2891,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["name.component.ts:113",{"_index":2918,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:117",{"_index":2919,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:121",{"_index":2920,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:36",{"_index":2914,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:37",{"_index":2916,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:38",{"_index":2915,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:39",{"_index":2911,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:40",{"_index":2913,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:41",{"_index":2912,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:42",{"_index":2910,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:45",{"_index":2924,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:46",{"_index":2926,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:47",{"_index":2925,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:49",{"_index":2929,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:51",{"_index":2923,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:53",{"_index":2939,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:54",{"_index":2938,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:56",{"_index":2921,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:57",{"_index":2909,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:63",{"_index":2917,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.directive",{"_index":3845,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.directive.ts",{"_index":4034,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:26",{"_index":4036,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["name/full",{"_index":2890,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["name=\"${refnameval}\"]`)).click",{"_index":453,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name=schematic",{"_index":4749,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["name^=\"${refnameval",{"_index":465,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).first().sendkeys(text",{"_index":462,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).sendkeys(text",{"_index":450,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name_",{"_index":3242,"title":{},"body":{"components/NameComponent.html":{}}}],["namecomponent",{"_index":246,"title":{"components/NameComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameregex",{"_index":2902,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["names",{"_index":2665,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{}}}],["names.length",{"_index":3474,"title":{},"body":{"classes/Person.html":{}}}],["names[0",{"_index":3473,"title":{},"body":{"classes/Person.html":{}}}],["names[1",{"_index":3475,"title":{},"body":{"classes/Person.html":{}}}],["names[2",{"_index":3476,"title":{},"body":{"classes/Person.html":{}}}],["namestr",{"_index":3236,"title":{},"body":{"components/NameComponent.html":{}}}],["namibia",{"_index":1752,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["napprox",{"_index":2705,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(0",{"_index":2709,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(3",{"_index":2707,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["native",{"_index":619,"title":{},"body":{"classes/Address.html":{},"components/WizardProgressBarComponent.html":{}}}],["natural",{"_index":2481,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["naturalheight",{"_index":1095,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["naturalwidth",{"_index":1096,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["natus",{"_index":1021,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nauru",{"_index":1754,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["navigate",{"_index":19,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["navigate(url",{"_index":70,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigates",{"_index":73,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigateto",{"_index":260,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["navigating",{"_index":62,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigationend",{"_index":3048,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nb",{"_index":3676,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nbytes",{"_index":2690,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ncl",{"_index":1759,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nec",{"_index":3235,"title":{},"body":{"components/NameComponent.html":{}}}],["necessary",{"_index":276,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["need",{"_index":385,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["negative",{"_index":2880,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["nemo",{"_index":1043,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nepal",{"_index":1756,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ner",{"_index":1765,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nesciunt",{"_index":1080,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nested",{"_index":2877,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["nesting",{"_index":1213,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["netherlands",{"_index":1758,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["network",{"_index":1223,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{}}}],["never",{"_index":1253,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["nevis",{"_index":1827,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["new",{"_index":647,"title":{},"body":{"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["newfoundland",{"_index":3679,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["newurl",{"_index":1196,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["next",{"_index":273,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["nextpagenumber",{"_index":2644,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nfk",{"_index":1771,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ng",{"_index":311,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["ng_validators",{"_index":2284,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}}}],["ng_value_accessor",{"_index":722,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["nga",{"_index":1767,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ngaftercontentinit",{"_index":2603,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ngafterviewinit",{"_index":2952,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["ngcontrol",{"_index":979,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["ngform",{"_index":36,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"modules/SharedCoreModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ngforms",{"_index":4762,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["ngmodel",{"_index":942,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/NameComponent.html":{}}}],["ngmodelchange",{"_index":2107,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["ngmodule",{"_index":203,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"modules/CaptchaModule.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["ngmodules",{"_index":3755,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["ngonchanges",{"_index":2152,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{}}}],["ngonchanges(changes",{"_index":2201,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ngondestroy",{"_index":4047,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ngoninit",{"_index":481,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ngselect",{"_index":406,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ngselectmodule",{"_index":3823,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngsubmit",{"_index":2870,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ngx",{"_index":491,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["ngxdp",{"_index":2147,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ngxmydatepickerdirective",{"_index":2219,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ngxmydatepickermodule",{"_index":3814,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngxmydatepickermodule.forroot",{"_index":3858,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngzone",{"_index":2329,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nic",{"_index":1763,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nicaragua",{"_index":1764,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["niger",{"_index":1766,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nigeria",{"_index":1768,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nisi",{"_index":1028,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["niu",{"_index":1769,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["niue",{"_index":1770,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nl",{"_index":3678,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nld",{"_index":1757,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nmultiple",{"_index":2704,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nobis",{"_index":1057,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["node",{"_index":4633,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":4786,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["node_modules/@types",{"_index":4757,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["nofuturedatesallowed",{"_index":2059,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["noidimage",{"_index":2377,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["non",{"_index":1025,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nonce",{"_index":792,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["none",{"_index":2163,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["nopastdatesallowed",{"_index":2058,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["norfolk",{"_index":1772,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["northern",{"_index":1774,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["northwest",{"_index":3693,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["norway",{"_index":1776,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nostrum",{"_index":1067,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["note",{"_index":354,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nothing",{"_index":3980,"title":{},"body":{"components/StreetComponent.html":{}}}],["notice",{"_index":291,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["notify",{"_index":2011,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{}}}],["notips",{"_index":3302,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["nova",{"_index":3682,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["november",{"_index":2045,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["now",{"_index":388,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/StreetComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["npl",{"_index":1755,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["npm",{"_index":664,"title":{},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["nprstv",{"_index":603,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["nru",{"_index":1753,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ns",{"_index":3681,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nt",{"_index":3692,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nu",{"_index":3694,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["null",{"_index":640,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["null/undefined",{"_index":3469,"title":{},"body":{"classes/Person.html":{}}}],["nulls",{"_index":3460,"title":{},"body":{"classes/Person.html":{}}}],["num",{"_index":3540,"title":{},"body":{"components/PhnComponent.html":{}}}],["number",{"_index":326,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["number'},{'name",{"_index":543,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["number(phn.substring(9",{"_index":3553,"title":{},"body":{"components/PhnComponent.html":{}}}],["number,number,number,number",{"_index":3594,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component",{"_index":3839,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.component.html",{"_index":3560,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.scss",{"_index":3559,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts",{"_index":3558,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["number.component.ts:38",{"_index":3590,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:39",{"_index":3567,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:40",{"_index":3573,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:41",{"_index":3569,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:42",{"_index":3571,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:43",{"_index":3572,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:44",{"_index":3577,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:46",{"_index":3586,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:47",{"_index":3566,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:57",{"_index":3582,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:64",{"_index":3579,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:68",{"_index":3580,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:72",{"_index":3583,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.parseint",{"_index":3269,"title":{},"body":{"components/NameComponent.html":{}}}],["number/phone",{"_index":3557,"title":{},"body":{"components/PhoneNumberComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["numerator",{"_index":4090,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["numeric",{"_index":2006,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["numpages",{"_index":2809,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["numquam",{"_index":1068,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nunavut",{"_index":3695,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nzl",{"_index":1761,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["o",{"_index":2579,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obcaecati",{"_index":1063,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["obj",{"_index":2211,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["obj.features.map(feature",{"_index":2993,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["object",{"_index":160,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{}}}],["object.addressline1",{"_index":652,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline2",{"_index":654,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline3",{"_index":656,"title":{},"body":{"classes/Address.html":{}}}],["object.city",{"_index":657,"title":{},"body":{"classes/Address.html":{}}}],["object.country",{"_index":658,"title":{},"body":{"classes/Address.html":{}}}],["object.dateofbirth.day",{"_index":3484,"title":{},"body":{"classes/Person.html":{}}}],["object.dateofbirth.month",{"_index":3483,"title":{},"body":{"classes/Person.html":{}}}],["object.dateofbirth.year",{"_index":3485,"title":{},"body":{"classes/Person.html":{}}}],["object.firstname",{"_index":3480,"title":{},"body":{"classes/Person.html":{}}}],["object.keys",{"_index":3466,"title":{},"body":{"classes/Person.html":{}}}],["object.keys(this.form.form.controls).foreach(x",{"_index":97,"title":{},"body":{"classes/AbstractForm.html":{}}}],["object.lastname",{"_index":3482,"title":{},"body":{"classes/Person.html":{}}}],["object.middlename",{"_index":3481,"title":{},"body":{"classes/Person.html":{}}}],["object.postal",{"_index":659,"title":{},"body":{"classes/Address.html":{}}}],["object.province",{"_index":660,"title":{},"body":{"classes/Address.html":{}}}],["object.street",{"_index":651,"title":{},"body":{"classes/Address.html":{}}}],["objectid",{"_index":668,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["objects",{"_index":4781,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["observable",{"_index":138,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{}}}],["observable.pipe(catcherror(this.handleerror.bind(this",{"_index":185,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observable.pipe(tap",{"_index":190,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observe",{"_index":809,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["observer",{"_index":170,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["observer.error(error",{"_index":2652,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagereaderror",{"_index":2639,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagetoobigerror",{"_index":2732,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.next(mspimage",{"_index":2735,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obtain",{"_index":4656,"title":{},"body":{"license.html":{}}}],["occupied",{"_index":1785,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["occured",{"_index":1262,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["ocean",{"_index":1492,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["october",{"_index":2044,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["ocurrence",{"_index":420,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["odit",{"_index":1071,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["of(error",{"_index":3191,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["of30",{"_index":2618,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oh",{"_index":4805,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["older",{"_index":4635,"title":{},"body":{"index.html":{}}}],["oman",{"_index":1778,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["omit",{"_index":629,"title":{},"body":{"classes/Address.html":{}}}],["omn",{"_index":1777,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["onblur",{"_index":3403,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["onblurevent",{"_index":971,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["onblurevent(event",{"_index":992,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["onbtnclick",{"_index":4118,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["once",{"_index":2509,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["onchange",{"_index":3565,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["onchanges",{"_index":2141,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onclick",{"_index":703,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["onclick($event",{"_index":716,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["ondatechanged",{"_index":2153,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ondatechanged(event",{"_index":2205,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ondestroy",{"_index":4039,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["one",{"_index":274,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["onerror",{"_index":3913,"title":{},"body":{"components/StreetComponent.html":{}}}],["onerror(err",{"_index":3933,"title":{},"body":{"components/StreetComponent.html":{}}}],["ongoing",{"_index":2530,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oninit",{"_index":472,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["oninput",{"_index":2117,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["oninputblur",{"_index":3323,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oninputblur($event",{"_index":3358,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onkeyup",{"_index":3914,"title":{},"body":{"components/StreetComponent.html":{}}}],["onkeyup(event",{"_index":3936,"title":{},"body":{"components/StreetComponent.html":{}}}],["onload",{"_index":2778,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["onlyfuturedates",{"_index":2159,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["onpaste",{"_index":3406,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onselect",{"_index":3915,"title":{},"body":{"components/StreetComponent.html":{}}}],["onselect(event",{"_index":3938,"title":{},"body":{"components/StreetComponent.html":{}}}],["onstatuschange",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["ontario",{"_index":3684,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["onupdate",{"_index":3212,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{}}}],["onupdate(value",{"_index":3216,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{}}}],["onvaluechange",{"_index":972,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["onvaluechange(value",{"_index":994,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["open",{"_index":2463,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["opened/read",{"_index":2785,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openmodal",{"_index":3137,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["opens",{"_index":442,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["openshift",{"_index":838,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["operate",{"_index":4789,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["operation",{"_index":2499,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["optimizing",{"_index":4076,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["optio",{"_index":1035,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["option",{"_index":401,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["optional()@self",{"_index":1004,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["optionally",{"_index":186,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["options",{"_index":133,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["optiontext",{"_index":375,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["optiontext)).click",{"_index":444,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["order",{"_index":2025,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["organize",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["orient",{"_index":2497,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["orientation",{"_index":2744,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["others",{"_index":381,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["otherwise",{"_index":2086,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["out",{"_index":616,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["outlying",{"_index":1940,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["output",{"_index":721,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["outputs",{"_index":705,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["outside",{"_index":4061,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["over",{"_index":2586,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{},"miscellaneous/functions.html":{}}}],["override",{"_index":348,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["overridesscss",{"_index":4525,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":4677,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":275,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/functions.html":{}}}],["overwritefile",{"_index":4534,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["overwritefile(host",{"_index":4622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overwritten",{"_index":285,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["pa",{"_index":3161,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["package",{"_index":665,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["package.json",{"_index":4357,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["package.jsoncreating",{"_index":4738,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["packaging",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":64,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["page.path",{"_index":1357,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["page.ts",{"_index":233,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["page.ts:102",{"_index":404,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:113",{"_index":414,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:122",{"_index":301,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:13",{"_index":270,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:130",{"_index":308,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:138",{"_index":286,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:146",{"_index":315,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:153",{"_index":293,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:160",{"_index":372,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:169",{"_index":418,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:178",{"_index":317,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:18",{"_index":279,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:186",{"_index":324,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:32",{"_index":347,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:34",{"_index":322,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:38",{"_index":329,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:43",{"_index":369,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:47",{"_index":321,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:60",{"_index":331,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:72",{"_index":344,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:76",{"_index":328,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:91",{"_index":376,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["pagechecklist",{"_index":858,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["pageframework",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["pageframeworkcomponent",{"_index":533,"title":{"components/PageFrameworkComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagelistinterface",{"_index":893,"title":{"interfaces/PageListInterface.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["pagenumber",{"_index":2633,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pageroutes",{"_index":1350,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pageroutes.map(page",{"_index":1356,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pages",{"_index":876,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["pagesectioncomponent",{"_index":535,"title":{"components/PageSectionComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pageurl",{"_index":3767,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["pains",{"_index":4646,"title":{},"body":{"index.html":{}}}],["pak",{"_index":1779,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pakistan",{"_index":1780,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["palau",{"_index":1782,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["palestinian",{"_index":1784,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pan",{"_index":1786,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["panama",{"_index":1787,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["papua",{"_index":1789,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["paraguay",{"_index":1791,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["param",{"_index":169,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":194,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["params).pipe(map(this.processresponse",{"_index":2987,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["parent",{"_index":2062,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["parents",{"_index":672,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["pariatur",{"_index":1059,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["parsed",{"_index":2093,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["parseint",{"_index":2094,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["parseint(scaledwidthstring",{"_index":4014,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["parsing",{"_index":1273,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["part",{"_index":1832,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["parts",{"_index":3457,"title":{},"body":{"classes/Person.html":{},"additional-documentation/local-development/components.html":{}}}],["pass",{"_index":367,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"directives/YearValidateDirective.html":{}}}],["passed",{"_index":51,"title":{},"body":{"classes/AbstractForm.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/RadioComponent.html":{},"components/StreetComponent.html":{}}}],["passes",{"_index":3362,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["passing",{"_index":3379,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passtest",{"_index":3640,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["password",{"_index":1136,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["password'},{'name",{"_index":538,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["password.component.html",{"_index":3315,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password.component.scss",{"_index":3314,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password_",{"_index":3339,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordchange",{"_index":3313,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordcomponent",{"_index":537,"title":{"components/PasswordComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["passworderrormsg",{"_index":3331,"title":{"interfaces/PasswordErrorMsg.html":{}},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["past",{"_index":1998,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["pasting",{"_index":3405,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["path",{"_index":3759,"title":{},"body":{"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["paths",{"_index":4280,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["pattern",{"_index":2903,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["payload",{"_index":801,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["payload.translation",{"_index":811,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["pcformat",{"_index":3607,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["pcn",{"_index":1796,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pdf",{"_index":1134,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["pdf.good",{"_index":1137,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["pdfdoc.numpages",{"_index":2810,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile",{"_index":2795,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile.name",{"_index":2631,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs",{"_index":2333,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["pdfjs.disablestream",{"_index":2798,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.disableworker",{"_index":2797,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.getdocument((docinitparams",{"_index":2807,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs_",{"_index":2367,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsstatic",{"_index":2332,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfnotsupported",{"_index":1123,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pdfscalefactor",{"_index":2793,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pe",{"_index":3685,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["people\\'s",{"_index":1678,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["per",{"_index":1792,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["performance",{"_index":2269,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["period",{"_index":2935,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["periods",{"_index":3274,"title":{},"body":{"components/NameComponent.html":{}}}],["permissions",{"_index":4673,"title":{},"body":{"license.html":{}}}],["person",{"_index":2353,"title":{"classes/Person.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{},"coverage.html":{},"index.html":{}}}],["person's",{"_index":3458,"title":{},"body":{"classes/Person.html":{}}}],["person.model.ts",{"_index":3866,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["personal",{"_index":1346,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["personchange",{"_index":2908,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["peru",{"_index":1793,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pg",{"_index":199,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["pharmacare's",{"_index":631,"title":{},"body":{"classes/Address.html":{}}}],["philippines",{"_index":1795,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["phl",{"_index":1794,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["phn",{"_index":3487,"title":{},"body":{"components/PhnComponent.html":{},"changelog.html":{}}}],["phn'},{'name",{"_index":540,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["phn.component.html",{"_index":3489,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.component.scss",{"_index":3488,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.trim().length",{"_index":3536,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn_",{"_index":3497,"title":{},"body":{"components/PhnComponent.html":{}}}],["phncomponent",{"_index":539,"title":{"components/PhnComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phnlist",{"_index":3492,"title":{},"body":{"components/PhnComponent.html":{}}}],["phnvalid",{"_index":3525,"title":{},"body":{"components/PhnComponent.html":{}}}],["phone",{"_index":542,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["phone_",{"_index":3570,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["phonenumber",{"_index":3564,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["phonenumbercomponent",{"_index":541,"title":{"components/PhoneNumberComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumberregex",{"_index":3561,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["pib",{"_index":2700,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pierre",{"_index":1834,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pipe",{"_index":2611,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{}}}],["pipe(filter((evt",{"_index":2609,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(retrywhen(this.retrystrategy(32",{"_index":2655,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pitcairn",{"_index":1797,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pixel",{"_index":2501,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pkg",{"_index":4607,"title":{},"body":{"miscellaneous/functions.html":{}}}],["place",{"_index":206,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["placeholder",{"_index":975,"title":{},"body":{"components/CityComponent.html":{},"components/DropdownComponent.html":{},"classes/MaskModel.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["please",{"_index":2396,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"index.html":{}}}],["plurinational",{"_index":1472,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["plw",{"_index":1781,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["png",{"_index":1788,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["point",{"_index":349,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"miscellaneous/enumerations.html":{}}}],["points",{"_index":4265,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["pol",{"_index":1798,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["poland",{"_index":1799,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pollyfills.ts",{"_index":4764,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["polynesia",{"_index":1592,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["poor",{"_index":2135,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["populated",{"_index":2779,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["porting",{"_index":2805,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["portugal",{"_index":1801,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["post",{"_index":112,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["post(url",{"_index":153,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["postal",{"_index":545,"title":{},"body":{"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["postal.directive",{"_index":3852,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postal.directive.ts",{"_index":4024,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["postal.directive.ts:25",{"_index":4027,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["postalcode",{"_index":3608,"title":{},"body":{"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["postalcode_",{"_index":3613,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["postalcodebcregex",{"_index":588,"title":{},"body":{"classes/Address.html":{}}}],["postalcodecomponent",{"_index":544,"title":{"components/PostalCodeComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["potential",{"_index":2653,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["potentially",{"_index":4731,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["power",{"_index":2617,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pr",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["pr#13",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["practice",{"_index":3023,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pre",{"_index":3534,"title":{},"body":{"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"miscellaneous/functions.html":{}}}],["preceding",{"_index":2572,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["premium",{"_index":3126,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prerequisites",{"_index":883,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["present",{"_index":3311,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["preservesymlinks",{"_index":4184,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["prevent",{"_index":3404,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preversion",{"_index":4765,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["previous",{"_index":921,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["previously",{"_index":2676,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pri",{"_index":1802,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["primarily",{"_index":4056,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["primary",{"_index":708,"title":{},"body":{"components/ButtonComponent.html":{}}}],["prime",{"_index":339,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["prince",{"_index":3686,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["principe",{"_index":1846,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["print",{"_index":625,"title":{},"body":{"classes/Address.html":{}}}],["printed",{"_index":622,"title":{},"body":{"classes/Address.html":{}}}],["prior",{"_index":4732,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["priority",{"_index":4752,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["privacy",{"_index":3120,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["private",{"_index":807,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["prk",{"_index":1676,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["probably",{"_index":2786,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["proceed",{"_index":888,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["process",{"_index":2295,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["processing",{"_index":2448,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["processname",{"_index":3140,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["processresponse",{"_index":3007,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["processresponse(obj",{"_index":2992,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["program",{"_index":1181,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["programname",{"_index":1193,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["progress",{"_index":561,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["progressbarmodule",{"_index":3802,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressbarmodule.forroot",{"_index":3857,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressevent",{"_index":2771,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progressevt",{"_index":2770,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progresssteps",{"_index":1336,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["project",{"_index":579,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["project>architect>build>options",{"_index":4814,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects",{"_index":4779,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects/.../captcha.component.ts",{"_index":4577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datepicker.component.ts",{"_index":4579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../images.model.ts",{"_index":4578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../index.ts",{"_index":4589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../json.ts",{"_index":4591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../logger.service.ts",{"_index":4580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../package",{"_index":4590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/common/captcha/src/captcha",{"_index":780,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["projects/common/captcha/src/captcha.component.ts",{"_index":4442,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha.module.ts",{"_index":827,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/captcha/src/captcha.module.ts:27",{"_index":829,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/e2e/src/abstract",{"_index":231,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts",{"_index":470,"title":{},"body":{"components/AccordionCommonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:21",{"_index":486,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:22",{"_index":485,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:24",{"_index":490,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:25",{"_index":487,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:26",{"_index":484,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/address/address.component.ts",{"_index":4447,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/button",{"_index":725,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts",{"_index":677,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts:36",{"_index":710,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:37",{"_index":711,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:38",{"_index":712,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:39",{"_index":714,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:40",{"_index":707,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:44",{"_index":715,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:47",{"_index":717,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts",{"_index":933,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:37",{"_index":940,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:38",{"_index":948,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:39",{"_index":944,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:40",{"_index":947,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:41",{"_index":946,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:42",{"_index":939,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:43",{"_index":949,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:44",{"_index":950,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:45",{"_index":957,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:48",{"_index":955,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:49",{"_index":938,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:63",{"_index":951,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:67",{"_index":952,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:71",{"_index":953,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:75",{"_index":954,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts",{"_index":967,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/city/city.component.ts:12",{"_index":982,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:13",{"_index":987,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:14",{"_index":985,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:15",{"_index":981,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:16",{"_index":988,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:19",{"_index":989,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:24",{"_index":1007,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:28",{"_index":991,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:29",{"_index":990,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:31",{"_index":1003,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:33",{"_index":1002,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:34",{"_index":980,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:36",{"_index":1005,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:43",{"_index":995,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:48",{"_index":993,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:53",{"_index":1001,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:60",{"_index":996,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:65",{"_index":997,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:69",{"_index":999,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/consent",{"_index":3068,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["projects/common/lib/components/core",{"_index":1360,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/country/country.component.ts",{"_index":1383,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"coverage.html":{}}}],["projects/common/lib/components/country/country.component.ts:274",{"_index":1392,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:275",{"_index":1390,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:276",{"_index":1394,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:277",{"_index":1391,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:278",{"_index":1397,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:279",{"_index":1398,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:280",{"_index":1396,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:283",{"_index":1399,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:288",{"_index":1411,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:292",{"_index":1401,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:293",{"_index":1400,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:295",{"_index":1410,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:297",{"_index":1408,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:298",{"_index":1388,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:300",{"_index":1409,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:307",{"_index":1403,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:315",{"_index":1402,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:320",{"_index":1407,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:327",{"_index":1404,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:332",{"_index":1405,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:336",{"_index":1406,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/date/date",{"_index":2104,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts",{"_index":1968,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts:108",{"_index":2017,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:123",{"_index":2019,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:134",{"_index":2004,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:34",{"_index":2049,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:35",{"_index":2032,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:36",{"_index":2052,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:38",{"_index":2001,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:39",{"_index":1997,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:40",{"_index":1993,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:41",{"_index":1996,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:42",{"_index":1992,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:44",{"_index":1999,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:45",{"_index":1995,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:47",{"_index":2002,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:49",{"_index":2047,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:54",{"_index":2035,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:55",{"_index":2030,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:56",{"_index":1990,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:58",{"_index":2033,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:63",{"_index":2007,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:85",{"_index":2014,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:97",{"_index":2009,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/day",{"_index":2281,"title":{},"body":{"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/year",{"_index":4126,"title":{},"body":{"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts",{"_index":2129,"title":{},"body":{"components/DatepickerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:103",{"_index":2198,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:111",{"_index":2200,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:116",{"_index":2204,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:167",{"_index":2203,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:177",{"_index":2206,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:186",{"_index":2194,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:194",{"_index":2207,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:198",{"_index":2208,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:202",{"_index":2210,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:36",{"_index":2191,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:37",{"_index":2171,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:38",{"_index":2193,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:39",{"_index":2175,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:40",{"_index":2183,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:42",{"_index":2189,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:46",{"_index":2181,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:49",{"_index":2176,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:52",{"_index":2184,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:67",{"_index":2164,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:72",{"_index":2173,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:74",{"_index":2182,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:78",{"_index":2217,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:81",{"_index":2216,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:83",{"_index":2221,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:86",{"_index":2214,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:88",{"_index":2212,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:89",{"_index":2160,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:95",{"_index":2196,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts",{"_index":2302,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:18",{"_index":2323,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:20",{"_index":2314,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:21",{"_index":2315,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:22",{"_index":2316,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:23",{"_index":2312,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:24",{"_index":2310,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:25",{"_index":2311,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:26",{"_index":2317,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:27",{"_index":2313,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:29",{"_index":2322,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:30",{"_index":2309,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:38",{"_index":2318,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:41",{"_index":2321,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:45",{"_index":2319,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:49",{"_index":2320,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/file",{"_index":2325,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/form",{"_index":2848,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/full",{"_index":2889,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts",{"_index":3014,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts:20",{"_index":3040,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:21",{"_index":3041,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:22",{"_index":3039,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:24",{"_index":3047,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:25",{"_index":3037,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:30",{"_index":3043,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:39",{"_index":3045,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:43",{"_index":3046,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:51",{"_index":3042,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts",{"_index":3231,"title":{},"body":{"components/NameComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/name/name.component.ts:21",{"_index":3240,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:22",{"_index":3241,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:23",{"_index":3245,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:24",{"_index":3243,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:27",{"_index":3246,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:32",{"_index":3259,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:36",{"_index":3248,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:37",{"_index":3247,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:39",{"_index":3258,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:41",{"_index":3256,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:42",{"_index":3239,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:44",{"_index":3257,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:51",{"_index":3251,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:56",{"_index":3250,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:61",{"_index":3255,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:68",{"_index":3252,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:73",{"_index":3253,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:77",{"_index":3254,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:81",{"_index":3249,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:87",{"_index":3261,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/validate",{"_index":4033,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/page",{"_index":3276,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts",{"_index":3304,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts:118",{"_index":3356,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:131",{"_index":3361,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:135",{"_index":3359,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:142",{"_index":3348,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:157",{"_index":3350,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:58",{"_index":3335,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:59",{"_index":3334,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:60",{"_index":3333,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:61",{"_index":3341,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:62",{"_index":3343,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:63",{"_index":3338,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:64",{"_index":3337,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:65",{"_index":3332,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:66",{"_index":3344,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:67",{"_index":3340,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:71",{"_index":3346,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:72",{"_index":3345,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:75",{"_index":3365,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:76",{"_index":3368,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:77",{"_index":3370,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:79",{"_index":3364,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:82",{"_index":3369,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:83",{"_index":3366,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:84",{"_index":3367,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:85",{"_index":3330,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:92",{"_index":3357,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts",{"_index":3486,"title":{},"body":{"components/PhnComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:103",{"_index":3511,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:108",{"_index":3514,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:13",{"_index":3496,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:14",{"_index":3499,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:15",{"_index":3503,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:16",{"_index":3498,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:17",{"_index":3494,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:18",{"_index":3500,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:19",{"_index":3495,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:22",{"_index":3504,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:27",{"_index":3520,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:31",{"_index":3506,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:32",{"_index":3505,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:34",{"_index":3519,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:35",{"_index":3518,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:37",{"_index":3516,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:38",{"_index":3493,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:40",{"_index":3517,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:50",{"_index":3508,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:60",{"_index":3507,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:86",{"_index":3515,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:94",{"_index":3509,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:99",{"_index":3510,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phone",{"_index":3556,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/postal",{"_index":3602,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/province/province.component.ts",{"_index":3642,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["projects/common/lib/components/province/province.component.ts:36",{"_index":3648,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:37",{"_index":3654,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:38",{"_index":3650,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:39",{"_index":3647,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:40",{"_index":3655,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:41",{"_index":3652,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:42",{"_index":3651,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:43",{"_index":3656,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:46",{"_index":3657,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:51",{"_index":3669,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:55",{"_index":3659,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:56",{"_index":3658,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:58",{"_index":3668,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:60",{"_index":3666,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:61",{"_index":3646,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:63",{"_index":3667,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:70",{"_index":3661,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:78",{"_index":3660,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:83",{"_index":3665,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:90",{"_index":3662,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:95",{"_index":3663,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:99",{"_index":3664,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts",{"_index":3698,"title":{},"body":{"components/RadioComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:49",{"_index":3729,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:50",{"_index":3723,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:51",{"_index":3724,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:52",{"_index":3728,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:53",{"_index":3731,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:54",{"_index":3730,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:55",{"_index":3727,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:56",{"_index":3726,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:58",{"_index":3732,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:60",{"_index":3739,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:61",{"_index":3722,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:63",{"_index":3740,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:70",{"_index":3737,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:77",{"_index":3733,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:81",{"_index":3734,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:85",{"_index":3738,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:89",{"_index":3735,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts",{"_index":3869,"title":{},"body":{"components/SinComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:102",{"_index":3890,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:106",{"_index":3891,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:110",{"_index":3893,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:13",{"_index":3878,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:14",{"_index":3881,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:15",{"_index":3882,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:16",{"_index":3880,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:17",{"_index":3876,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:18",{"_index":3883,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:21",{"_index":3884,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:29",{"_index":3899,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:34",{"_index":3886,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:35",{"_index":3885,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:37",{"_index":3898,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:38",{"_index":3897,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:40",{"_index":3895,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:41",{"_index":3875,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:43",{"_index":3896,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:53",{"_index":3888,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:63",{"_index":3887,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:89",{"_index":3894,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:97",{"_index":3889,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts",{"_index":3908,"title":{},"body":{"components/StreetComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/street/street.component.ts:104",{"_index":3943,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:108",{"_index":3944,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:113",{"_index":3937,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:128",{"_index":3934,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:133",{"_index":3940,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:16",{"_index":3921,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:17",{"_index":3924,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:20",{"_index":3923,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:21",{"_index":3919,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:22",{"_index":3926,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:23",{"_index":3925,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:26",{"_index":3927,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:31",{"_index":3957,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:35",{"_index":3930,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:36",{"_index":3928,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:37",{"_index":3929,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:39",{"_index":3954,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:45",{"_index":3955,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:48",{"_index":3948,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:50",{"_index":3952,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:52",{"_index":3946,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:53",{"_index":3918,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:55",{"_index":3947,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:63",{"_index":3931,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:78",{"_index":3941,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:87",{"_index":3932,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:92",{"_index":3945,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:99",{"_index":3942,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts",{"_index":3985,"title":{},"body":{"components/ThumbnailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:12",{"_index":3996,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:13",{"_index":3997,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:14",{"_index":3998,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:15",{"_index":4004,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:17",{"_index":3995,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:22",{"_index":4006,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:23",{"_index":4002,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:41",{"_index":4000,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:47",{"_index":4003,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:52",{"_index":4001,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts",{"_index":4017,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:11",{"_index":4021,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:12",{"_index":4022,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:13",{"_index":4020,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:19",{"_index":4023,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/wizard",{"_index":4038,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/xicon",{"_index":4116,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts",{"_index":577,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts:10",{"_index":610,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:11",{"_index":594,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:12",{"_index":595,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:13",{"_index":596,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:14",{"_index":601,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:15",{"_index":598,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:16",{"_index":609,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:17",{"_index":597,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:18",{"_index":599,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:19",{"_index":600,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:29",{"_index":618,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:42",{"_index":613,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:48",{"_index":635,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:59",{"_index":612,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:7",{"_index":608,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/base.ts",{"_index":662,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["projects/common/lib/models/base.ts:11",{"_index":669,"title":{},"body":{"classes/Base.html":{}}}],["projects/common/lib/models/container.ts",{"_index":1332,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["projects/common/lib/models/container.ts:12",{"_index":1340,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:18",{"_index":1343,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:22",{"_index":1349,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/images.model.ts",{"_index":1089,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/models/images.model.ts:16",{"_index":1161,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:17",{"_index":1163,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:18",{"_index":1160,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:20",{"_index":1162,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:29",{"_index":1100,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:35",{"_index":1105,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:36",{"_index":1102,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:38",{"_index":1110,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:39",{"_index":1112,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:40",{"_index":1111,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:41",{"_index":1108,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:42",{"_index":1109,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:43",{"_index":1107,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:46",{"_index":1106,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:48",{"_index":1104,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:49",{"_index":1101,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:56",{"_index":1166,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{}}}],["projects/common/lib/models/images.model.ts:60",{"_index":1168,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:61",{"_index":1167,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:68",{"_index":1169,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/mask.model.ts",{"_index":3210,"title":{},"body":{"classes/MaskModel.html":{},"coverage.html":{}}}],["projects/common/lib/models/mask.model.ts:11",{"_index":3223,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:12",{"_index":3224,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:14",{"_index":3221,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:15",{"_index":3222,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:17",{"_index":3215,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:18",{"_index":3214,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:27",{"_index":3219,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:34",{"_index":3217,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/person.model.ts",{"_index":3422,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["projects/common/lib/models/person.model.ts:14",{"_index":3432,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:15",{"_index":3434,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:16",{"_index":3433,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:19",{"_index":3430,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:22",{"_index":3429,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:25",{"_index":3442,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:35",{"_index":3446,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:45",{"_index":3440,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:53",{"_index":3449,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:71",{"_index":3453,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:85",{"_index":3436,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:91",{"_index":3435,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/simple",{"_index":3862,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["projects/common/lib/services/abstract",{"_index":103,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["projects/common/lib/services/check",{"_index":850,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts",{"_index":2965,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts:22",{"_index":3012,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:23",{"_index":3013,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:24",{"_index":3008,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:31",{"_index":3010,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:52",{"_index":3011,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:73",{"_index":3009,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/logger.service.ts",{"_index":1171,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/services/logger.service.ts:110",{"_index":1304,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:129",{"_index":1305,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:147",{"_index":1330,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:154",{"_index":1313,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:158",{"_index":1311,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:166",{"_index":1312,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:179",{"_index":1173,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["projects/common/lib/services/logger.service.ts:23",{"_index":1319,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:29",{"_index":1301,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:35",{"_index":1325,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:39",{"_index":1323,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:43",{"_index":1329,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:47",{"_index":1327,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:51",{"_index":1314,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:55",{"_index":1307,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:59",{"_index":1309,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:79",{"_index":1302,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:84",{"_index":1303,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:93",{"_index":1310,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/route",{"_index":3745,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/shared",{"_index":3791,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["projects/common/package.json",{"_index":4793,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics",{"_index":4721,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["projects/common/schematics/package.json",{"_index":4794,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics/src/copy",{"_index":4507,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/helpers/json.ts",{"_index":4511,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/moh",{"_index":4514,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/version",{"_index":4541,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/src/public_api.ts",{"_index":4817,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/test.ts",{"_index":4552,"title":{},"body":{"coverage.html":{}}}],["projectversion",{"_index":4545,"title":{},"body":{"coverage.html":{}}}],["promise",{"_index":342,"title":{},"body":{"classes/AbstractTestPage.html":{},"guards/RouteGuardService.html":{}}}],["proper",{"_index":1131,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["properly",{"_index":2878,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["properties/values",{"_index":1294,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["property",{"_index":1207,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["props",{"_index":2994,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress",{"_index":3004,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.indexof",{"_index":3001,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.slice(0",{"_index":3002,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.localityname",{"_index":2996,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.provincecode",{"_index":3003,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["protection",{"_index":3119,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["protractor",{"_index":424,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["provide",{"_index":204,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["provided",{"_index":320,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["providedin",{"_index":905,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["provident",{"_index":1026,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["providers",{"_index":217,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["provides",{"_index":234,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{}}}],["province",{"_index":383,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"license.html":{}}}],["province'},{'name",{"_index":548,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["province.component.html",{"_index":3644,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province.component.scss",{"_index":3643,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province/country",{"_index":630,"title":{},"body":{"classes/Address.html":{}}}],["province_",{"_index":3649,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province_list",{"_index":3653,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["provincecode",{"_index":3672,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecomponent",{"_index":547,"title":{"components/ProvinceComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["provincelist",{"_index":3645,"title":{"interfaces/ProvinceList.html":{}},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["provincial",{"_index":3123,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["provision",{"_index":1376,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["prt",{"_index":1800,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pry",{"_index":1790,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pse",{"_index":1783,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pswdfeedback",{"_index":3408,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdfeedback.score",{"_index":3409,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdstrength",{"_index":3320,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["public",{"_index":220,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["publish",{"_index":4803,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["publishing",{"_index":4712,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["puerto",{"_index":1803,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pull",{"_index":4642,"title":{},"body":{"index.html":{}}}],["pure",{"_index":4704,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["purposes",{"_index":3447,"title":{},"body":{"classes/Person.html":{}}}],["pushes",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3025,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pwdcriteria",{"_index":3327,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pyf",{"_index":1591,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["qat",{"_index":1805,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["qatar",{"_index":1806,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["qc",{"_index":3688,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["quality",{"_index":2506,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["quam",{"_index":1052,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quasi",{"_index":1020,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quebec",{"_index":3689,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["querylist",{"_index":4067,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["queryparams",{"_index":125,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["question",{"_index":2872,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["questions",{"_index":3128,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["quia",{"_index":1027,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quidem",{"_index":1069,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quis",{"_index":1049,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quisquam",{"_index":1040,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["radio",{"_index":3699,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["radio's",{"_index":3710,"title":{},"body":{"components/RadioComponent.html":{}}}],["radio'},{'name",{"_index":550,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["radio.component.html",{"_index":3719,"title":{},"body":{"components/RadioComponent.html":{}}}],["radio.component.scss",{"_index":3718,"title":{},"body":{"components/RadioComponent.html":{}}}],["radiocomponent",{"_index":549,"title":{"components/RadioComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["radiolabels",{"_index":3711,"title":{},"body":{"components/RadioComponent.html":{}}}],["radios",{"_index":3700,"title":{},"body":{"components/RadioComponent.html":{}}}],["ran",{"_index":4782,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["range",{"_index":2845,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rapid",{"_index":3178,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rapidresponsecode",{"_index":3181,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ratio",{"_index":2502,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ratione",{"_index":1064,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["rawimagefile",{"_index":1126,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["re",{"_index":2061,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["reach",{"_index":2766,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reactive",{"_index":3233,"title":{},"body":{"components/NameComponent.html":{},"changelog.html":{}}}],["read",{"_index":2466,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["readable",{"_index":305,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["reader",{"_index":2659,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.onload",{"_index":2715,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(blob",{"_index":2736,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(imagefile",{"_index":2791,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.result",{"_index":2777,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["readers",{"_index":282,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["readme",{"_index":4245,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["readpdf(pdffile",{"_index":2792,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reason",{"_index":2435,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["receiving",{"_index":1225,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["recommend",{"_index":3312,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["redable",{"_index":341,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["reduced",{"_index":2192,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ref",{"_index":2680,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["refactor",{"_index":2268,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{}}}],["refactored",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":4335,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["reflect",{"_index":312,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["refnameval",{"_index":314,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["regex",{"_index":646,"title":{},"body":{"classes/Address.html":{}}}],["regex.test(this.postal",{"_index":649,"title":{},"body":{"classes/Address.html":{}}}],["regexp",{"_index":3342,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["regexp('^[vv]\\\\d[abceghj",{"_index":4030,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["regexp(address.postalcodebcregex",{"_index":648,"title":{},"body":{"classes/Address.html":{}}}],["register",{"_index":833,"title":{},"body":{"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"additional-documentation/getting-started.html":{}}}],["registeronchange",{"_index":742,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registeronchange(fn",{"_index":758,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registerontouched",{"_index":743,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registerontouched(fn",{"_index":761,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registration",{"_index":3757,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["registration.module.ts",{"_index":216,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["registrationservice",{"_index":219,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["reject",{"_index":4140,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["related",{"_index":4187,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["relates",{"_index":4784,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["release",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":4714,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["remainder",{"_index":3544,"title":{},"body":{"components/PhnComponent.html":{}}}],["remove",{"_index":2368,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"components/ThumbnailComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["removed",{"_index":2569,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["removing",{"_index":2757,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rename",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":3133,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rendering",{"_index":2434,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["repellat",{"_index":1039,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["replace",{"_index":3390,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{}}}],["repo",{"_index":4603,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo=https://github.com/bcgov/prime",{"_index":4604,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reprehenderit",{"_index":1055,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["republic",{"_index":1516,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["repudiandae",{"_index":1061,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["repurpose",{"_index":1287,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["req",{"_index":3535,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["request",{"_index":130,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{},"additional-documentation/getting-started.html":{}}}],["request_method",{"_index":1186,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["requests",{"_index":144,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{}}}],["require",{"_index":4554,"title":{},"body":{"coverage.html":{}}}],["require('blueimp",{"_index":2359,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('pdfjs",{"_index":2366,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('sha1",{"_index":2362,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["required",{"_index":50,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["requiredmsgseg",{"_index":2904,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["requirements",{"_index":3308,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["requires",{"_index":683,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["requisite",{"_index":3779,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["rerum",{"_index":1023,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["reset",{"_index":824,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["resetinputfields",{"_index":2827,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizeimage",{"_index":2657,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizing",{"_index":2493,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolution",{"_index":2521,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolve",{"_index":4761,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["respective",{"_index":134,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["responding",{"_index":1276,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["response",{"_index":799,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{}}}],["responsetype",{"_index":1270,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["rest",{"_index":2842,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["restrictdate",{"_index":1984,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["result",{"_index":99,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["results",{"_index":101,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["retains",{"_index":2500,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retry",{"_index":2745,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrystrategy(maxretry",{"_index":2747,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrywhen",{"_index":2342,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["return",{"_index":89,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["returned",{"_index":802,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["returns",{"_index":57,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["reu",{"_index":1807,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["reviewmode",{"_index":3992,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["rica",{"_index":1540,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["rico",{"_index":1804,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["right",{"_index":387,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["rimraf",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["risky",{"_index":3352,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["role=\"progressbar",{"_index":3412,"title":{},"body":{"components/PasswordComponent.html":{}}}],["role=alert",{"_index":438,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["romania",{"_index":1810,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["root",{"_index":906,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["rotate",{"_index":2485,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rou",{"_index":1809,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["route",{"_index":74,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["routeguard",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["routeguardservice",{"_index":214,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{}}}],["routeisactive",{"_index":3032,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routeisactive(url",{"_index":3044,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routepath",{"_index":1347,"title":{},"body":{"classes/Container.html":{}}}],["routepath.split",{"_index":1351,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["router",{"_index":22,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["routerevents",{"_index":4043,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["routermodule",{"_index":3805,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["routerstatesnapshot",{"_index":3770,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routes",{"_index":3752,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing.modle.ts",{"_index":3758,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing=true",{"_index":4740,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["row",{"_index":3703,"title":{},"body":{"components/RadioComponent.html":{}}}],["rule",{"_index":4605,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rules",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":2021,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["running",{"_index":4378,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["runs",{"_index":67,"title":{},"body":{"classes/AbstractForm.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["runtime",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["rural",{"_index":3920,"title":{},"body":{"components/StreetComponent.html":{}}}],["rus",{"_index":1811,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["russian",{"_index":1812,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["rwa",{"_index":1814,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["rwanda",{"_index":1815,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["rxjs",{"_index":165,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":168,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["réunion",{"_index":1808,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["s",{"_index":2689,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["saba",{"_index":1478,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["safe",{"_index":4107,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["sahara",{"_index":1961,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["saint",{"_index":1817,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["salvador",{"_index":1567,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["same",{"_index":405,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["samoa",{"_index":1428,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["san",{"_index":1841,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sandwich",{"_index":1876,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sao",{"_index":1844,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sapiente",{"_index":1017,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["saskatchewan",{"_index":3691,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["satisfy",{"_index":2261,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["sau",{"_index":1847,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["saudi",{"_index":1848,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["save",{"_index":3543,"title":{},"body":{"components/PhnComponent.html":{},"index.html":{}}}],["saved",{"_index":2528,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["saving",{"_index":2760,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scale",{"_index":1158,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["scaled",{"_index":2712,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledimage",{"_index":2678,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledown",{"_index":1165,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledown(scale",{"_index":1151,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledwidth",{"_index":3988,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scaledwidthstring",{"_index":4008,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scalefactors",{"_index":2620,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.heightfactor",{"_index":2743,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.scaledown(reductionscalefactor",{"_index":2621,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.widthfactor",{"_index":2740,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaling",{"_index":2582,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan",{"_index":2340,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan((acc",{"_index":2750,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["schedule",{"_index":4084,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["schematic",{"_index":4403,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["schematiccreating",{"_index":4744,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schematics",{"_index":4401,"title":{"additional-documentation/local-development/schematics.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["schematics:moh",{"_index":4743,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schemtaics",{"_index":4720,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["school",{"_index":3099,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["scotia",{"_index":3683,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["screen",{"_index":281,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["script",{"_index":4429,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["scriptname",{"_index":4593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scripts",{"_index":4241,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["scroll",{"_index":4103,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrolldown",{"_index":261,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scrolls",{"_index":76,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollstepintoview",{"_index":4048,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrollup",{"_index":262,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scss",{"_index":4771,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["sdn",{"_index":1884,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["search",{"_index":1284,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/StreetComponent.html":{}}}],["searchtext",{"_index":3911,"title":{},"body":{"components/StreetComponent.html":{}}}],["secondary",{"_index":709,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["section",{"_index":3021,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["section'},{'name",{"_index":536,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["section.component",{"_index":3821,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["section.component.html",{"_index":3300,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.scss",{"_index":3299,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts",{"_index":3298,"title":{},"body":{"components/PageSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:11",{"_index":3301,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts:15",{"_index":3303,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section/page",{"_index":3297,"title":{},"body":{"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["sections",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["secure",{"_index":3094,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["security",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":213,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"license.html":{},"additional-documentation/local-development/components.html":{}}}],["select",{"_index":378,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["select/ng",{"_index":3824,"title":{},"body":{"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select[id=\"${labelid}\"]`)).click",{"_index":441,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["select[ng",{"_index":464,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectedday",{"_index":4129,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["selectedmonth",{"_index":2286,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["selectedyear",{"_index":2287,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["selectevent",{"_index":3917,"title":{},"body":{"components/StreetComponent.html":{}}}],["selectfilelabelref",{"_index":2388,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["selecting",{"_index":411,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/StreetComponent.html":{}}}],["selections",{"_index":2178,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["selectoption",{"_index":263,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectoption(labelid",{"_index":374,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selector",{"_index":474,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["selects",{"_index":377,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["self",{"_index":1081,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["self.dataservice.getmspuuid",{"_index":2627,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.handleerror(commonimageerror.wrongtype",{"_index":2683,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.logimageinfo(\"msp_file",{"_index":2733,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.resetinputfields",{"_index":2684,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sen",{"_index":1850,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["send",{"_index":122,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["sends",{"_index":408,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["sendspaenvserver(rapidresponsecode",{"_index":3179,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["senegal",{"_index":1851,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["september",{"_index":2043,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["sequence",{"_index":891,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["sequentially",{"_index":3749,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["sequi",{"_index":1079,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["serbia",{"_index":1853,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["server",{"_index":146,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["serverpayload",{"_index":803,"title":{"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["service",{"_index":108,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["service.ts",{"_index":105,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["service.ts:11",{"_index":118,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:16",{"_index":120,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:22",{"_index":127,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:30",{"_index":155,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:38",{"_index":157,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:52",{"_index":159,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:59",{"_index":141,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service/log.service",{"_index":2345,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["service/msp",{"_index":2347,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["servicename",{"_index":3035,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services",{"_index":4262,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["services/abstract",{"_index":3084,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["services/geocoder.service",{"_index":3958,"title":{},"body":{"components/StreetComponent.html":{}}}],["services/logger.service",{"_index":3083,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sessionid",{"_index":1185,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["set",{"_index":835,"title":{},"body":{"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["set('addressstring",{"_index":2985,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('autocomplete",{"_index":2982,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('brief",{"_index":2978,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('echo",{"_index":2977,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('matchprecisionnot",{"_index":2983,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('maxresults",{"_index":2976,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('minscore",{"_index":2975,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["setapplicationid(id",{"_index":1324,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setbuttongrpval",{"_index":744,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbuttongrpval(val",{"_index":763,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbypassguards(bypass",{"_index":897,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setcheckboxval(event",{"_index":962,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setday",{"_index":1979,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setday(value",{"_index":2008,"title":{},"body":{"components/DateComponent.html":{}}}],["setdisabledstate",{"_index":973,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":998,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["setfirstname(value",{"_index":2957,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setlastname(value",{"_index":2961,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmiddlename(value",{"_index":2960,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmonth",{"_index":1980,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setmonth(value",{"_index":2013,"title":{},"body":{"components/DateComponent.html":{}}}],["setname(fullname",{"_index":3452,"title":{},"body":{"classes/Person.html":{}}}],["setpagecomplete",{"_index":861,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpageincomplete",{"_index":862,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpassword",{"_index":3324,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["setpassword(password",{"_index":3360,"title":{},"body":{"components/PasswordComponent.html":{}}}],["setphonenumber",{"_index":3562,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setphonenumber(value",{"_index":3581,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setprogramname(name",{"_index":1328,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setprogresssteps",{"_index":1338,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["setprogresssteps(pageroutes",{"_index":1348,"title":{},"body":{"classes/Container.html":{}}}],["sets",{"_index":885,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"changelog.html":{}}}],["setseverity",{"_index":1299,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setseverity(severity",{"_index":1281,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setstarturl(url",{"_index":895,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setstatus",{"_index":3720,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstatus(evt",{"_index":3736,"title":{},"body":{"components/RadioComponent.html":{}}}],["settags",{"_index":1300,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["settags(message",{"_index":1288,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["settimeout",{"_index":2089,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["settimestamp",{"_index":1278,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setting",{"_index":2186,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["settings",{"_index":4626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setup",{"_index":202,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["setup:git",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["setuprequest",{"_index":113,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["setuprequest(observable",{"_index":156,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["seturl",{"_index":1245,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["seturl(newurl",{"_index":1194,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setvalue(val",{"_index":1008,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["setyear",{"_index":1981,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setyear(value",{"_index":2016,"title":{},"body":{"components/DateComponent.html":{}}}],["severity",{"_index":1237,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["severitylevels",{"_index":1282,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["seychelles",{"_index":1855,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sgp",{"_index":1859,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sgs",{"_index":1875,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sha1",{"_index":2361,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["sha1(mspimage.filecontent",{"_index":2720,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1_",{"_index":2365,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1sum",{"_index":2430,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["shared",{"_index":3096,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["sharedcoremodule",{"_index":3787,"title":{"modules/SharedCoreModule.html":{}},"body":{"modules/SharedCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["sharing",{"_index":358,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["shn",{"_index":1819,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["shouldn't",{"_index":3189,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["show",{"_index":47,"title":{},"body":{"classes/AbstractForm.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["showerror",{"_index":747,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/RadioComponent.html":{}}}],["showfullsizeview",{"_index":3169,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["shown",{"_index":3089,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["showpasswordstrength",{"_index":3328,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["shows",{"_index":3704,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["side",{"_index":1261,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["sierra",{"_index":1857,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["similar",{"_index":2867,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/StreetComponent.html":{},"directives/YearValidateDirective.html":{}}}],["simple",{"_index":854,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["simplechanges",{"_index":2202,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["simpledate",{"_index":1991,"title":{"interfaces/SimpleDate.html":{}},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["simpler",{"_index":4770,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["simplicity",{"_index":687,"title":{},"body":{"components/ButtonComponent.html":{}}}],["simply",{"_index":2756,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["simulates",{"_index":3979,"title":{},"body":{"components/StreetComponent.html":{}}}],["sin",{"_index":3870,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["sin'},{'name",{"_index":552,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["sin.component.html",{"_index":3872,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.component.scss",{"_index":3871,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.length",{"_index":3906,"title":{},"body":{"components/SinComponent.html":{}}}],["sin_",{"_index":3879,"title":{},"body":{"components/SinComponent.html":{}}}],["sincomponent",{"_index":551,"title":{"components/SinComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singapore",{"_index":1860,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["single",{"_index":3018,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageFrameworkComponent.html":{},"components/RadioComponent.html":{}}}],["sinlist",{"_index":3874,"title":{},"body":{"components/SinComponent.html":{}}}],["sint",{"_index":1476,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sinvalid",{"_index":3901,"title":{},"body":{"components/SinComponent.html":{}}}],["sit",{"_index":1012,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["site",{"_index":1378,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["size",{"_index":1097,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["sizetxt",{"_index":1098,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sizeunit",{"_index":1099,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sjm",{"_index":1887,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sk",{"_index":3690,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["skiblibcheck",{"_index":4629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skip",{"_index":280,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["skip_content_hash",{"_index":3029,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiplibcheck",{"_index":4758,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["skiplibcheck=false",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["skiplinkpath",{"_index":3030,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiptocontentbutton",{"_index":248,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["slb",{"_index":1868,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sle",{"_index":1856,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["slightly",{"_index":3057,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slot",{"_index":1372,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slots",{"_index":1365,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slovakia",{"_index":1865,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["slovenia",{"_index":1867,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["slv",{"_index":1565,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["small",{"_index":2520,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["smooth",{"_index":96,"title":{},"body":{"classes/AbstractForm.html":{}}}],["smr",{"_index":1840,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["social",{"_index":3877,"title":{},"body":{"components/SinComponent.html":{}}}],["software",{"_index":4663,"title":{},"body":{"license.html":{}}}],["solomon",{"_index":1869,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["solve",{"_index":2614,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["som",{"_index":1870,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["somalia",{"_index":1871,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["something",{"_index":626,"title":{},"body":{"classes/Address.html":{}}}],["sortobjectbykeys",{"_index":4513,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortobjectbykeys(obj",{"_index":4611,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sorts",{"_index":4612,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["south",{"_index":1873,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["southern",{"_index":1594,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["soutput",{"_index":2693,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["spa",{"_index":3071,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag",{"_index":3075,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_message",{"_index":3076,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_acl_maintenance_flag\":\"\",\"spa_env_msp_acl_maintenance_message",{"_index":3159,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag",{"_index":3077,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag\":\"\",\"spa_env_msp_maintenance_message",{"_index":3160,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_message",{"_index":3078,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_name",{"_index":3180,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_now",{"_index":3079,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_end",{"_index":3080,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start",{"_index":3081,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end\":\"\",\"spa_env_now",{"_index":3162,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["space",{"_index":2169,"title":{},"body":{"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["space/workspace/moh",{"_index":4799,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["spaces",{"_index":3230,"title":{},"body":{"classes/MaskModel.html":{}}}],["spaenvres",{"_index":3153,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spain",{"_index":1880,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["special",{"_index":2433,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{}}}],["specific",{"_index":627,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/RadioComponent.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["specifically",{"_index":4628,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["specificmember",{"_index":3717,"title":{},"body":{"components/RadioComponent.html":{}}}],["specified",{"_index":131,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["spinner",{"_index":49,"title":{},"body":{"classes/AbstractForm.html":{}}}],["split",{"_index":2625,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["splits",{"_index":2979,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["splunk",{"_index":1138,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["spm",{"_index":1833,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["srb",{"_index":1852,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["src/version.js",{"_index":4602,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sri",{"_index":1882,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ssd",{"_index":1877,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["stable",{"_index":2997,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["standard",{"_index":623,"title":{},"body":{"classes/Address.html":{}}}],["start",{"_index":4402,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["start/end",{"_index":4096,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["start/files/app_component_html.ts",{"_index":4517,"title":{},"body":{"coverage.html":{}}}],["start/files/favicon_ico.ts",{"_index":4520,"title":{},"body":{"coverage.html":{}}}],["start/files/gov3_bc_logo_png_base64.ts",{"_index":4522,"title":{},"body":{"coverage.html":{}}}],["start/files/myriadwebpro_ttf_base64.ts",{"_index":4515,"title":{},"body":{"coverage.html":{}}}],["start/files/overrides_scss.ts",{"_index":4524,"title":{},"body":{"coverage.html":{}}}],["start/files/styles.ts",{"_index":4526,"title":{},"body":{"coverage.html":{}}}],["start/files/variables_scss.ts",{"_index":4528,"title":{},"body":{"coverage.html":{}}}],["start/index.ts",{"_index":4530,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start/package",{"_index":4537,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":4145,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["starting",{"_index":4683,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["starts",{"_index":2634,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["starturl",{"_index":863,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["state",{"_index":1473,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":4440,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1734,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":587,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["status",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["statuschange",{"_index":3721,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["statustext",{"_index":1230,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["step",{"_index":2584,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["step.title",{"_index":4115,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepcontainer",{"_index":4044,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepper",{"_index":1341,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["stepper/wizardprogress",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["steps",{"_index":2449,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["still",{"_index":2585,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["store",{"_index":3949,"title":{},"body":{"components/StreetComponent.html":{}}}],["stp",{"_index":1843,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["str",{"_index":2296,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["street",{"_index":589,"title":{},"body":{"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["street'},{'name",{"_index":554,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["street.component.html",{"_index":3910,"title":{},"body":{"components/StreetComponent.html":{}}}],["street.component.scss",{"_index":3909,"title":{},"body":{"components/StreetComponent.html":{}}}],["street_",{"_index":3922,"title":{},"body":{"components/StreetComponent.html":{}}}],["streetcomponent",{"_index":553,"title":{"components/StreetComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["strength",{"_index":3305,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["strengthpercentage",{"_index":3321,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["string",{"_index":71,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":1135,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/YearValidateDirective.html":{}}}],["style",{"_index":678,"title":{},"body":{"components/ButtonComponent.html":{},"components/RadioComponent.html":{}}}],["style.width]='strengthpercentage",{"_index":3413,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style.width]=\\'strengthpercentage",{"_index":3421,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style=scss",{"_index":4739,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styles",{"_index":1363,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["styles/dist/common",{"_index":4806,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/dist/commonwe",{"_index":4801,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common",{"_index":4800,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common/schematics",{"_index":4736,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["stylesscss",{"_index":4527,"title":{},"body":{"coverage.html":{}}}],["styleurls",{"_index":476,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["styling",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["stylings",{"_index":697,"title":{},"body":{"components/ButtonComponent.html":{}}}],["stylized",{"_index":3015,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sub",{"_index":2980,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["subclasses",{"_index":1290,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["subfolder",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3951,"title":{},"body":{"components/StreetComponent.html":{}}}],["submission",{"_index":1210,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["submit",{"_index":269,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["submitbar",{"_index":3283,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["submitlabel",{"_index":2855,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["subscribe",{"_index":1205,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["subscribe(evt",{"_index":2541,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["subscribe(response",{"_index":3196,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["subscribe(this.updateskipcontentlink.bind(this",{"_index":3052,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(url",{"_index":4080,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["subscription",{"_index":4064,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["success",{"_index":193,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"coverage.html":{}}}],["success_fetch_img",{"_index":4584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["success_verify_answer_correct",{"_index":4587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":2624,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["such",{"_index":694,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"additional-documentation/getting-started.html":{}}}],["sudan",{"_index":1878,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sum",{"_index":3545,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["sumofremainders",{"_index":3546,"title":{},"body":{"components/PhnComponent.html":{}}}],["sunhighlight",{"_index":2238,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["super",{"_index":961,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["super(http",{"_index":1190,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["support",{"_index":4675,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":1885,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sure",{"_index":2137,"title":{},"body":{"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"guards/RouteGuardService.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["suriname",{"_index":1886,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["svalbard",{"_index":1888,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["svg",{"_index":4676,"title":{},"body":{"modules.html":{}}}],["svk",{"_index":1864,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["svn",{"_index":1866,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["swaziland",{"_index":1892,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["swe",{"_index":1893,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sweden",{"_index":1894,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["switch",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":4092,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["switchmap",{"_index":3960,"title":{},"body":{"components/StreetComponent.html":{}}}],["switchmap(searchphrase",{"_index":3964,"title":{},"body":{"components/StreetComponent.html":{}}}],["switzerland",{"_index":1896,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["swz",{"_index":1891,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sxm",{"_index":1861,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["syc",{"_index":1854,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["symlink",{"_index":4741,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["syr",{"_index":1897,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["syrian",{"_index":1898,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["system",{"_index":2447,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["t",{"_index":128,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["tab",{"_index":3020,"title":{},"body":{"components/HeaderComponent.html":{},"components/StreetComponent.html":{}}}],["tabbed",{"_index":284,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["table",{"_index":3725,"title":{},"body":{"components/RadioComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4555,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":2773,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tagging",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1286,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["taiwan",{"_index":1901,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tajikistan",{"_index":1903,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["take",{"_index":3106,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["takes",{"_index":161,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{}}}],["taking",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["tanzania",{"_index":1905,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tap",{"_index":167,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["tap(log",{"_index":3966,"title":{},"body":{"components/StreetComponent.html":{}}}],["target",{"_index":135,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{}}}],["targetpath",{"_index":4620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tca",{"_index":1927,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tcd",{"_index":1517,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tell",{"_index":4735,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["template",{"_index":467,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["templates",{"_index":4773,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["templateurl",{"_index":478,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["temporary",{"_index":2664,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["temporibus",{"_index":1038,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["tenetur",{"_index":1044,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["territories",{"_index":1595,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["territory",{"_index":1493,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["test",{"_index":232,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/NameComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["test(var1",{"_index":2601,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["testing",{"_index":350,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["tests",{"_index":238,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Person.html":{}}}],["text",{"_index":300,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/MaskModel.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"dependencies.html":{}}}],["text)).click",{"_index":452,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["text.touppercase",{"_index":3228,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{}}}],["textmaskmodule",{"_index":3818,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["tgo",{"_index":1912,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tha",{"_index":1907,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["thailand",{"_index":1908,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["thanks",{"_index":4320,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["that's",{"_index":1234,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["then((data",{"_index":92,"title":{},"body":{"classes/AbstractForm.html":{}}}],["there's",{"_index":2262,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["theyt",{"_index":2767,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["things",{"_index":3309,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this._applicationheadermap.get(this.processname",{"_index":3194,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._bypassguards",{"_index":908,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._continue(state.url",{"_index":3777,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this._headers",{"_index":195,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this._headers.get",{"_index":1192,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set",{"_index":1191,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('severity",{"_index":1283,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('tags",{"_index":1289,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('timestamp",{"_index":1279,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._log",{"_index":1199,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._logerror",{"_index":1202,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._onchange",{"_index":776,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this._onchange(event",{"_index":965,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this._onchange(event.jsdate",{"_index":2276,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this._onchange(evt",{"_index":3742,"title":{},"body":{"components/RadioComponent.html":{}}}],["this._onchange(null",{"_index":2272,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this._onchange(this.person",{"_index":2959,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._onchange(true",{"_index":3176,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._onchange(val",{"_index":773,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this._onchange(value",{"_index":3600,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this._onchange(values",{"_index":2956,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._ontouched",{"_index":774,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this._sendlog(errormessage",{"_index":1220,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._sendlog(message",{"_index":1217,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._starturl",{"_index":907,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.accept.emit(fn",{"_index":3208,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.accept.emit(true",{"_index":3173,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.activeindex",{"_index":4081,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.addressline1",{"_index":639,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline2",{"_index":653,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline3",{"_index":655,"title":{},"body":{"classes/Address.html":{}}}],["this.application",{"_index":2405,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.base_url}/addresses.json",{"_index":2972,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.blurevent.emit",{"_index":1084,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.browsefileref.nativeelement",{"_index":2829,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.click",{"_index":2613,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.value",{"_index":2832,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.btnclick.emit($event",{"_index":724,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["this.buttongroup.nativeelement.focus",{"_index":775,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.cancontinue",{"_index":2864,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.capturefileref.nativeelement",{"_index":2831,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.capturefileref.nativeelement.value",{"_index":2833,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.cd.detach",{"_index":4086,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.cd.detectchanges",{"_index":2092,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.checkbox.nativeelement.focus",{"_index":966,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.checkimagedimensions(mspimage",{"_index":2575,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.city",{"_index":638,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{}}}],["this.cleardate",{"_index":2271,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.click.emit",{"_index":4125,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.clickevent.emit",{"_index":4124,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.close.emit",{"_index":3175,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.commonyearvalidate",{"_index":4139,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["this.componentlabel",{"_index":3380,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.consentmodal.showfullsizeview",{"_index":3138,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.continuebutton",{"_index":428,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.continuebutton.click",{"_index":427,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.controlcontainer",{"_index":2420,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.controldir",{"_index":3265,"title":{},"body":{"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.controldir.control.seterrors",{"_index":3528,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.controldir.dirty",{"_index":3267,"title":{},"body":{"components/NameComponent.html":{}}}],["this.controldir.disabled",{"_index":3266,"title":{},"body":{"components/NameComponent.html":{}}}],["this.controldir.touched",{"_index":3268,"title":{},"body":{"components/NameComponent.html":{}}}],["this.convertdatetosimpledate(this.disablesince",{"_index":2250,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.convertdatetosimpledate(today",{"_index":2254,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.convertroutetotitle(page.path",{"_index":1358,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.country",{"_index":642,"title":{},"body":{"classes/Address.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["this.criteriamsg",{"_index":3389,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.cutoffdate.emit(this.spaenvres",{"_index":3206,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.data",{"_index":777,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["this.datachange.emit(this.data",{"_index":964,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.datachange.emit(val",{"_index":772,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.dataservice.getmspuuid",{"_index":2813,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.date",{"_index":2079,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.date.day",{"_index":2073,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.date.month",{"_index":2071,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.date.year",{"_index":2075,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.datechange.emit",{"_index":2081,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.datechange.emit(event.jsdate",{"_index":2275,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dateformat",{"_index":2237,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dateofbirth",{"_index":3467,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.day",{"_index":3464,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.month",{"_index":3463,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.year",{"_index":3462,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth[key",{"_index":3468,"title":{},"body":{"classes/Person.html":{}}}],["this.datepickeroptions",{"_index":2236,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disablesince",{"_index":2249,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disableuntil",{"_index":2252,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorheight",{"_index":2244,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorwidth",{"_index":2246,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dayref",{"_index":2082,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.disabled",{"_index":1087,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.displaymask",{"_index":3639,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.dobformat",{"_index":3465,"title":{},"body":{"classes/Person.html":{}}}],["this.errmsg",{"_index":2949,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.criteria",{"_index":3396,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.minlength",{"_index":3394,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.required",{"_index":3392,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errordocument.emit(mspimage",{"_index":2824,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.errormessages",{"_index":2068,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.criteria",{"_index":3395,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.minlength",{"_index":3393,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.required",{"_index":3391,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.firstname",{"_index":2943,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.form",{"_index":2063,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.form.controls[this.daylabelforid",{"_index":2090,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.controls[this.daylabelforid].updatevalueandvalidity",{"_index":2091,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.form.get(x).markastouched",{"_index":98,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.form.valid",{"_index":90,"title":{},"body":{"classes/AbstractForm.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.form.valuechanges.pipe(debouncetime(0)).subscribe((values",{"_index":2954,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.fullsizeviewmodal.config.backdrop",{"_index":3170,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.config.keyboard",{"_index":3171,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.hide",{"_index":3174,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.show",{"_index":3172,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.generateskiptocontentlink",{"_index":3056,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.geocoderservice.lookup(searchphrase",{"_index":3965,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.get",{"_index":4699,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.get(this.address_url",{"_index":2986,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.getactiveindex(this.router.url",{"_index":4085,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getactiveindex(url",{"_index":4082,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getapplicationtype",{"_index":2406,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.getnamecomponent(labelname)).getattribute('value",{"_index":437,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.getnumericvalue",{"_index":2077,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.getpasswordstrength",{"_index":3400,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.geturlindex",{"_index":911,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.handleerror(commonimageerror.alreadyexists",{"_index":2567,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopen",{"_index":2596,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopenpdf",{"_index":2598,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toobig",{"_index":2590,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toosmall",{"_index":2576,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleimagefile(file",{"_index":2577,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.heightfactor",{"_index":1157,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.http.get(url",{"_index":178,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.http.post(apibaseurl",{"_index":813,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.http.post(url",{"_index":182,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.httpclient",{"_index":808,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.httpoptions",{"_index":175,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.id",{"_index":2419,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageobject.naturalheight).tofixed(0",{"_index":4011,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.imageobject.naturalwidth",{"_index":4010,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.images",{"_index":2566,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.filter(x",{"_index":2835,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.length",{"_index":2840,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.push(mspimage",{"_index":2815,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageschange.emit(this.images",{"_index":2816,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.inmaintenance",{"_index":3168,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.isbcphn",{"_index":3527,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.isdate(this.disablesince",{"_index":2248,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.isdate(this.disableuntil",{"_index":2251,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.isdobempty",{"_index":3461,"title":{},"body":{"classes/Person.html":{}}}],["this.isloading",{"_index":2863,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.ispagelistempty",{"_index":909,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.isundermaintenance",{"_index":3167,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.label",{"_index":945,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{}}}],["this.labeltext",{"_index":2235,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.lastname",{"_index":2945,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.loghttprequeststoconsole",{"_index":180,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.logimageinfo('msp_file",{"_index":2811,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.logservice.log",{"_index":1209,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({event",{"_index":3185,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({name",{"_index":2623,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.maintenanceflag",{"_index":3200,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.maintenancemessage",{"_index":3201,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.mask",{"_index":3523,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.maxlen",{"_index":3270,"title":{},"body":{"components/NameComponent.html":{}}}],["this.middlename",{"_index":2947,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.minlen",{"_index":3382,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg1",{"_index":3387,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg2",{"_index":3388,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.model",{"_index":2259,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this.monthref",{"_index":2078,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.namestr",{"_index":3262,"title":{},"body":{"components/NameComponent.html":{}}}],["this.ngmodelchange.emit",{"_index":2128,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["this.ngxdp",{"_index":2277,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.ngxdp.cleardate",{"_index":2280,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.noidimage",{"_index":2446,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.objectid",{"_index":984,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.observablefromfiles(filelist",{"_index":2561,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.onchange.emit(this.person",{"_index":2958,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onchange.emit(this.phonenumber",{"_index":3599,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.onchange.emit(values",{"_index":2955,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onerror(err",{"_index":3969,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.onlyfuturedates",{"_index":2253,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.pagechecklist",{"_index":917,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.filter",{"_index":925,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.findindex",{"_index":929,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.length",{"_index":932,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.map((item",{"_index":918,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx",{"_index":922,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx].iscomplete",{"_index":920,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.password",{"_index":3398,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.passwordchange.emit",{"_index":3402,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.pattern",{"_index":2951,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.pcformat.test",{"_index":3641,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.person",{"_index":2942,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.firstname",{"_index":2944,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.lastname",{"_index":2946,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.middlename",{"_index":2948,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.phn",{"_index":3522,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phnlist",{"_index":3529,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phnlist.find",{"_index":3531,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phnlist.length",{"_index":3530,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phonenumber",{"_index":3598,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.placeholder",{"_index":3595,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.post()these",{"_index":4700,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.post(this.url",{"_index":1255,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.postal",{"_index":644,"title":{},"body":{"classes/Address.html":{}}}],["this.postal.length",{"_index":645,"title":{},"body":{"classes/Address.html":{}}}],["this.postalcode",{"_index":3638,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.progresssteps",{"_index":1355,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.progresssteps.findindex(x",{"_index":4099,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.progresssteps.length",{"_index":4089,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.province",{"_index":643,"title":{},"body":{"classes/Address.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.pswdstrength",{"_index":3399,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.readimage(file",{"_index":2641,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.required",{"_index":2839,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.requiredmsgseg",{"_index":2950,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.resetinputfields",{"_index":2568,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage",{"_index":2632,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage(image",{"_index":2648,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router",{"_index":86,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.events.pipe",{"_index":3049,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.router.navigate([this.service.getstarturl",{"_index":3781,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.router.navigate([url",{"_index":91,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.url",{"_index":912,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.router.url.includes(url",{"_index":3054,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.url}#content",{"_index":3066,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.routerevents",{"_index":4077,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.routerevents$.unsubscribe",{"_index":4087,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.scaledwidth",{"_index":4013,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.scrollstepintoview",{"_index":4083,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.search",{"_index":3971,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.searchtext$.next(this.search",{"_index":3978,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.searchtext$.pipe",{"_index":3962,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.selectedday",{"_index":4134,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["this.selectedmonth",{"_index":2293,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["this.selectedyear",{"_index":2292,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["this.selectevent.emit",{"_index":3984,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.sendspaenvserver(headername",{"_index":3195,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.service.canbypassguards",{"_index":3778,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.ispagecomplete(pageurl",{"_index":3782,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.isprerequisitecomplete",{"_index":3780,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setpagecomplete",{"_index":3762,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setpageincomplete",{"_index":3761,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setseverity(severitylevels.error",{"_index":1219,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setseverity(severitylevels.info",{"_index":1216,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settags(message.event",{"_index":1242,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settimestamp",{"_index":1241,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setuprequest(observable",{"_index":179,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.showerror",{"_index":2817,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.sin",{"_index":3900,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sinlist",{"_index":3903,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sinlist.find",{"_index":3905,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sinlist.length",{"_index":3904,"title":{},"body":{"components/SinComponent.html":{}}}],["this.size",{"_index":2240,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.skiplinkpath",{"_index":3055,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.skiptocontentbutton.click",{"_index":431,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.spaenvres",{"_index":3197,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_flag",{"_index":3199,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_message",{"_index":3202,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_flag",{"_index":3203,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_message",{"_index":3204,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_start",{"_index":3205,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.statuschange.emit(evt",{"_index":3743,"title":{},"body":{"components/RadioComponent.html":{}}}],["this.steps.toarray()[this.activeindex",{"_index":4101,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.street",{"_index":637,"title":{},"body":{"classes/Address.html":{},"components/StreetComponent.html":{}}}],["this.strengthpercentage",{"_index":3401,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.triggerdayvalidation",{"_index":2080,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.typeaheadlist",{"_index":3961,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.updateskipcontentlink",{"_index":3053,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.url",{"_index":1195,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.usecurrentdate",{"_index":2069,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.usegeocoder",{"_index":3970,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.uuid",{"_index":1143,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.validatephn",{"_index":3526,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.validatesin",{"_index":3902,"title":{},"body":{"components/SinComponent.html":{}}}],["this.value",{"_index":3601,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{}}}],["this.valuechange.emit",{"_index":1083,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.viewcontainerref",{"_index":4007,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.widthfactor",{"_index":1155,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.zone.run",{"_index":2440,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["those",{"_index":4684,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["though",{"_index":2681,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["through",{"_index":3190,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["throw",{"_index":145,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["throwerror",{"_index":1176,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["throwerror('geocoder",{"_index":3006,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror(error",{"_index":1269,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["throwerror(msg",{"_index":1247,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["thumbnail",{"_index":2535,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["thumbnail'},{'name",{"_index":556,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["thumbnail.html",{"_index":3987,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnail.scss",{"_index":3986,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnailcomponent",{"_index":555,"title":{"components/ThumbnailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tib",{"_index":2699,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tiff",{"_index":2489,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tihs",{"_index":2882,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["time",{"_index":2688,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["timeout",{"_index":2085,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["times",{"_index":2581,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["timor",{"_index":1910,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tip",{"_index":834,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["tips",{"_index":3287,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["title",{"_index":483,"title":{},"body":{"components/AccordionCommonComponent.html":{},"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tjk",{"_index":1902,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tkl",{"_index":1914,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tkm",{"_index":1925,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tls",{"_index":1909,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tobago",{"_index":1920,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["today",{"_index":2000,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["todo",{"_index":34,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"components/StreetComponent.html":{},"directives/YearValidateDirective.html":{}}}],["together",{"_index":3451,"title":{},"body":{"classes/Person.html":{}}}],["toggle",{"_index":733,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":558,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["toggle.component.html",{"_index":4019,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":4018,"title":{},"body":{"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":557,"title":{"components/ToggleComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["togo",{"_index":1913,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tohse",{"_index":4804,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["tokelau",{"_index":1915,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["told",{"_index":2454,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tome",{"_index":1845,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tomorrow",{"_index":2188,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ton",{"_index":1916,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tonga",{"_index":1917,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["toobig",{"_index":1119,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["tools",{"_index":3375,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["toosmall",{"_index":1118,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["top",{"_index":77,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["tostring",{"_index":592,"title":{},"body":{"classes/Address.html":{}}}],["tostring()'d",{"_index":1239,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["touched",{"_index":1086,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["track",{"_index":674,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["tracking",{"_index":1139,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["transclusion",{"_index":3093,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["transformed",{"_index":2714,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["transformfn",{"_index":4631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translation",{"_index":788,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["treated",{"_index":3533,"title":{},"body":{"components/PhnComponent.html":{}}}],["tree",{"_index":469,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["trigger",{"_index":183,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"components/StreetComponent.html":{}}}],["triggerdayvalidation",{"_index":1982,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["triggers",{"_index":2838,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["trimmed",{"_index":2122,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.replace(/[^\\d]/g",{"_index":2126,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.substr",{"_index":2127,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimming",{"_index":2989,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["trinidad",{"_index":1919,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tristan",{"_index":1822,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["true",{"_index":87,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["truncate",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":3142,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["try/catch",{"_index":4108,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ts",{"_index":4718,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["tsconfig",{"_index":4405,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tsconfig.json",{"_index":4627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tslint",{"_index":2370,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["tslint:disable",{"_index":3155,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["tslint:disable:max",{"_index":2371,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["tto",{"_index":1918,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tun",{"_index":1921,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tunisia",{"_index":1922,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tur",{"_index":1923,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["turkey",{"_index":1924,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["turkmenistan",{"_index":1926,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["turks",{"_index":1928,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["turn",{"_index":2504,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["turned",{"_index":914,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["tuv",{"_index":1930,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tuvalu",{"_index":1931,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tweaks",{"_index":392,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["twn",{"_index":1900,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["two",{"_index":4790,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeahead",{"_index":3956,"title":{},"body":{"components/StreetComponent.html":{},"changelog.html":{}}}],["typeaheadlist",{"_index":3912,"title":{},"body":{"components/StreetComponent.html":{}}}],["typeaheadmatch",{"_index":3939,"title":{},"body":{"components/StreetComponent.html":{}}}],["typeaheadmodule",{"_index":3804,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeaheadmodule.forroot",{"_index":3860,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeof",{"_index":2225,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["typeoption",{"_index":264,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeoption(labelid",{"_index":403,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeroots",{"_index":4756,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["types",{"_index":419,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["types/pdfjs",{"_index":4561,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4223,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["typetext",{"_index":265,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetext(refnameval",{"_index":413,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence",{"_index":266,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence(refnameval",{"_index":417,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typical",{"_index":3747,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["typo",{"_index":366,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tza",{"_index":1904,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["u.s",{"_index":1955,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["uga",{"_index":1932,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["uganda",{"_index":1933,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ui",{"_index":3976,"title":{},"body":{"components/StreetComponent.html":{}}}],["ukr",{"_index":1934,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ukraine",{"_index":1935,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["umi",{"_index":1939,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["unable",{"_index":1244,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["unchecked",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["uncomment",{"_index":4763,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["unde",{"_index":1024,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["undefined",{"_index":177,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["under",{"_index":2721,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["underlying",{"_index":4647,"title":{},"body":{"index.html":{}}}],["understand",{"_index":3147,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["uniqness",{"_index":1146,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["unique",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":2066,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{}}}],["united",{"_index":1906,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["united_states",{"_index":1415,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"coverage.html":{}}}],["unknown",{"_index":1121,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":729,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["unreleased",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["unsuccessful",{"_index":1266,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["unsure",{"_index":2753,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["until",{"_index":2477,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["up",{"_index":373,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["upcoming",{"_index":4760,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["update",{"_index":336,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{}}}],["updateangularjson",{"_index":4535,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateangularjson(host",{"_index":4623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateappcomponentts",{"_index":4549,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateappcomponentts(tree",{"_index":4596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updated",{"_index":2088,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"changelog.html":{}}}],["updatepackagejson",{"_index":4550,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatepackagejson(tree",{"_index":4599,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updates",{"_index":1271,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"miscellaneous/functions.html":{}}}],["updateskipcontentlink",{"_index":3033,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatetsconfig",{"_index":4536,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatetsconfig(host",{"_index":4624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updating",{"_index":695,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{}}}],["upload",{"_index":2397,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploaded",{"_index":1091,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["uploader",{"_index":2374,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["uploader'},{'name",{"_index":524,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["uploader.component",{"_index":3816,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["uploader.component.html",{"_index":2375,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.scss",{"_index":2376,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.ts",{"_index":1116,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["uploader/file",{"_index":2326,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["uploader_after_resize_attributes",{"_index":2734,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader_error",{"_index":2812,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploadinstructionref",{"_index":2390,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["upper",{"_index":3220,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["uppercase",{"_index":3227,"title":{},"body":{"classes/MaskModel.html":{}}}],["uppercasepipe",{"_index":3213,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["uppercasepipe(text",{"_index":3218,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["url",{"_index":78,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/WizardProgressBarComponent.html":{}}}],["url.com/fpcare/example#content",{"_index":3061,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.includes",{"_index":930,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["url.includes(x.route",{"_index":4100,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["urlbasename",{"_index":3036,"title":{},"body":{"components/HeaderComponent.html":{}}}],["urltree",{"_index":3772,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["uruguay",{"_index":1942,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ury",{"_index":1941,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["usa",{"_index":1416,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["usable",{"_index":4694,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["usage",{"_index":1374,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["use",{"_index":239,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["usecurrentdate",{"_index":1985,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["used",{"_index":162,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["usedropdownlist",{"_index":1387,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["useexisting",{"_index":218,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}}}],["useful",{"_index":2170,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["usegeocoder",{"_index":3916,"title":{},"body":{"components/StreetComponent.html":{}}}],["user",{"_index":59,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"components/StreetComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["user's",{"_index":2529,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["username",{"_index":3310,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["uses",{"_index":2140,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["using",{"_index":132,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["ut",{"_index":1054,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["uuid",{"_index":675,"title":{},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["uuid.uuid",{"_index":1144,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["uuid.uuid().tostring",{"_index":670,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["uzb",{"_index":1943,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["uzbekistan",{"_index":1944,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["val",{"_index":765,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["val.label",{"_index":3744,"title":{},"body":{"components/RadioComponent.html":{}}}],["valid",{"_index":88,"title":{},"body":{"classes/AbstractForm.html":{},"components/DatepickerComponent.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["validate",{"_index":2067,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}}}],["validate(control",{"_index":2290,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}}}],["validate.directive",{"_index":3812,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validate.directive.ts",{"_index":4127,"title":{},"body":{"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["validate.directive.ts:16",{"_index":4130,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:17",{"_index":4131,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:18",{"_index":4132,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:20",{"_index":4133,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validatebcpostaldirective",{"_index":569,"title":{"directives/ValidateBcPostalDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatenamedirective",{"_index":571,"title":{"directives/ValidateNameDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatephn",{"_index":3490,"title":{},"body":{"components/PhnComponent.html":{}}}],["validatephn(phn",{"_index":3512,"title":{},"body":{"components/PhnComponent.html":{}}}],["validatesin",{"_index":3873,"title":{},"body":{"components/SinComponent.html":{}}}],["validatesin(sin",{"_index":3892,"title":{},"body":{"components/SinComponent.html":{}}}],["validation",{"_index":42,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CaptchaDataService.html":{},"components/DatepickerComponent.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["validation.directive",{"_index":3808,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validation.directive.ts",{"_index":2282,"title":{},"body":{"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["validation.directive.ts:14",{"_index":2288,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validation.directive.ts:15",{"_index":2289,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validation.directive.ts:17",{"_index":2291,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validationerrors",{"_index":4029,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["validations",{"_index":3307,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["validator",{"_index":2283,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/YearValidateDirective.html":{}}}],["validatorfn",{"_index":4028,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["validators",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":44,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["valuechange",{"_index":977,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["valuemax=\"100",{"_index":3418,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuemin=\"0",{"_index":3417,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuenow]=\"strengthpercentage",{"_index":3415,"title":{},"body":{"components/PasswordComponent.html":{}}}],["values",{"_index":1236,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["vanuatu",{"_index":1946,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["var",{"_index":496,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["variable",{"_index":4458,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":636,"title":{},"body":{"classes/Address.html":{}}}],["variablescss",{"_index":4529,"title":{},"body":{"coverage.html":{}}}],["vat",{"_index":1632,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["vatican",{"_index":1634,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["vct",{"_index":1836,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ven",{"_index":1947,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["venezuela",{"_index":1948,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["verde",{"_index":1510,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["verify/captcha",{"_index":810,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifycaptcha",{"_index":784,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["verifycaptcha(apibaseurl",{"_index":794,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifying_answer",{"_index":4586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":2138,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["version.js",{"_index":4601,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versionjs",{"_index":4551,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["versionjs(options",{"_index":4600,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versions",{"_index":4636,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":3701,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["very",{"_index":4059,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"index.html":{}}}],["vgb",{"_index":1952,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["via",{"_index":396,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"additional-documentation/getting-started.html":{}}}],["viet",{"_index":1951,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["view",{"_index":4058,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["viewchild",{"_index":80,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["viewchild('browsefileref",{"_index":2381,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('button",{"_index":720,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('buttongroup",{"_index":769,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["viewchild('canvas",{"_index":2399,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('capturefileref",{"_index":2383,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('checkbox",{"_index":956,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["viewchild('consentmodal",{"_index":3135,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["viewchild('dayref",{"_index":2031,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchild('dp",{"_index":2220,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["viewchild('dropzone",{"_index":2379,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('formref",{"_index":38,"title":{},"body":{"classes/AbstractForm.html":{}}}],["viewchild('fullsizeviewmodal",{"_index":3150,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["viewchild('imageplaceholderref",{"_index":2385,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('monthref",{"_index":2048,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchild('selectfilelabel",{"_index":2387,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('stepcontainer",{"_index":4065,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchild('yearref",{"_index":2051,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchildren",{"_index":4070,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren('steps",{"_index":4068,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewcontainerref",{"_index":3989,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewencapsulation",{"_index":3295,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["viewencapsulation.none",{"_index":3289,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["viewproviders",{"_index":700,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["vincent",{"_index":1837,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["vir",{"_index":1954,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["virgin",{"_index":1953,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["visibility",{"_index":2166,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["visible",{"_index":2161,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{}}}],["vitae",{"_index":1056,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vnm",{"_index":1950,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["void",{"_index":65,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["voluptatem",{"_index":1032,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptates",{"_index":1077,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatibus",{"_index":1046,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatum",{"_index":1050,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vs",{"_index":4690,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["vut",{"_index":1945,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["vv]\\\\d[abceghj",{"_index":602,"title":{},"body":{"classes/Address.html":{}}}],["w",{"_index":4723,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wait",{"_index":2476,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wallis",{"_index":1957,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["want",{"_index":402,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["warning",{"_index":3411,"title":{},"body":{"components/PasswordComponent.html":{}}}],["warranties",{"_index":4666,"title":{},"body":{"license.html":{}}}],["watch",{"_index":4759,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["watches",{"_index":4724,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["way",{"_index":624,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"additional-documentation/getting-started.html":{}}}],["we'll",{"_index":2279,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["we're",{"_index":4105,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["we've",{"_index":4091,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["web",{"_index":3104,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["webelement",{"_index":267,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["weight",{"_index":3539,"title":{},"body":{"components/PhnComponent.html":{}}}],["weights[i",{"_index":3541,"title":{},"body":{"components/PhnComponent.html":{}}}],["well",{"_index":4797,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["western",{"_index":1960,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["wfactor",{"_index":1156,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["whatever",{"_index":207,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["whether",{"_index":879,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"guards/RouteGuardService.html":{},"directives/YearValidateDirective.html":{}}}],["whole",{"_index":4787,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wide",{"_index":1182,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["width",{"_index":2482,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["width/height",{"_index":2242,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["widthfactor",{"_index":1149,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["widthoption",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["widthoptions",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3143,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["window.location.hostname",{"_index":1188,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["window.location.href",{"_index":3064,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.href.indexof(this.skip_content_hash",{"_index":3063,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.origin}/${this.urlbasename",{"_index":3065,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.outerwidth",{"_index":4113,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["window.scrollto",{"_index":93,"title":{},"body":{"classes/AbstractForm.html":{}}}],["winds",{"_index":2257,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["wip",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":4715,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["within",{"_index":345,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["without",{"_index":3229,"title":{},"body":{"classes/MaskModel.html":{},"components/StreetComponent.html":{},"license.html":{}}}],["wizard",{"_index":560,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["wizardprogressbar",{"_index":4755,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wizardprogressbarcomponent",{"_index":559,"title":{"components/WizardProgressBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardprogressitem",{"_index":1339,"title":{"interfaces/WizardProgressItem.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["wlf",{"_index":1956,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["won't",{"_index":1274,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["work",{"_index":362,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["workaround",{"_index":2408,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["working",{"_index":2414,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["works",{"_index":386,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["wrap",{"_index":2084,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["wrapped",{"_index":2215,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["wrapper",{"_index":2132,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["write",{"_index":4717,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["writevalue",{"_index":745,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["writevalue(obj",{"_index":2209,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["writevalue(value",{"_index":766,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["writing",{"_index":4662,"title":{},"body":{"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["wrong",{"_index":2488,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wrongtype",{"_index":1117,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["wsm",{"_index":1839,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["x",{"_index":926,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["x.getdate",{"_index":2234,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["x.iscomplete",{"_index":927,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.route",{"_index":931,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.slice(1)).join",{"_index":1354,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.uuid",{"_index":2836,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["x[0].touppercase",{"_index":1353,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["xicon",{"_index":563,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["xiconbutton",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["xiconbuttoncomponent",{"_index":562,"title":{"components/XiconButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["xiff",{"_index":2484,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["y",{"_index":4137,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["year",{"_index":2083,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["year_",{"_index":2050,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yeardistantfuture",{"_index":2057,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["yeardistantpast",{"_index":2056,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["yearlabelforid",{"_index":1976,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yearref",{"_index":1977,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yearvalidatedirective",{"_index":573,"title":{"directives/YearValidateDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"overview.html":{}}}],["yem",{"_index":1962,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["yemen",{"_index":1963,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["yera",{"_index":2018,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yes",{"_index":137,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImageProcessingError.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["yes/no",{"_index":732,"title":{},"body":{"components/ButtonGroupComponent.html":{},"changelog.html":{}}}],["yib",{"_index":2703,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["you'll",{"_index":4734,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["you're",{"_index":679,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["you've",{"_index":4680,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["young",{"_index":4643,"title":{},"body":{"index.html":{}}}],["yt",{"_index":3696,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yugoslav",{"_index":1706,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["yukon",{"_index":3697,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yyyy",{"_index":2299,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["yyyy/mm/dd",{"_index":2172,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["yyyymmdd",{"_index":3444,"title":{},"body":{"classes/Person.html":{}}}],["z",{"_index":605,"title":{},"body":{"classes/Address.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["z]/i",{"_index":3225,"title":{},"body":{"classes/MaskModel.html":{}}}],["z][0",{"_index":3632,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["z][a",{"_index":2928,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateNameDirective.html":{}}}],["z]\\\\d",{"_index":607,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["z]\\s?[0",{"_index":3634,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["za",{"_index":2927,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateNameDirective.html":{}}}],["zabceghj",{"_index":604,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["zaf",{"_index":1872,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zambia",{"_index":1965,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zealand",{"_index":1762,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zero",{"_index":2635,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zeros",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["zib",{"_index":2702,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zimbabwe",{"_index":1967,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zmb",{"_index":1964,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zone",{"_index":2404,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone.js",{"_index":4572,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":823,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["zwe",{"_index":1966,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zxcvbn",{"_index":3372,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["zxcvbn_",{"_index":3371,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractForm.html":{"url":"classes/AbstractForm.html","title":"class - AbstractForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-form.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:13\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:10\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:15\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:30\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:17\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:44\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:36\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n/**\n *\n */\nexport abstract class AbstractForm {\n  /** Access to the form elements for validation */\n  @ViewChild('formRef') form: NgForm;\n\n  /** Disables all inputs (todo: not implemented) */\n  disabled: boolean;\n  /** Show or hide the loading spinner as required, should be passed to form action bar. */\n  loading: boolean = false;\n  /** What happens when the user clicks the continue button. Generally navigating to another page. */\n  abstract continue(): void;\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    this.router = router;\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   */\n  canContinue(): boolean {\n    // Returns true if form is valid\n    return this.form.valid;\n  }\n\n  /** Navigates to a route then automatically scrolls to the top of the page. */\n  protected navigate(url: string) {\n    this.router.navigate([url])\n      .then((data) => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(): void {\n    Object.keys(this.form.form.controls).forEach(x => {\n      this.form.form.get(x).markAsTouched();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpService.html":{"url":"classes/AbstractHttpService.html","title":"class - AbstractHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-api-service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class for HTTP Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/abstract-api-service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:16\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:59\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:52\n                                \n                            \n                    \n                        \n                                The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n/**\n * Abstract class for HTTP Service\n */\nexport abstract class AbstractHttpService {\n\n  protected logHTTPRequestsToConsole: boolean = false;\n\n  constructor(protected http: HttpClient) {}\n\n  /** The headers to send along with every GET and POST. */\n  protected abstract _headers: HttpHeaders;\n\n  /**\n   * Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n   * @param url Target URL to make the GET request\n   */\n  protected get(url, queryParams?: HttpParams): Observable {\n    /** The HTTP request observer with always on error handling */\n    const httpOpts = this.httpOptions;\n    httpOpts.params = queryParams ? queryParams : undefined;\n    const observable = this.http.get(url, httpOpts);\n    return this.setupRequest(observable);\n  }\n\n  protected post(url, body): Observable {\n    if (this.logHTTPRequestsToConsole) {\n      console.log( 'Post Request: ', body );\n    }\n    const observable = this.http.post(url, body, this.httpOptions);\n    return this.setupRequest(observable);\n  }\n\n  protected setupRequest(observable: Observable ): Observable {\n    // All failed requests should trigger the abstract method handleError\n    observable = observable.pipe(catchError(this.handleError.bind(this)));\n    // Optionally add console logging\n    if (this.logHTTPRequestsToConsole) {\n      observable = observable.pipe(tap(\n        data => console.log('HTTP Success: ', data),\n        error => console.log('HTTP Error: ', error)\n      ));\n    }\n    return observable;\n  }\n\n  /** The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. */\n  protected get httpOptions(): {headers: HttpHeaders, params?: HttpParams} {\n    return {\n      headers: this._headers\n    };\n  }\n\n  /** Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). */\n  protected abstract handleError(error: HttpErrorResponse);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPgCheckService.html":{"url":"injectables/AbstractPgCheckService.html","title":"injectable - AbstractPgCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPgCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-pg-check.service.ts\n        \n\n            \n                Description\n            \n            \n                The abstract class for our route guard service.  You MUST setup the NgModule\nto provide your application's service in place of AbstractPgCheckService.\nYour application's route guard service can do whatever it wants as long as it\nimplements these methods.\nMore information on setup can be found in @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            //registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                getStartUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPageComplete\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPrerequisiteComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractPgCheckService.\n *\n * Your application's route guard service can do whatever it wants as long as it\n * implements these methods.\n * \n * More information on setup can be found in @see RouteGuardService.\n *\n *  @example\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPgCheckService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract isPageComplete( url: string ): boolean;\n  public abstract isPrerequisiteComplete(): boolean;\n  public abstract getStartUrl(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractTestPage.html":{"url":"classes/AbstractTestPage.html","title":"class - AbstractTestPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTestPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/e2e/src/abstract-test-page.ts\n        \n\n            \n                Description\n            \n            \n                AbstractTestPage provides common functionality for e2e tests that make use of\nthe MoH Common Lib.  For example, getNameComponent() and\ngetNameComponentVal()  both correspond to the NameComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                continueButton\n                            \n                            \n                                    Public\n                                skipToContentButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agreeConsentModal\n                            \n                            \n                                checkConsentModal\n                            \n                            \n                                clickButton\n                            \n                            \n                                clickCheckBox\n                            \n                            \n                                clickConsentModalContinue\n                            \n                            \n                                clickLink\n                            \n                            \n                                clickSkipToContent\n                            \n                            \n                                continue\n                            \n                            \n                                countLength\n                            \n                            \n                                formErrors\n                            \n                            \n                                getContinueButton\n                            \n                            \n                                    Async\n                                getNameComponent\n                            \n                            \n                                    Async\n                                getNameComponentVal\n                            \n                            \n                                    Abstract\n                                navigateTo\n                            \n                            \n                                scrollDown\n                            \n                            \n                                scrollUp\n                            \n                            \n                                selectOption\n                            \n                            \n                                typeOption\n                            \n                            \n                                typeText\n                            \n                            \n                                typeTextFirstOccurrence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            continueButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.form-bar .submit'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:13\n                            \n                        \n\n                \n                    \n                        Clicking this button should complete the page, navigate to the next one.\nWe default it to .form-bar .submit but you may overwrite as necessary.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipToContentButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.skip-to-content'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:18\n                            \n                        \n\n                \n                    \n                        This is the 'Skip To Content' button for Screen Readers that appears when\ntabbed to. May be overwritten as necessary.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agreeConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \nagreeConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:138\n                \n            \n\n\n            \n                \n                    Clicks the checkbox which means the user agrees with the info collection notice.\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \ncheckConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:153\n                \n            \n\n\n            \n                \n                    Checks if the consent modal is currently displayed or not\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickButton\n                        \n                        \n                    \n                \n            \n            \n                \nclickButton(classVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:122\n                \n            \n\n\n            \n                \n                    Clicks the button based on the text specified\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    classVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable class value for a button\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text inside the button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickCheckBox\n                        \n                        \n                    \n                \n            \n            \n                \nclickCheckBox(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:130\n                \n            \n\n\n            \n                \n                    Clicks the check box based on the ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickConsentModalContinue\n                        \n                        \n                    \n                \n            \n            \n                \nclickConsentModalContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:146\n                \n            \n\n\n            \n                \n                    Clicks continue inside the modal\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickLink\n                        \n                        \n                    \n                \n            \n            \n                \nclickLink(label: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:178\n                \n            \n\n\n            \n                \n                    Clicks the link based from the label and text provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickSkipToContent\n                        \n                        \n                    \n                \n            \n            \n                \nclickSkipToContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countLength\n                        \n                        \n                    \n                \n            \n            \n                \ncountLength(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:186\n                \n            \n\n\n            \n                \n                    Counts the number of options inside a dropdown box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formErrors\n                        \n                        \n                    \n                \n            \n            \n                \nformErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContinueButton\n                        \n                        \n                    \n                \n            \n            \n                \ngetContinueButton()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponent(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:60\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the NameComponent for an associated human\nreadable label. If the label is a duplicate it will grab the first one\nonly.\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human redable label name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponentVal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponentVal(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:72\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the value within a given NameComponent\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:32\n                \n            \n\n\n            \n                \n                    Every class should override this to point to the page it is testing.\nCalling navigateTo should go to the corresponding url this page tests.   *\nNote - We encourage hardcoding all links in e2e tests and not sharing a\nconstants file with the application. While this leads to more work, it\navoids the case where incorrect constants (e.g. a typo in a URL) pass the\ntests.\n\n\n                    \n                        Example :\n                        \n                            return browser.get(&#39;/enrolment/profile&#39;);\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollDown\n                        \n                        \n                    \n                \n            \n            \n                \nscrollDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:43\n                \n            \n\n\n            \n                \n                    Scrolls down to the bottom of the page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollUp\n                        \n                        \n                    \n                \n            \n            \n                \nscrollUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:160\n                \n            \n\n\n            \n                \n                    Scrolls up to the top of the page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(labelId: string, optionText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:91\n                \n            \n\n\n            \n                \n                    Selects from an ng-select component. This includes DropdownComponent\nothers, like country, province, etc.\nTODO - Need to test this works! Right now just copied from GitHub with\nminor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\ntext and use the 'for' attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    optionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the option we want to select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOption\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOption(labelId: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:102\n                \n            \n\n\n            \n                \n                    Works on same NgSelect components but it sends custom text instead of\nselecting a given choice.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the text we want to type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeText\n                        \n                        \n                    \n                \n            \n            \n                \ntypeText(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:113\n                \n            \n\n\n            \n                \n                    Enter text into an input via ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeTextFirstOccurrence\n                        \n                        \n                    \n                \n            \n            \n                \ntypeTextFirstOccurrence(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:169\n                \n            \n\n\n            \n                \n                    Types the text inside the first ocurrence of input field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, WebElement, $$, protractor } from 'protractor';\n\n/**\n * AbstractTestPage provides common functionality for e2e tests that make use of\n * the MoH Common Lib.  For example, `getNameComponent()` and\n * `getNameComponentVal()`  both correspond to the NameComponent.\n */\nexport abstract class AbstractTestPage {\n  /**\n   * Clicking this button should complete the page, navigate to the next one.\n   * We default it to `.form-bar .submit` but you may overwrite as necessary.\n   */\n  public continueButton: WebElement = element(by.css('.form-bar .submit'));\n  /**\n   * This is the 'Skip To Content' button for Screen Readers that appears when\n   * tabbed to. May be overwritten as necessary.\n   */\n  public skipToContentButton: WebElement = element(by.css('.skip-to-content'));\n\n  /**\n   * Every class should override this to point to the page it is testing.\n   * Calling navigateTo should go to the corresponding url this page tests.   *\n   *\n   * Note - We encourage hardcoding all links in e2e tests and _not_ sharing a\n   * constants file with the application. While this leads to more work, it\n   * avoids the case where incorrect constants (e.g. a typo in a URL) pass the\n   * tests.\n   *\n   @example\n   *    return browser.get('/enrolment/profile');\n   */\n  abstract navigateTo(): any;\n\n  continue() {\n    this.continueButton.click();\n  }\n\n  getContinueButton() {\n    return this.continueButton;\n  }\n\n  /** Scrolls down to the bottom of the page */\n  scrollDown() {\n    browser.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n  }\n\n  clickSkipToContent() {\n    this.skipToContentButton.click();\n  }\n\n  /**\n   * **NameComponent** - Returns the NameComponent for an associated human\n   * readable label. If the label is a duplicate it will grab the first one\n   * only.\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human redable label name.\n   */\n  async getNameComponent(labelName: string): Promise {\n    const label = element.all(by.cssContainingText('lib-prime-name label', labelName)).first();\n    return element(by.id(await label.getAttribute('for')));\n  }\n\n  /**\n   * **NameComponent** - Returns the value within a given NameComponent\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human readable label name\n   */\n  async getNameComponentVal(labelName: string): Promise {\n    return (await this.getNameComponent(labelName)).getAttribute('value');\n  }\n\n  formErrors() {\n    return $$('[role=alert] .text-danger');\n  }\n\n  /**\n   * Selects from an ng-select component. This includes DropdownComponent\n   * others, like country, province, etc.\n   *\n   * TODO - Need to test this works! Right now just copied from GitHub with\n   * minor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\n   * text and use the 'for' attribute.\n   *\n   * @param labelId corresponds to labelForId on the \n   * @param optionText the option we want to select\n   */\n  selectOption(labelId: string, optionText: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.cssContainingText('span.ng-option-label', optionText)).click(); // selects option by provided text\n  }\n\n  /**\n   * Works on same NgSelect components but it sends custom text instead of\n   * selecting a given choice.\n   * @param labelId corresponds to labelForId on the \n   * @param data the text we want to type\n   */\n  typeOption(labelId: string, data: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.css(`input[role=\"combobox\"]`)).sendKeys(data); // type option\n    browser.actions().sendKeys(protractor.Key.ENTER).perform(); // hit enter key\n  }\n\n  /**\n   * Enter text into an input via ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeText(refNameVal: string, text: string) {\n    element(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).sendKeys(text);\n  }\n\n  /**\n   * Clicks the button based on the text specified\n   * @param classVal Human readable class value for a button\n   * @param text Text inside the button\n   */\n  clickButton(classVal: string, text: string) {\n    element(by.cssContainingText(`button[class*=\"${classVal}\"]`, text)).click();\n  }\n\n  /**\n   * Clicks the check box based on the ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   */\n  clickCheckBox(refNameVal: string) {\n    element(by.css(`input[ng-reflect-name=\"${refNameVal}\"]`)).click();\n  }\n\n  /**\n   * Clicks the checkbox which means the user agrees with the info collection notice.\n   * InfoColectionNoticeComponent \n   */\n  agreeConsentModal() {\n    element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click();\n  }\n\n  /**\n   * Clicks continue inside the modal\n   * InfoColectionNoticeComponent \n   */\n  clickConsentModalContinue() {\n    element(by.css('div[class=\"modal-footer\"]')).element(by.css('button[type=\"submit\"]')).click();\n  }\n\n  /**\n   * Checks if the consent modal is currently displayed or not\n   */\n  checkConsentModal() {\n    return element(by.css('common-consent-modal')).element(by.css('div[aria-labelledby=\"myLargeModalLabel\"]')).isDisplayed();\n  }\n\n  /**\n   * Scrolls up to the top of the page\n   */\n  scrollUp() {\n      browser.executeScript('window.scrollTo(0,0)');\n  }\n\n  /**\n   * Types the text inside the first ocurrence of input field\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeTextFirstOccurrence(refNameVal: string, text: string) {\n      element.all(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).first().sendKeys(text);\n  }\n\n  /**\n   * Clicks the link based from the label and text provided\n   * @param label\n   * @param text\n   */\n  clickLink(label: string, text: string) {\n      element(by.cssContainingText(label, text)).click();\n  }\n\n  /**\n   * Counts the number of options inside a dropdown box\n   * @param refNameVal\n   */\n  countLength(refNameVal: string){\n      return $$(`select[ng-reflect-name^=\"${refNameVal}\"] option`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccordionCommonComponent.html":{"url":"components/AccordionCommonComponent.html","title":"component - AccordionCommonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionCommonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/accordion/accordion.component.ts\n\n\n    \n        Description\n    \n    \n        AccordionComponent is a\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-accordion\n            \n\n            \n                styleUrls\n                ./accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expandText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/accordion/accordion.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/accordion/accordion.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(click to expand)'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AccordionComponent } from 'ngx-bootstrap';\n/**\n * AccordionComponent is a\n *\n * @example\n *       \t\n  *       \n * @export\n */\n\n@Component({\n  selector: 'common-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionCommonComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() isOpen: boolean = false;\n\n  public expandText: string =  '(click to expand)';\n  ngOnInit() {\n  }\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n    \n        \n          {{title}} \n          \n          {{expandText}}\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{title}}                     {{expandText}}                    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionCommonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Address class, each project can extend this address class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressLine1\n                            \n                            \n                                    Public\n                                addressLine2\n                            \n                            \n                                    Public\n                                addressLine3\n                            \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                isValid\n                            \n                            \n                                    Public\n                                postal\n                            \n                            \n                                    Static\n                                PostalCodeBCRegEx\n                            \n                            \n                                    Public\n                                province\n                            \n                            \n                                    Public\n                                street\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                isComplete\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isBCOnly\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PostalCodeBCRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Address)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Address\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:42\n                \n            \n\n\n            \n                \n                    Address must have all fields filled out to be considered\ncomplete\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:29\n                \n            \n\n\n            \n                \n                    Overwrite the native JavaScript toString method to determine how the\nobject should be printed, instead of [object Object].  This provides a\nstandard way to print out an address. If you need something specific you\nshould access the properties directly. We omit Province/Country because of\nPharmaCare's BC focus. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isBCOnly\n                    \n                \n\n                \n                    \n                        getisBCOnly()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Address {\n\n  static PostalCodeBCRegEx = '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$';\n\n  /* Variables for class */\n  public street: string;\n  public addressLine1: string;\n  public addressLine2: string;\n  public addressLine3: string;\n  public postal: string;\n  public country: string;\n  public province: string;\n  public city: string;\n  public hasValue: boolean;\n  public isValid: boolean;\n\n\n\n\n  /** Overwrite the native JavaScript toString method to determine how the\n   * object should be printed, instead of [object Object].  This provides a\n   * standard way to print out an address. If you need something specific you\n   * should access the properties directly. We omit Province/Country because of\n   * PharmaCare's BC focus. */\n  toString() {\n    return `${this.street}, ${this.city}`;\n  }\n\n  /*{\n    return (this.addressLine1 != null);\n  }*/\n\n\n  /**\n   * Address must have all fields filled out to be considered\n   * complete\n   */\n  isComplete(): boolean {\n    // All fields have data - not empty\n    return !!(this.street && this.city && this.country &&\n             this.province && this.postal);\n  }\n\n  get isBCOnly(): boolean {\n    let isValid = false;\n    if (this.postal &&\n      this.postal.length > 0) {\n      const regEx = new RegExp(Address.PostalCodeBCRegEx);\n      isValid = regEx.test(this.postal);\n    }\n    return isValid;\n  }\n\n  /* Copy function */\n  copy(object: Address) {\n    this.street = object.street;\n    this.addressLine1 = object.addressLine1;\n    this.addressLine2 = object.addressLine2;\n    this.addressLine3 = object.addressLine3;\n\n    this.city = object.city;\n    this.country = object.country;\n    this.postal = object.postal;\n    this.province = object.province;\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/base.ts\n        \n\n            \n                Description\n            \n            \n                Base class.  Components extend this class to have object IDs.\nNPM package dependencies:\n  a) moment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n/**\n * Base class.  Components extend this class to have object IDs.\n * NPM package dependencies:\n *  a) moment\n */\nexport class Base {\n\n  /** An identifier for parents to keep track of components */\n  public objectId: string = UUID.UUID().toString();\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Button Component is a button which can be used across the application to have\nsame button style.\nYou're free to create custom (bootstrap) buttons as your application\nrequires. The main advantages to this component are:\n\nconsistency\nsimplicity (less markup)\nmaking future changes easier, such as automatically updating any changes\nto button colour stylings.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"secondary\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('button')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, ViewChild, EventEmitter, Input, Output, ElementRef } from '@angular/core';\nimport { ControlContainer, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Button Component is a button which can be used across the application to have\n * same button style.\n *\n * You're free to create custom (bootstrap) buttons as your application\n * requires. The main advantages to this component are:\n *\n *  - consistency\n *  - simplicity (less markup)\n *  - making future changes easier, such as automatically updating any changes\n * to button colour stylings.\n *\n *\n * @example\n *        \n *        \n * @export\n */\n@Component({\n  selector: 'common-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class ButtonComponent implements OnInit {\n\n  // Can pass the Style class of a button e.g. For primary, btn btn-primary. Default, btn btn-default. Error, btn btn-danger\n  @Input() buttonType: 'default' | 'primary' | 'secondary' = 'default';\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Button';\n  @Output() btnClick: EventEmitter = new EventEmitter();\n  @ViewChild('button') button: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    this.btnClick.emit($event);\n  }\n}\n\n    \n\n    \n        \n\t\t\t{{label}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonGroupComponent.html":{"url":"components/ButtonGroupComponent.html","title":"component - ButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button-group/button-group.component.ts\n\n\n    \n        Description\n    \n    \n        BUTTONGROUPCOMPONENT IS DEPRECATED!  DO NOT USE UNLESS YOU KNOW WHAT YOU'RE\nDOING.\nIf you need a Yes/No toggle, @see RadioComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent) }\n                \n            \n\n\n            \n                selector\n                common-button-group\n            \n\n            \n                styleUrls\n                ./button-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button-group.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                buttonGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setButtonGrpVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setButtonGrpVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetButtonGrpVal(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('buttonGroup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * BUTTONGROUPCOMPONENT IS **DEPRECATED**!  **DO NOT USE** UNLESS YOU KNOW WHAT YOU'RE\n * DOING.\n *\n * If you need a Yes/No toggle, @see RadioComponent\n * @deprecated\n *\n *\n *\n *\n * @example\n *       \n *         \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-button-group',\n  templateUrl: './button-group.component.html',\n  styleUrls: ['./button-group.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent )}\n  ]\n})\nexport class ButtonGroupComponent implements ControlValueAccessor {\n\n  @Input() data: boolean;\n  @Input() required: boolean = true;\n  @Input() showError: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() errorMessageRequired: string = 'Field is required.';\n  @Input() label: string = 'Default Checkbox';\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('buttonGroup') buttonGroup: ElementRef;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n\n  }\n\n\n  setButtonGrpVal(val: any) {\n    this.dataChange.emit(val);\n    this._onChange(val);\n    this._onTouched();\n  }\n\n  focus() {\n    this.buttonGroup.nativeElement.focus();\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n     {{answer.label}} \n    \n  \n  \n    {{errorMessageRequired}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}       {{answer.label}}             {{errorMessageRequired}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaDataService.html":{"url":"injectables/CaptchaDataService.html","title":"injectable - CaptchaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchAudio\n                            \n                            \n                                    Public\n                                fetchData\n                            \n                            \n                                    Public\n                                verifyCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/captcha/src/captcha-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAudio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAudio(apiBaseUrl: string, validation: string, translation?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translation\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(apiBaseUrl: string, nonce: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verifyCaptcha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encryptedAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Design Guidelines\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/captcha/src/captcha.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CaptchaDataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n    \n        CAPTCHA Module\nExample:\nimport { CaptchaModule } from 'moh-common-lib/captcha'\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n// tip: set nonce to a UUID().\nThere must be a configured CAPTCHA service deployed to OpenShift to use this component. You then must point apiBaseUrl to point to the service.\nKnown Issues\n\n    \n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { CaptchaComponent } from './captcha.component';\nimport { CaptchaDataService } from './captcha-data.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CaptchaComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [\n    CaptchaDataService\n  ],\n  exports: [\n    CaptchaComponent\n  ],\n})\nexport class CaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CaptchaModule,\n      providers: [CaptchaDataService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckCompleteBaseService.html":{"url":"injectables/CheckCompleteBaseService.html","title":"injectable - CheckCompleteBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckCompleteBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Extend this class when creating a service to create your custom Route Guard\nlogic.  This class should work as-is for simple use-cases.  For Route Guard\nsetup @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bypassGuards\n                            \n                            \n                                    Private\n                                _startUrl\n                            \n                            \n                                    Public\n                                pageCheckList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                getStartUrl\n                            \n                            \n                                    Protected\n                                getUrlIndex\n                            \n                            \n                                    Public\n                                isComplete\n                            \n                            \n                                    Public\n                                isPageComplete\n                            \n                            \n                                    Protected\n                                isPageListEmpty\n                            \n                            \n                                    Public\n                                isPrerequisiteComplete\n                            \n                            \n                                    Public\n                                setPageComplete\n                            \n                            \n                                    Public\n                                setPageIncomplete\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    startUrl\n                                \n                                \n                                    bypassGuards\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUrlIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrlIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:101\n                \n            \n\n\n            \n                \n                    Index of URL in the items list, -1 if not exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:93\n                \n            \n\n\n            \n                \n                    Check for incomplete pages\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:82\n                \n            \n\n\n            \n                \n                    Indicates whether page has been completed or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isPageListEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageListEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:50\n                \n            \n\n\n            \n                \n                    Any prerequisites that need list of pages \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:72\n                \n            \n\n\n            \n                \n                    Sets the page to completed, allowing applicant to proceed to next page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageIncomplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:57\n                \n            \n\n\n            \n                \n                    Sets page to not be completed, so applicants cannot complete application out of sequence\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _startUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageCheckList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageListInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        startUrl\n                    \n                \n\n\n                \n                    \n                        setstartUrl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bypassGuards\n                    \n                \n\n\n                \n                    \n                        setbypassGuards(bypass: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:37\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bypass\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Checkbox component is a input checkbox\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => CheckboxComponent) }\n                \n            \n\n\n            \n                selector\n                common-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/checkbox/checkbox.component.ts:49\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:37\n                            \n                        \n                \n                    \n                        You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.label + 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:43\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('checkbox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * Checkbox component is a input checkbox\n *\n * @example\n *       \n *       \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => CheckboxComponent )}\n  ]\n})\n\nexport class CheckboxComponent extends Base implements  ControlValueAccessor {\n\n  /**\n   * You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n   */\n  @Input() data: boolean = false;\n  @Input() required: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Default Checkbox';\n  @Input() errorMessageRequired: string = this.label + 'Field is required.';\n  @Input() checked: boolean =  false ;\n  @Input() showError: boolean;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('checkbox') checkbox: ElementRef;\n\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n\n  constructor() { super(); }\n\n\n  /*setCheckboxVal(event: boolean) {\n    console.log(event);\n    this.data = event;\n    this.dataChange.emit(this.data);\n    this._onChange(event);\n    this._onTouched();\n  }*/\n\n  focus() {\n    this.checkbox.nativeElement.focus();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n\n\n}\n\n    \n\n    \n        \n\n{{label}}\n\n\n    {{errorMessageRequired}}\n\n\t\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}    {{errorMessageRequired}}\t'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityComponent.html":{"url":"components/CityComponent.html","title":"component - CityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/city/city.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-city\n            \n\n            \n                styleUrls\n                ./city.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                city\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/city/city.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'city_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:24\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'common-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.scss']\n})\nexport class CityComponent extends Base implements ControlValueAccessor  {\n\n  @Input() label: string = 'City';\n  @Input() maxlen: string = '100';\n  @Input() labelforId: string = 'city_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() placeholder: string = 'City Name';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.city = val;\n    }\n  }\n  get value() {\n    return this.city;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  city: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.city = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n \n\n  \n    {{label}} is required.\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       {{label}} is required.  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImage.html":{"url":"classes/CommonImage.html","title":"class - CommonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n            \n                Description\n            \n            \n                Image as uploaded by user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachmentOrder\n                            \n                            \n                                contentType\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                fileContent\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                naturalHeight\n                            \n                            \n                                naturalWidth\n                            \n                            \n                                size\n                            \n                            \n                                sizeTxt\n                            \n                            \n                                sizeUnit\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachmentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageProcessingError.html":{"url":"classes/CommonImageProcessingError.html","title":"class - CommonImageProcessingError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageProcessingError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commonImage\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                maxSizeAllowed\n                            \n                            \n                                    Optional\n                                rawImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode: CommonImageError, errorDescription?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        CommonImageError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            commonImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            errorDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxSizeAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rawImageFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonImageScaleFactors.html":{"url":"interfaces/CommonImageScaleFactors.html","title":"interface - CommonImageScaleFactors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonImageScaleFactors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightFactor\n                                \n                                \n                                        widthFactor\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scaleDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightFactor\n                                    \n                                \n                                \n                                    \n                                        heightFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthFactor\n                                    \n                                \n                                \n                                    \n                                        widthFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageScaleFactorsImpl.html":{"url":"classes/CommonImageScaleFactorsImpl.html","title":"class - CommonImageScaleFactorsImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageScaleFactorsImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CommonImageScaleFactors\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                heightFactor\n                            \n                            \n                                widthFactor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scaleDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wFactor: number, hFactor: number)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heightFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widthFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:60\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLogMessage.html":{"url":"interfaces/CommonLogMessage.html","title":"interface - CommonLogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonLogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:179\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event being logged. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: 'error',\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonLogger.html":{"url":"injectables/CommonLogger.html","title":"injectable - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                url\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _log\n                            \n                            \n                                    Protected\n                                _logError\n                            \n                            \n                                    Private\n                                _sendLog\n                            \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                logError\n                            \n                            \n                                    Public\n                                logHttpError\n                            \n                            \n                                    Private\n                                setSeverity\n                            \n                            \n                                    Private\n                                setTags\n                            \n                            \n                                    Private\n                                setTimestamp\n                            \n                            \n                                setURL\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    applicationId\n                                \n                                \n                                    programName\n                                \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _log(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:79\n                \n            \n\n\n            \n                \n                    Log a message to Splunk. This is the main way to send logs and\nautomatically includes meta-data. You do not need to subscribe to the\nresponse, as the service already does that. The input object must have an\n'event' property set, everything else is optional.\nExample:\nthis.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object, nesting is fine, with event property\nset.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _logError(errorMessage: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _sendLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _sendLog(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:110\n                \n            \n\n\n            \n                \n                    Internal method to send logs to Splunk, includes meta-data except that's\nconsistent across all requests, but not specific values like severity\nlevel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object or anything that can be toString()'d,\nlike Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logError(errorMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logHttpError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logHttpError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:93\n                \n            \n\n\n            \n                \n                    Log HTTP errors, e.g. when losing network connectivity or receiving an\nerror response code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSeverity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSeverity(severity: SeverityLevels)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    severity\n                                    \n                                                SeverityLevels\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTags(message: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:166\n                \n            \n\n\n            \n                \n                    The headers are easier to search in splunk, and we aren't using tags, so\nrepurpose it to event type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setURL\n                        \n                        \n                    \n                \n            \n            \n                \nsetURL(newURL: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newURL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:22\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:59\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  })\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:23\n                            \n                        \n\n                \n                    \n                        The HTTP Headers which go with each request.  These MUST be set if you are\nusing the logger.  Fields include:\n\nprogram (REQUIRED, the application wide code)\napplicationId (REQUIRED, like sessionId)\nrequest_method (REQUIRED, 'POST')\nlogsource: (REQUIRED, window.location.hostname)\nhttp_x_forwarded_host (REQUIRED, window.location.hostname)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:16\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        applicationId\n                    \n                \n\n                \n                    \n                        getapplicationId()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:39\n                                \n                            \n\n                \n                    \n                        setapplicationId(id: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        programName\n                    \n                \n\n                \n                    \n                        getprogramName()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:47\n                                \n                            \n\n                \n                    \n                        setprogramName(name: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:147\n                                \n                            \n                    \n                        \n                                Overwrite the inherited httpOptions so we can set responseType to text.\nThis updates Angular's parsing, and it won't error out due to the server\nnot responding with JSON.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: 'error',\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Container.html":{"url":"classes/Container.html","title":"class - Container","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Container\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n            \n                Description\n            \n            \n                Base functionality for container that is used to display bread crumbs \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertRouteToTitle\n                            \n                            \n                                    Protected\n                                setProgressSteps\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressSteps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WizardProgressItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:12\n                            \n                        \n\n                \n                    \n                        Route items for the stepper \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertRouteToTitle\n                        \n                        \n                    \n                \n            \n            \n                \nconvertRouteToTitle(routePath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:18\n                \n            \n\n\n            \n                \n                    Converts a lower case string of a route in a user readable title.  e.g.\n\"personal-info\" -> \"Personal Info\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setProgressSteps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProgressSteps(pageRoutes: Route[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageRoutes\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreBreadcrumbComponent.html":{"url":"components/CoreBreadcrumbComponent.html","title":"component - CoreBreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreBreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        The base styles for a breadcrumb with slots for content to go.  If you need a\ncomplex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\nthe base styles.  There are 3 slots: left, center, and right - all are\noptional and any configuration works. You select the slot by adding it as an\nattribute to the top level elements inside of the breadcrumb element.\n   Example usage:\n   \n    \n      Dashboard /\n      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n    \n    \n    \n   \n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-core-breadcrumb\n            \n\n            \n                styleUrls\n                ./core-breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * The base styles for a breadcrumb with slots for content to go.  If you need a\n * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\n * the base styles.  There are 3 slots: left, center, and right - all are\n * optional and any configuration works. You select the slot by adding it as an\n * attribute to the top level elements inside of the breadcrumb element.\n *\n *   Example usage:\n *\n *   \n *    \n *      Dashboard /\n *      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n *    \n *    \n *    \n *   \n *\n *   @export\n */\n@Component({\n  selector: 'common-core-breadcrumb',\n  templateUrl: './core-breadcrumb.component.html',\n  styleUrls: ['./core-breadcrumb.component.scss']\n})\nexport class CoreBreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreBreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountryComponent.html":{"url":"components/CountryComponent.html","title":"component - CountryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CountryComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/country/country.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-country\n            \n\n            \n                styleUrls\n                ./country.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./country.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                country\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                countryList\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                required\n                            \n                            \n                                useDropDownList\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/country/country.component.ts:298\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        countryList\n                    \n                \n                \n                    \n                        Type :         CountryList[]\n\n                    \n                \n                \n                    \n                        Default value : COUNTRY_LIST\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:275\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:277\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Country'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:274\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'country_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:276\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:280\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:278\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropDownList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:279\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:283\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:293\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:292\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:315\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:307\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:327\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:332\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:336\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:320\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:297\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:298\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:300\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:295\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/country/country.component.ts:288\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/country/country.component.ts:283\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.scss']\n})\nexport class CountryComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n  \n\n\n\n\n  \n    {{label}} is required.\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{label}} is required.    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CountryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryList.html":{"url":"interfaces/CountryList.html","title":"interface - CountryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountryList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/country/country.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for countries \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        countryCode\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.scss']\n})\nexport class CountryComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateComponent.html":{"url":"components/DateComponent.html","title":"component - DateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DateComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/date/date.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-date\n            \n\n            \n                styleUrls\n                ./date.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dayLabelforId\n                            \n                            \n                                dayRef\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                monthLabelforId\n                            \n                            \n                                    Public\n                                monthList\n                            \n                            \n                                monthRef\n                            \n                            \n                                yearLabelforId\n                            \n                            \n                                yearRef\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getNumericValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDay\n                            \n                            \n                                setMonth\n                            \n                            \n                                setYear\n                            \n                            \n                                    Private\n                                triggerDayValidation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessages\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                restrictDate\n                            \n                            \n                                useCurrentDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(form: NgForm, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/date/date.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                  \n                                                        \n                                                                        NgForm\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         SimpleDate\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Date'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        restrictDate\n                    \n                \n                \n                    \n                        Type :     \"future\" | \"past\" | \"any\"\n\n                    \n                \n                \n                    \n                        Default value : 'any'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:44\n                            \n                        \n                \n                    \n                        Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useCurrentDate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getNumericValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumericValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:134\n                \n            \n\n\n            \n                \n                    Convert string to numeric value or null if not \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDay\n                        \n                        \n                    \n                \n            \n            \n                \nsetDay(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:97\n                \n            \n\n\n            \n                \n                    Set the day and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMonth\n                        \n                        \n                    \n                \n            \n            \n                \nsetMonth(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:85\n                \n            \n\n\n            \n                \n                    Set the month and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setYear\n                        \n                        \n                    \n                \n            \n            \n                \nsetYear(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:108\n                \n            \n\n\n            \n                \n                    Set the yera and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            triggerDayValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerDayValidation()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:123\n                \n            \n\n\n            \n                \n                    Force the day input to run it's directives again. Important in cases\nwhere user fills fields out of order, e.g. sets days to 31 then month to\nFebrurary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'day_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dayRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'month_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            monthList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('monthRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'year_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('yearRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { SimpleDate } from '../../models/simple-date.interface';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n */\n\nexport interface DateErrorMsg {\n  required: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n@Component({\n  selector: 'common-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class DateComponent extends Base implements OnInit {\n  // Exists for unit testing to validate errors set\n  @ViewChild( 'monthRef' ) monthRef: NgModel;\n  @ViewChild( 'dayRef' ) dayRef: NgModel;\n  @ViewChild( 'yearRef') yearRef: NgModel;\n\n  @Input() useCurrentDate: boolean = false;\n  @Input() required: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Date';\n  @Input() date: SimpleDate;\n  /** Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. */\n  @Input() restrictDate: 'future' | 'past' | 'any' = 'any';\n  @Input() errorMessages: DateErrorMsg;\n\n  @Output() dateChange: EventEmitter = new EventEmitter();\n\n  public monthList: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  monthLabelforId: string = 'month_' + this.objectId;\n  dayLabelforId: string = 'day_' + this.objectId;\n  yearLabelforId: string = 'year_' + this.objectId;\n\n  constructor( public form: NgForm,\n               private cd: ChangeDetectorRef ) {\n    super();\n  }\n\n  ngOnInit() {\n    if ( !this.errorMessages ) {\n      // Use default messages\n      this.errorMessages = {\n        required: this.label + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.label + '.',\n        yearDistantPast: 'Invalid ' + this.label + '.',\n        yearDistantFuture: 'Invalid ' + this.label + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.label + '.',\n        invalidValue: 'Invalid ' + this.label + '.'\n      };\n    }\n\n    if ( this.useCurrentDate ) {\n      // Set date to current date\n      this.date.month = moment().month();\n      this.date.day = moment().date();\n      this.date.year = moment().year();\n    }\n  }\n\n  /** Set the month and notify caller of change */\n  setMonth( value: string ): void {\n    const month = this.getNumericValue( value );\n\n    // console.log( 'monthRef: ', this.monthRef );\n    if ( this.date ) {\n      this.date.month = month;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the day and notify caller of change */\n  setDay( value: string ): void {\n    const day = this.getNumericValue( value );\n\n    // console.log(  'dayRef: ', this.dayRef );\n    if ( this.date ) {\n      this.date.day = day;\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the yera and notify caller of change */\n  setYear( value: string ): void {\n    const year = this.getNumericValue( value );\n\n    if ( this.date ) {\n      this.date.year = year;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /**\n   * Force the `day` input to run it's directives again. Important in cases\n   * where user fills fields out of order, e.g. sets days to 31 then month to\n   * Februrary.\n   */\n  private triggerDayValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.dayLabelforId] ) {\n        this.form.controls[this.dayLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  /** Convert string to numeric value or null if not */\n  private getNumericValue( value: string ): number | null {\n    const parsed = parseInt( value, 10 );\n    return ( isNaN( parsed ) ? null : parsed );\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n\n    Month\n    \n      \n      \n      {{month}}\n    \n\n    Day\n    \n\n    Year\n    \n\n  \n\n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n  \n       {{errorMessages.noFutureDatesAllowed}}\n  \n  \n  \n       {{errorMessages.invalidValue}}\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}      Month                      {{month}}        Day        Year               {{errorMessages.required}}           {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}             {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateErrorMsg.html":{"url":"interfaces/DateErrorMsg.html","title":"interface - DateErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date.component.ts\n        \n\n            \n                Description\n            \n            \n                Component NPM package dependencies:\na) moment\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dayOutOfRange\n                                \n                                \n                                            Optional\n                                        invalidValue\n                                \n                                \n                                            Optional\n                                        noFutureDatesAllowed\n                                \n                                \n                                            Optional\n                                        noPastDatesAllowed\n                                \n                                \n                                        required\n                                \n                                \n                                            Optional\n                                        yearDistantFuture\n                                \n                                \n                                            Optional\n                                        yearDistantPast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayOutOfRange\n                                    \n                                \n                                \n                                    \n                                        dayOutOfRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidValue\n                                    \n                                \n                                \n                                    \n                                        invalidValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noFutureDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noFutureDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noPastDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noPastDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantFuture\n                                    \n                                \n                                \n                                    \n                                        yearDistantFuture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantPast\n                                    \n                                \n                                \n                                    \n                                        yearDistantPast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { SimpleDate } from '../../models/simple-date.interface';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n */\n\nexport interface DateErrorMsg {\n  required: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n@Component({\n  selector: 'common-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class DateComponent extends Base implements OnInit {\n  // Exists for unit testing to validate errors set\n  @ViewChild( 'monthRef' ) monthRef: NgModel;\n  @ViewChild( 'dayRef' ) dayRef: NgModel;\n  @ViewChild( 'yearRef') yearRef: NgModel;\n\n  @Input() useCurrentDate: boolean = false;\n  @Input() required: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Date';\n  @Input() date: SimpleDate;\n  /** Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. */\n  @Input() restrictDate: 'future' | 'past' | 'any' = 'any';\n  @Input() errorMessages: DateErrorMsg;\n\n  @Output() dateChange: EventEmitter = new EventEmitter();\n\n  public monthList: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  monthLabelforId: string = 'month_' + this.objectId;\n  dayLabelforId: string = 'day_' + this.objectId;\n  yearLabelforId: string = 'year_' + this.objectId;\n\n  constructor( public form: NgForm,\n               private cd: ChangeDetectorRef ) {\n    super();\n  }\n\n  ngOnInit() {\n    if ( !this.errorMessages ) {\n      // Use default messages\n      this.errorMessages = {\n        required: this.label + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.label + '.',\n        yearDistantPast: 'Invalid ' + this.label + '.',\n        yearDistantFuture: 'Invalid ' + this.label + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.label + '.',\n        invalidValue: 'Invalid ' + this.label + '.'\n      };\n    }\n\n    if ( this.useCurrentDate ) {\n      // Set date to current date\n      this.date.month = moment().month();\n      this.date.day = moment().date();\n      this.date.year = moment().year();\n    }\n  }\n\n  /** Set the month and notify caller of change */\n  setMonth( value: string ): void {\n    const month = this.getNumericValue( value );\n\n    // console.log( 'monthRef: ', this.monthRef );\n    if ( this.date ) {\n      this.date.month = month;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the day and notify caller of change */\n  setDay( value: string ): void {\n    const day = this.getNumericValue( value );\n\n    // console.log(  'dayRef: ', this.dayRef );\n    if ( this.date ) {\n      this.date.day = day;\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the yera and notify caller of change */\n  setYear( value: string ): void {\n    const year = this.getNumericValue( value );\n\n    if ( this.date ) {\n      this.date.year = year;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /**\n   * Force the `day` input to run it's directives again. Important in cases\n   * where user fills fields out of order, e.g. sets days to 31 then month to\n   * Februrary.\n   */\n  private triggerDayValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.dayLabelforId] ) {\n        this.form.controls[this.dayLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  /** Convert string to numeric value or null if not */\n  private getNumericValue( value: string ): number | null {\n    const parsed = parseInt( value, 10 );\n    return ( isNaN( parsed ) ? null : parsed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateFieldFormatDirective.html":{"url":"directives/DateFieldFormatDirective.html","title":"directive - DateFieldFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateFieldFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date-field-format.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [commonDateFieldFormat]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:8\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:11\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[commonDateFieldFormat]'\n})\nexport class DateFieldFormatDirective {\n\n  @Output() ngModelChange: EventEmitter = new EventEmitter(false);\n\n  @HostListener('input', ['$event'])\n  onInput( event: KeyboardEvent ) {\n    const input = event.target as HTMLInputElement;\n    const maxlen = input.getAttribute( 'maxlength' );\n\n    let trimmed = input.value.trim();\n    if (/[^\\d]+/.test( input.value ) ) {\n\n      trimmed = trimmed.replace(/[^\\d]/g, '');\n    }\n\n    trimmed = trimmed.substr( 0, Number( maxlen ) );\n\n    input.value = trimmed;\n    this.ngModelChange.emit( trimmed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatepickerComponent.html":{"url":"components/DatepickerComponent.html","title":"component - DatepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatepickerComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n\n\n    \n        Description\n    \n    \n        PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\nhttps://github.com/kekeh/ngx-mydatepicker\nNOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\nTHIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\nMake sure to use the same version that this library uses.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DatepickerComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-datepicker\n            \n\n            \n                styleUrls\n                ./datepicker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datepicker.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                datepickerOptions\n                            \n                            \n                                DatepickerSizes\n                            \n                            \n                                model\n                            \n                            \n                                ngxdp\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDate\n                            \n                            \n                                convertDateToSimpleDate\n                            \n                            \n                                convertSimpleDateToDate\n                            \n                            \n                                isDate\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearButton\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSince\n                            \n                            \n                                disableUntil\n                            \n                            \n                                errorMessages\n                            \n                            \n                                labelText\n                            \n                            \n                                onlyFutureDates\n                            \n                            \n                                required\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/datepicker/datepicker.component.ts:89\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearButton\n                    \n                \n                \n                    \n                        Type :     \"visible\" | \"invisible\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:67\n                            \n                        \n                \n                    \n                        Control visibility of the clear 'x' button on the mini datepicker.\n'visible' is default, button exists\n'none' means the element does not exist\n'invisible' means the element takes up space but is not visible / cannot be\nused.\nInvisible is useful when you want to make sure a datepicker is the same\nsize as a visible one.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yyyy/mm/dd'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:72\n                            \n                        \n                \n                    \n                        Format for how to display the date to the user. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSince\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:49\n                            \n                        \n                \n                    \n                        Dates after disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableUntil\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:46\n                            \n                        \n                \n                    \n                        Dates before disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyFutureDates\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:52\n                            \n                        \n                \n                    \n                        Equivalent to setting disableBefore to tomorrow. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         DatepickerSizes\n\n                    \n                \n                \n                    \n                        Default value : DatepickerSizes.DEFAULT\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:36\n                            \n                        \n                \n                    \n                        Component size can be reduced, see Datepickersizes for options \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearDate\n                        \n                        \n                    \n                \n            \n            \n                \nclearDate()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertDateToSimpleDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertDateToSimpleDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IMyDate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertSimpleDateToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertSimpleDateToDate(date: IMyDate)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            IMyDate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \nisDate(x: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepickerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INgxMyDpOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:86\n                            \n                        \n\n                \n                    \n                        Default options for wrapped ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatepickerSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DatepickerSizes\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:78\n                            \n                        \n\n                \n                    \n                        Datetime model used to interface with ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxdp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMyDatePickerDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dp')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DateErrorMsg } from '../date/date.component';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n    \n        \n    {{labelText}}\n        \n\n                \n\n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n\n  \n       {{errorMessages.noFutureDatesAllowed}}\n   -->\n  \n       {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelText}}                                                                                                                         {{errorMessages.required}}             {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}   -->         {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DayValidationDirective.html":{"url":"directives/DayValidationDirective.html","title":"directive - DayValidationDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DayValidationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/day-validation.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => DayValidationDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDayValidation][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedMonth\n                            \n                            \n                                selectedYear\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedMonth\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/day-validation.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedYear\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/day-validation.directive.ts:15\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/day-validation.directive.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Directive({\n  selector: '[commonDayValidation][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => DayValidationDirective), multi: true}\n  ]\n})\nexport class DayValidationDirective implements Validator {\n\n  @Input() selectedMonth: string;\n  @Input() selectedYear: string;\n\n  validate( control: FormControl ): {[key: string]: any} | null {\n    const year: number = parseInt( this.selectedYear, 10 );\n    const month: number = parseInt( this.selectedMonth, 10 );\n\n    if ( !control.value ) {\n      return null; // empty value\n    }\n\n    const day: number = parseInt( control.value, 10 );\n    console.log( 'day: ', day );\n\n    if ( !isNaN( day ) ) {\n\n      // console.log( 'parent: ', date );\n      // Only process of value is numeric\n      if ( !isNaN( month )  && !isNaN( year ) ) {\n\n        // Determine days in month\n        const str = `${year}-${month}`;\n        let daysInMonth: number = moment(str, 'YYYY-MM').daysInMonth();\n        console.log( 'str: ', str + ', dayInMonth: ', daysInMonth );\n\n        if ( isNaN( daysInMonth ) ) {\n          daysInMonth = 31;\n        }\n\n        // Validate days\n        if ( day > daysInMonth || day \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DropdownComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                addTagText\n                            \n                            \n                                autocorrect\n                            \n                            \n                                clearable\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/dropdown/dropdown.component.ts:30\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addTag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addTagText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocorrect\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clearable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default label'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DropdownComponent)\n    }\n  ]\n})\nexport class DropdownComponent extends Base implements OnInit, ControlValueAccessor {\n  public model: any;\n\n  @Input() items = [];\n  @Input() label: string = 'Default label';\n  @Input() placeholder: string;\n  @Input() autocorrect: string;\n  @Input() addTag: boolean = false;\n  @Input() addTagText: string = 'Add';\n  @Input() required: boolean;\n  @Input() clearable: boolean = true;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n\n\n  constructor() {\n    super();\n   }\n\n  ngOnInit() {\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploaderMsg.html":{"url":"interfaces/FileUploaderMsg.html","title":"interface - FileUploaderMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploaderMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/file-uploader/file-uploader.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { AfterContentInit, ChangeDetectorRef, Component,\n    ContentChild, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnInit, Output, SimpleChanges, ViewChild, forwardRef, AfterViewInit } from '@angular/core';\nimport { NgForm, ControlContainer } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ModalDirective} from 'ngx-bootstrap';\nimport { PDFJSStatic } from 'pdfjs-dist';\nimport { Observable ,  Observer, fromEvent, merge } from 'rxjs';\nimport {map, filter, flatMap, scan, delay, retryWhen} from 'rxjs/operators';\nimport { CommonImage, CommonImageError, CommonImageProcessingError,\nCommonImageScaleFactors, CommonImageScaleFactorsImpl } from '../../models/images.model';\n// import { MspLogService } from '../../service/log.service';\n// import { MspDataService } from '../../service/msp-data.service';\n// import { BaseComponent } from '../base.component';\n// import { LogEntry } from '../logging/log-entry.model';\n// import {Person} from '../../model/application.model';\nimport {Router} from '@angular/router';\nimport { Base } from '../../models/base';\n// import {ApplicationBase} from '../../model/application-base.model';\n\n// const loadImage = require('blueimp-load-image');\n// const sha1 = require('sha1');\n\nimport * as loadImage_ from 'blueimp-load-image';\nconst loadImage = loadImage_;\nimport * as sha1_ from 'sha1';\nconst sha1 = sha1_;\n\n// const PDFJS: PDFJSStatic = require('pdfjs-dist');\nimport * as PDFJS_ from 'pdfjs-dist';\nconst PDFJS: PDFJSStatic = (PDFJS_ as any);\n\nexport interface FileUploaderMsg {\n    required: string;\n}\n\n// TODO - Remove this and fix tslint issues\n/* tslint:disable:max-line-length*/\n\n@Component({\n    selector: 'common-file-uploader',\n    templateUrl: './file-uploader.component.html',\n    styleUrls: ['./file-uploader.component.scss'],\n    viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FileUploaderComponent extends Base\n    implements OnInit, OnChanges, AfterContentInit {\n    noIdImage: Boolean = false;\n    private appConstants;\n    @ViewChild('dropZone') dropZone: ElementRef;\n    @ViewChild('browseFileRef') browseFileRef: ElementRef;\n    // @ViewChild('captureFileRef') captureFileRef: ElementRef;\n    @ViewChild('imagePlaceholderRef') imagePlaceholderRef: ElementRef;\n    @ViewChild('selectFileLabel') selectFileLabelRef: ElementRef;\n\n    // @ContentChild('uploadInstruction') uploadInstructionRef: ElementRef;\n    @Input() images: Array = new Array(0);\n    @Output() imagesChange: EventEmitter> = new EventEmitter>();\n    @Input() id: string;\n    @Input() showError: boolean;\n    @Input() required: boolean = false;\n    @Input() instructionText: string = 'Please upload required ID documents.';\n    @Input() errorMessages: FileUploaderMsg = {required: 'File is required.'};\n\n    @ViewChild('canvas') canvas: ElementRef;\n\n\n    @Output() errorDocument: EventEmitter = new EventEmitter();\n\n    constructor(\n                // private dataService: MspDataService,\n                // private logService: MspLogService,\n                private zone: NgZone,\n                private cd: ChangeDetectorRef , private router: Router,\n                private controlContainer: ControlContainer) {\n        super();\n        // this.application = this.getApplicationType();\n    }\n\n    /**\n     * This is created as a workaround to access the form control that binds to\n     * the input[type='file']. We can't access it via the template name bindings\n     * as that isn't working, so instead we access the parent form and then find\n     * the input by name.\n     */\n    get fileControl() {\n        const INPUT_NAME = `fileUploadBrowse-${this.id}`;\n        // note - should be \"this.controlContainer as NgForm\" here, which works,\n        // but fails on compiliation due to secondary entries\n        return (this.controlContainer as any).controls[INPUT_NAME];\n    }\n\n    /**\n     * Return true if file already exists in the list; false otherwise.\n     */\n    static checkImageExists(file: CommonImage, imageList: Array) {\n        if (!imageList || imageList.length = 0; i--) {\n                // console.log(`compare  ${imageList[i].id} with ${sha1Sum}, result ${imageList[i].id === sha1Sum}`);\n                if (imageList[i].id === sha1Sum) {\n                    console.log(`This file ${file.name} has already been uploaded.`);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * A special method to force the rendering of this component.  This is a workaround\n     * because for some unknown reason, AngularJS2 change detector does not detect the\n     * change of the images Array.\n     */\n    forceRender() {\n        this.zone.run(() => {\n        });\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        console.log('fileuploader onChanges', changes['images']);\n        // if (changes['images'] && (changes['images'].currentValue.length === 0 &&\n        //   changes['images'].previousValue.length > 0)) {\n        if (changes['images'] && (\n            changes['images'].currentValue.length === 0\n            && changes['images'].previousValue\n            && changes['images'].previousValue.length > 0)\n        ) {\n            this.noIdImage = true;\n        } else {\n            this.noIdImage = false;\n        }\n    }\n\n    /*\n     System processing steps\n\n     1. User clicks browse or drag-n-drops an file\n     2. For browse case, the browser is told to only accept mime type image/*, .JPG, .GIF, .PNG, etc,\n     however user can override and for drag-n-drop we don't can't impose this filter\n     4. Using the HTML5 File API, we open a handle on the file\n     5. Read the filename for later display to the user\n     6. Create a hidden Image element in the browser's DOM\n     7. Read the file's bytes as a DataUrl and copy them into the Image element\n     8. Wait until the Image finishes loading the image\n     9. Read the image element's natural width and height\n     10. Pass the File handle into a HTML5 Canvas lib (we need the XIFF headers to auto rotate, XIFF headers are not available in DataUrl)\n     11. The Canvas errors because it's a wrong type, e.g., TIFF, we abort and notify user\n     12. Instruct the Canvas lib to keep resizing the image if it exceeds a maximum width or height,\n     extract meta data, and auto-orient based on XIFF metadata.  It uses a \"contain\" operation which retains\n     it's width to height pixel ratio.\n     13. Call a function on the Canvas element to turn the Canvas into a JPEG of quality 50%.\n     14. Once in a Blob with get the blob size in bytes and a human friendly display size\n     15. In order to more easily manage the image, we convert the Blob to a DataUrl again.\n     16. Pass the DataUrl into a hash algorithm to create an identifier and to check if the image has already been uploaded\n     17. Next we check the final size of the image to ensure it's not to small in resolution\n     (arguably this could've been done earlier), if too small we notify user\n     18. Finally, the image is saved into the user's ongoing EA/PA application including localstorage\n     19. The image is displayed to user as a thumbnail\n\n     */\n\n    ngOnInit(): void {\n\n\n        const dragOverStream =\n            fromEvent(this.dropZone.nativeElement, 'dragover');\n\n        /**\n         * Must cancel the dragover event in order for the drop event to work.\n         */\n        dragOverStream.pipe(map(evt => {\n            return event;\n        })).subscribe(evt => {\n            // console.log('Cancel dragover event.');\n            evt.preventDefault();\n        });\n\n        const dropStream = fromEvent(this.dropZone.nativeElement, 'drop');\n        const filesArrayFromDrop = dropStream.pipe(\n            map(\n                function (event) {\n                    event.preventDefault();\n                    return event.dataTransfer.files;\n                }\n            ));\n\n        const browseFileStream = fromEvent(this.browseFileRef.nativeElement, 'change');\n        // const captureFileStream = fromEvent(this.captureFileRef.nativeElement, 'change');\n\n        merge(merge(browseFileStream).pipe(\n            map(\n                (event) => {\n                    event.preventDefault();\n                    return event.target['files'];\n\n                }\n            )),\n            filesArrayFromDrop).pipe(\n                filter(files => {\n                    console.log('files');\n                    return !!files && files.length && files.length > 0;\n                }),\n                flatMap(\n                    (fileList: FileList) => {\n\n                        return this.observableFromFiles(fileList, new CommonImageScaleFactorsImpl(1, 1));\n                    }\n                ),\n                filter(\n                    (mspImage: CommonImage) => {\n\n                        const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                // TODO - Is this necessary? Can likely be removed as it's exactly identical to the preceding.\n                filter((mspImage: CommonImage) => {\n\n                    const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                filter((mspImage: CommonImage) => {\n\n                    const imageSizeOk = this.checkImageDimensions(mspImage);\n                        if (!imageSizeOk) {\n                            this.handleError(CommonImageError.TooSmall, mspImage);\n                            this.resetInputFields();\n                        }\n                        return imageSizeOk;\n                    }\n                )\n            ).subscribe(\n            (file: CommonImage) => {\n\n                this.handleImageFile(file);\n                this.resetInputFields();\n            },\n\n            (error) => {\n                console.log('Error in loading image: %o', error);\n\n                /**\n                 * Handle the error if the image is gigantic that after\n                 * 100 times of scaling down by 30% on each step, the image\n                 * is still over 1 MB.\n                 */\n                if (error.errorCode) {\n                    if (CommonImageError.TooBig === error.errorCode) {\n                        this.handleError(CommonImageError.TooBig, error.image);\n                    } else if (CommonImageError.CannotOpen === error.errorCode) {\n                        if (!error.image) {\n                            error.image = new CommonImage();\n                            if (error.rawImageFile) {\n                                error.image.name = error.rawImageFile.name;\n                            }\n                        }\n                        this.handleError(CommonImageError.CannotOpen, error.image);\n                    } else if (CommonImageError.CannotOpenPDF === error.errorCode) {\n                        this.handleError(CommonImageError.CannotOpenPDF, error.image, error.errorDescription);\n                    } else {\n                        throw error;\n                    }\n                }\n\n\n            },\n            () => {\n                console.log('completed loading image');\n            }\n        );\n    }\n\n    test(var1) {\n        console.log(var1);\n    }\n\n    ngAfterContentInit() {\n\n        const imagePlaceholderEnterKeyStream = merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'keyup'),\n            fromEvent(this.selectFileLabelRef.nativeElement, 'keyup'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'keyup')\n        ).pipe(filter((evt: KeyboardEvent) => evt.key === 'Enter'));\n\n        merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'click'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'click'),\n            imagePlaceholderEnterKeyStream\n        ).pipe(\n            map((event) => {\n                event.preventDefault();\n                return event;\n            })\n        ).subscribe( (event) => { this.browseFileRef.nativeElement.click(); });\n    }\n\n    /**\n     * Solve size in this equation: size * 0.8to-the-power-of30 ) => {\n            const mspImages = [];\n            scaleFactors = scaleFactors.scaleDown(reductionScaleFactor);\n            for (let fileIndex = 0; fileIndex  {\n\n\n                        // this.logService.log({name: file.name + 'is successfully split into ' + images.length + ' images',\n                            // UUID: self.dataService.getMspUuid()}, 'File_Upload');\n\n                        images.map((image, index) => {\n                            image.name = pdfFile.name;\n                            this.resizeImage( image, self, scaleFactors, observer, pageNumber , true); // index starts from zero\n                            pageNumber = pageNumber + 1  ;\n                        });\n                    }, (error: string) => {\n                        console.log('error' + JSON.stringify(error));\n                        const imageReadError: CommonImageProcessingError =\n                            new CommonImageProcessingError(CommonImageError.CannotOpenPDF, error);\n                        observer.error(imageReadError);\n                    });\n                } else {\n                    // Load image into img element to read natural height and width\n                    this.readImage(file, pageNumber , (image: HTMLImageElement , imageFile: File , nextPageNumber: number)  => {\n                            image.id = imageFile.name; // .name deprecated, changed image.name to image.id\n                            this.resizeImage(image, self, scaleFactors, observer , nextPageNumber );\n                        },\n\n                        // can be ignored for bug, the log line is never called\n                        (error: CommonImageProcessingError) => {\n                            console.log('error' + JSON.stringify(error));\n                            observer.error(error);\n                        });\n                    pageNumber = pageNumber + 1  ;\n                }\n            }\n\n            // retryWhen is potential issue!\n        }).pipe(retryWhen(this.retryStrategy(32)));\n        return fileObservable;\n    }\n\n\n    private resizeImage( image: HTMLImageElement, self: this, scaleFactors: CommonImageScaleFactors, observer: Observer, pageNumber: number = 0 , isPdf: boolean = false) {\n// While it's still in an image, get it's height and width\n        const mspImage: CommonImage = new CommonImage();\n        const reader: FileReader = new FileReader();\n        console.log('image.name:' + image.id); // .name deprecated, changed image.name to image.id\n        // Copy file properties\n        mspImage.name = image.id ;\n        if (isPdf) {\n            mspImage.name = image.name + '-page' + pageNumber;  // Just give name to pdf\n        }\n        // Temporary so we don't have duplicate file names. TODO: Improve.\n        //   mspImage.name += Math.ceil(Math.random()*100);\n        mspImage.attachmentOrder = pageNumber ;\n\n\n        mspImage.naturalWidth = image.naturalWidth;\n        mspImage.naturalHeight = image.naturalHeight;\n\n        console.log(`image file natural height and width:\n            ${mspImage.naturalHeight} x ${mspImage.naturalWidth}`);\n\n        // Canvas will force the change to a JPEG\n        mspImage.contentType = 'image/jpeg'; // previously in appConstants\n\n        // Scale the image by loading into a canvas\n\n        console.log('Start scaling down the image using blueimp-load-image lib: ');\n        const scaledImage = loadImage(\n            image.src, // NOTE: we pass the File ref here again even though its already read because we need the XIFF metadata\n            function (canvas: HTMLCanvasElement, metadata: any) {\n\n                // Canvas may be an Event when errors happens\n                if (canvas instanceof Event) {\n                    self.handleError(CommonImageError.WrongType, mspImage);\n                    self.resetInputFields();\n                    return;\n                }\n                // Convert to blob to get size\n                canvas.toBlob((blob: Blob) => {\n                        // Copy the blob properties\n                        mspImage.size = blob.size;\n\n                        // log image info (but only for the first time before any scaling)\n                        // if (s\n\n                        const fileName = mspImage.name;\n                        const nBytes = mspImage.size;\n                        let fileSize = '';\n                        let fileSizeUnit = '';\n                        let sOutput: string = nBytes + ' bytes';\n                        // optional code for multiples approximation\n                        for (let aMultiples = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\n                                 nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n\n                            sOutput = nApprox.toFixed(3) + ' ' + aMultiples[nMultiple] + ' (' + nBytes + ' bytes)';\n                            fileSize = nApprox.toFixed(0);\n                            fileSizeUnit = aMultiples[nMultiple];\n                            mspImage.sizeUnit = fileSizeUnit;\n                        }\n\n                        console.log(`File ${fileName} is scaled down to: ${sOutput}`);\n                        mspImage.sizeTxt = sOutput;\n\n                        // call reader with new transformed image\n                        reader.onload = function (evt: any) {\n\n                            mspImage.fileContent = evt.target.result;\n                            mspImage.id = sha1(mspImage.fileContent);\n\n                            // keep scaling down the image until the image size is\n                            // under max image size\n\n                            /** previously in appConstants */\n                            const maxSizeBytes = 1048576;\n                            if (mspImage.size > maxSizeBytes) {\n\n                                console.log('File size after scaling down: %d, max file size allowed: %d',\n                                    mspImage.size, maxSizeBytes);\n\n                                const imageTooBigError: CommonImageProcessingError =\n                                    new CommonImageProcessingError(CommonImageError.TooBig);\n\n                                imageTooBigError.maxSizeAllowed = maxSizeBytes;\n                                imageTooBigError.commonImage = mspImage;\n\n                                observer.error(imageTooBigError);\n                            } else {\n                                // log image info\n                                //   self.logImageInfo(\"msp_file-uploader_after_resize_attributes\", self.dataService.getMspUuid(), mspImage);\n                                observer.next(mspImage);\n                            }\n                        };\n                        reader.readAsDataURL(blob);\n                    },\n\n                    // What mime type to make the blob as and jpeg quality\n                    'image/jpeg', 0.5);\n            },\n            {\n                maxWidth: 2600 * scaleFactors.widthFactor,\n                maxHeight: 3300 * scaleFactors.heightFactor,\n                contain: true,\n                canvas: true,\n                meta: true,\n                orientation: true\n            }\n        );\n    }\n\n    /**\n     * Max retry scaling down for maxRetry times.\n     */\n    retryStrategy(maxRetry: number) {\n        return function (errors: Observable) {\n\n            /**Done: COMPLETE THIS! For some reason can't get scan() to work, types always malformed.*/\n\n            // return errors.pipe(\n            //     // scan((acc, curr) => {acc + curr}, 0)\n            //     scan((acc, error, index) => {\n            //         return acc + error;\n            //     }, 0)\n            // );\n\n            // Done: Unsure if we have to re-implement this line. It causes errors, but simply removing it may not be appropriate.\n            // NOTE: RxJS-compat might be saving us here and \"fixing\" the errors. See if errors return when we remove rxjs-compat.\n            // return errors.pipe(scan((acc, curr) => acc + curr, 0))\n\n\n            return errors.pipe(scan(\n                // return errors.pipe(\n                (acc, error: any, index) => {\n                    // console.log('Error encountered: %o', error);;\n\n                    /**\n                     * If the error is about file too big and we have not reach max retry\n                     * yet, theyt keep going to scaling down.\n                     */\n                    if (acc  void,\n                      invalidImageHanlder: (error: CommonImageProcessingError) => void) {\n        const reader = new FileReader();\n\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            console.log('loading image into an img tag: %o', progressEvt);\n            // Load into an image element\n            const imgEl: HTMLImageElement = document.createElement('img');\n            imgEl.src = (reader.result as string);\n\n            // Wait for onload so all properties are populated\n            imgEl.onload = (args) => {\n                console.log('Completed image loading into an img tag: %o', args);\n                return callback(imgEl, imageFile, nextPageNumber);\n            };\n\n            imgEl.onerror =\n                (args) => {\n\n                    // log it to the console\n                    console.log('This image cannot be opened/read, it is probably an invalid image. %o', args);\n\n                    // throw new Error('This image cannot be opened/read');\n                    const imageReadError: CommonImageProcessingError =\n                        new CommonImageProcessingError(CommonImageError.CannotOpen);\n\n                    imageReadError.rawImageFile = imageFile;\n\n                    return invalidImageHanlder(imageReadError);\n                };\n        };\n\n        reader.readAsDataURL(imageFile);\n    }\n\n    private readPDF(pdfFile: File, pdfScaleFactor: number,\n                    callback: (image: HTMLImageElement[], pdfFile: File) => void, error: (errorReason: any) => void) {\n\n        PDFJS.disableWorker = true;\n        PDFJS.disableStream = true;\n\n        const reader = new FileReader();\n        let currentPage = 1;\n        const canvas = document.createElement('canvas');\n        const imgElsArray: HTMLImageElement[] = [];\n        const ctx = canvas.getContext('2d');\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            const docInitParams = {data: reader.result};\n            // TODO - The 'as any' was added when porting to common library from MSP\n            PDFJS.getDocument((docInitParams as any)).then((pdfdoc) => {\n                const numPages = pdfdoc.numPages;\n                if (currentPage = 50) {\n\n            // log it\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(),\n            //     mspImage, `Number of image files exceeds max of ${50}`);\n\n            // log to console\n            console.log(`Max number of image file you can upload is ${50}.\n      This file ${mspImage.name} was not uploaded.`);\n        } else {\n            this.images.push(mspImage);\n            this.imagesChange.emit(this.images);\n            this.showError = false;\n            this.noIdImage = false;\n        }\n    }\n\n    handleError(error: CommonImageError, mspImage: CommonImage, errorDescription?: string) {\n\n        if (!mspImage) {\n            mspImage = new CommonImage();\n        }\n        // just add the error to mspImage\n        mspImage.error = error;\n\n        // log the error\n        if (error !== CommonImageError.PDFnotSupported) {\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(), mspImage,\n            //     '  mspImageFile: ' + mspImage.name + '  mspErrorNum: ' + error + '  mspError: ' +\n            //     error + '-' + errorDescription);\n        }\n\n        // console.log(\"error with image: \", mspImage);\n        this.errorDocument.emit(mspImage);\n    }\n\n    /**\n     * Reset input fields so that user can delete a file and\n     * immediately upload that file again.\n     */\n    resetInputFields() {\n        // let brosweFileInputElement = this.browseFileRef.nativeElement;\n        // let captureFileInputElement = this.captureFileRef.nativeElement;\n        this.browseFileRef.nativeElement.value = '';\n        // this.captureFileRef.nativeElement.value = '';\n    }\n\n    deleteImage(mspImage: CommonImage) {\n        this.resetInputFields();\n        this.images = this.images.filter(x => x.uuid !== mspImage.uuid);\n        this.imagesChange.emit(this.images);\n\n        // If there are no images yet, we have to reset the input so it triggers 'required'.\n        if ( this.required && this.images.length  {\n        //         // console.log('log rest service response: ');\n        //         // console.log(response);\n        //     },\n        //     (error) => {\n        //         console.log('HTTP error response from logging service: ');\n        //         console.log(error);\n        //     },\n        //     () => {\n        //         // console.log('log rest service completed!');\n        //     }\n        // );\n    }\n\n\n\n    /**\n     * Return true if the image size is within range\n     * @param file\n     */\n    checkImageDimensions(file: CommonImage): boolean {\n        if (file.naturalHeight  0;\n        }\n        return true;\n    }\n\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormActionBarComponent.html":{"url":"components/FormActionBarComponent.html","title":"component - FormActionBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormActionBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-action-bar\n            \n\n            \n                styleUrls\n                ./form-action-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-action-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'common-form-action-bar',\n  templateUrl: './form-action-bar.component.html',\n  styleUrls: ['./form-action-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormActionBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    if (!this.isLoading && this.canContinue) {\n      this.btnClick.emit($event);\n    }\n    $event.stopPropagation();\n    return false;\n  }\n}\n\n    \n\n    \n        \n    \n       {{submitLabel}} \n      \n    \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{submitLabel}}               '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormActionBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSubmitBarComponent.html":{"url":"components/FormSubmitBarComponent.html","title":"component - FormSubmitBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSubmitBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n\n\n    \n        Description\n    \n    \n        FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n(ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\nin question.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-submit-bar\n            \n\n            \n                styleUrls\n                ./form-submit-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-submit-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                increaseWidth\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Is the component nested inside a form, and not properly full-width in a\npage layout? We add negative margins to space out.\nCurrently tihs only works for the 'blank' layout type for the page\nframework, but would be easy to extend by adding more negative classes as\nneed be.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n/**\n * FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\n * in question.\n */\n@Component({\n  selector: 'common-form-submit-bar',\n  templateUrl: './form-submit-bar.component.html',\n  styleUrls: ['./form-submit-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormSubmitBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Is the component nested inside a form, and not properly full-width in a\n   * page layout? We add negative margins to space out.\n   *\n   * Currently tihs only works for the 'blank' layout type for the page\n   * framework, but would be easy to extend by adding more negative classes as\n   * need be.\n   */\n  @Input() increaseWidth: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n        \n           {{submitLabel}} \n          \n        \n    \n    \n    \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{submitLabel}}                                           '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSubmitBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullNameComponent.html":{"url":"components/FullNameComponent.html","title":"component - FullNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/full-name/full-name.component.ts\n\n\n    \n        Description\n    \n    \n        FullNameComponent includes a first, middle, and last name field.  If you only\nneed an individual field, @see NameComponent.\nNote This component is in dev, there are issues around \"required\"\nTODO - Properly handle \"required\"\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent) }\n                \n            \n\n\n            \n                selector\n                common-full-name\n            \n\n            \n                styleUrls\n                ./full-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                    Public\n                                NameRegEx\n                            \n                            \n                                    Private\n                                pattern\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                firstNamelabel\n                            \n                            \n                                lastNamelabel\n                            \n                            \n                                middleNamelabel\n                            \n                            \n                                person\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                personChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'First Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Last Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        middleNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Middle Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        person\n                    \n                \n                \n                    \n                        Type :         Person\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        personChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FullNameErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            NameRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'is required'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n    \n        \n    \n                 \n\n\n\n    \n\n\n\n    \n\n\n\n\n    \n        \n            {{firstNamelabel}}\n            \n            \n                {{firstNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{middleNamelabel}}\n            \n            \n                {{middleNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{lastNamelabel}}\n            \n            \n                {{lastNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n\n        \n    \n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     {{firstNamelabel}}                                        {{firstNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{middleNamelabel}}                                        {{middleNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{lastNamelabel}}                                        {{lastNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                         -->'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FullNameErrorMsg.html":{"url":"interfaces/FullNameErrorMsg.html","title":"interface - FullNameErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FullNameErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/full-name/full-name.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoAddressResult.html":{"url":"interfaces/GeoAddressResult.html","title":"interface - GeoAddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoAddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        fullAddress\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    private BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    private ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET,BLOCK,INTERSECTION')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    private processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = 'CAN'; // Default to Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocoderService.html":{"url":"injectables/GeocoderService.html","title":"injectable - GeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                ADDRESS_URL\n                            \n                            \n                                    Private\n                                BASE_URL\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                lookup\n                            \n                            \n                                    Private\n                                processResponse\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \nlookup(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processResponse(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:52\n                \n            \n\n\n            \n                \n                    Formats the response from ADDRESS_URL, trimming irrelevant fields.\nThis works for other requests for the same API too, however it may error\nout on some items if matchPrecisionNot is not set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response from ADDRESS_URL\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoAddressResult[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:22\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:59\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ADDRESS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}/addresses.json?`\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocoder.api.gov.bc.ca'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:16\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:11\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    private BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    private ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET,BLOCK,INTERSECTION')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    private processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = 'CAN'; // Default to Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        HeaderComponent is the stylized blue header at the top of every single\napplication.  It has a built-in \"Skip to Content\" tab-accessible section\nthat's best practice for screen readers.  You must create an element with\nid='content' for this to work!  Best practice is to put this \"content\"\nelement as a wrapper aroud your \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SKIP_CONTENT_HASH\n                            \n                            \n                                    Public\n                                skipLinkPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateSkipToContentLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                routeIsActive\n                            \n                            \n                                updateSkipContentLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                logoSrc\n                            \n                            \n                                serviceName\n                            \n                            \n                                urlBaseName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        logoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/gov3_bc_logo.png'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        urlBaseName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateSkipToContentLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSkipToContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeIsActive\n                        \n                        \n                    \n                \n            \n            \n                \nrouteIsActive(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSkipContentLink\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSkipContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKIP_CONTENT_HASH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipLinkPath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n/**\n * HeaderComponent is the stylized blue header at the top of every single\n * application.  It has a built-in \"Skip to Content\" tab-accessible section\n * that's best practice for screen readers.  **You must create an element with\n * `id='content'` for this to work!**  Best practice is to put this \"content\"\n * element as a wrapper aroud your ``\n *\n */\n@Component({\n  selector: 'common-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() serviceName: string = '';\n  @Input() urlBaseName: string = '';\n  @Input() logoSrc: string = 'assets/gov3_bc_logo.png';\n\n  public skipLinkPath;\n  private SKIP_CONTENT_HASH = '#content';\n\n  constructor(private router: Router ) {\n  }\n\n  ngOnInit() {\n\n    this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n    ).subscribe(this.updateSkipContentLink.bind(this));\n\n    this.updateSkipContentLink();\n  }\n\n  routeIsActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  updateSkipContentLink() {\n    this.skipLinkPath = this.generateSkipToContentLink();\n  }\n\n  // Slightly complicated because we have to include the deployUrl in manually.\n  // If deployUrl changes this code must too.\n  //\n  // \"http://full-url.com/fpcare/example#content\"\n  private generateSkipToContentLink(): string {\n    // don't add duplicate #contents\n    if (window.location.href.indexOf(this.SKIP_CONTENT_HASH) !== -1) {\n      return window.location.href;\n    }\n\n    return `${window.location.origin}/${this.urlBaseName + this.router.url}#content`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{serviceName}}\n      Skip to main content\n    \n\n      \n        \n      \n      \n        \n      \n      \n        \n      \n  \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{serviceName}}      Skip to main content                                                                  -->  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpaEnvResponse.html":{"url":"interfaces/ISpaEnvResponse.html","title":"interface - ISpaEnvResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISpaEnvResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/consent-modal/consent-modal.component.ts\n        \n\n            \n                Description\n            \n            \n                Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\nthen proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\nmaintenance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_NOW\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_NOW\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_NOW:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { forwardRef, Component, EventEmitter, Input, Output, ViewChild, Inject, OnInit} from '@angular/core';\nimport * as moment from 'moment';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { CommonLogger, CommonLogMessage } from '../../services/logger.service';\n// import { }\nimport { AbstractHttpService } from '../../services/abstract-api-service';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n/**\n * Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\n * then proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\n * maintenance.\n *\n *\n * @example\n*       \t\n*           \n * @export\n */\n\nexport interface ISpaEnvResponse {\n  SPA_ENV_MSP_MAINTENANCE_FLAG: string;\n  SPA_ENV_MSP_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_ACL_MAINTENANCE_FLAG: string;\n  SPA_ENV_ACL_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_START: string;\n  SPA_ENV_NOW: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_END: string;\n}\n\n// Disabling tslint for @example below.\n// tslint:disable:max-line-length\n\n/**\n * ConsentModalComponent, aka the \"Information Collection Notice\", is a modal\n * designed to be shown at the beginning of an application. It is a boilerplate\n * checkbox to consent to information collection.\n *\n * Currently this component requires the body to be manually set as a child\n * element (via transclusion)\n *\n * TODO - Set default body if none is passed in.\n *\n * @example\n *       \n *                      Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC . \n *       \n *\n *\n *        // Component code - Remove backticks when copying (necessary to render docs)\n *        `@ViewChild('consentModal') consentModal: ConsentModalComponent`\n *        ...\n *        openModal(){\n *          this.consentModal.showFullSizeView();\n *        }\n */\n@Component({\n  selector: 'common-consent-modal',\n  templateUrl: './consent-modal.component.html',\n  styleUrls: ['./consent-modal.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ConsentModalComponent )}\n  ]\n})\n\nexport class ConsentModalComponent extends AbstractHttpService implements ControlValueAccessor, OnInit  {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    @Input() processName: string;\n\n    /**\n     * If `isUnderMaintenance` is true, then this will automatically try and\n     * make a request to the SPA ENV server to determine if it's in a\n     * maintenance window.  If your application determines this manually, leave\n     * this alone.\n     */\n    @Input() isUnderMaintenance: boolean = false;\n    @Input() title: string;\n    @Input() body: string; // = 'Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .';\n    @Input() agreeLabel: string = 'I have read and understand this info';\n    @Input() continueButton: string = 'Continue';\n    @Input() maintenanceFlag: string = 'false';\n    @Input() url: string = '/msp/api/env';\n    @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n    @Output() close = new EventEmitter();\n    @Output() cutOffDate: EventEmitter = new EventEmitter();\n    @Output() accept = new EventEmitter();\n\n    public spaEnvRes: ISpaEnvResponse = {} as any;\n    public maintenanceMessage: string;\n    \n    // public maintenanceFlag: string ;\n   \n\n    // tslint:disable-next-line:max-line-length\n    private _applicationHeaderMap: Map = new Map([['ACL', '{\"SPA_ENV_MSP_ACL_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_ACL_MAINTENANCE_MESSAGE\":\"\"}'], ['MSP', '{\"SPA_ENV_MSP_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_MAINTENANCE_MESSAGE\":\"\"}'], ['PA', '{\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\"}']]);\n    agreeCheck: boolean = false;\n\n    public _onChange = (_: any) => {};\n    public _onTouched = () => {};\n\n\n    constructor(protected http: HttpClient,  private logService: CommonLogger) {\n        super(http);\n    }\n\n\n\n    ngOnInit(): void {\n      // Called after ngOnInit when the component's or directive's content has been initialized.\n      // Add 'implements AfterContentInit' to the class.\n      if (this.isUnderMaintenance) {\n        this.inMaintenance();\n      }\n\n    }\n\n    /**\n     * Call this method to display the modal.\n     */\n    showFullSizeView() {\n        this.fullSizeViewModal.config.backdrop = false;\n        this.fullSizeViewModal.config.keyboard = false;\n        this.fullSizeViewModal.show();\n    }\n\n    continue() {\n        this.accept.emit(true);\n        this.fullSizeViewModal.hide();\n        this.close.emit();\n        this._onChange(true);\n        this._onTouched();\n    }\n\n    // Api callout to get the message from the Rapid code\n    sendSpaEnvServer(rapidResponseCode: string): Observable {\n        this._headers = new HttpHeaders({\n            'SPA_ENV_NAME': rapidResponseCode\n        });\n        return this.post(this.url, null);\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n      console.log('handleError', JSON.stringify(error));\n      if (error.error instanceof ErrorEvent) {\n          // Client-side / network error occured\n          console.error('MspMaintenanceService error: ', error.error.message);\n      } else {\n          // The backend returned an unsuccessful response code\n          console.error(`MspMaintenanceService Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n      }\n      // this.logService.log({event: 'error', key: 'Cannot get maintenance flag from spa-env-server'});\n\n      // A user facing erorr message /could/ go here; we shouldn't log dev info through the throwError observable\n      return of(error);\n  }\n\n\n  inMaintenance() {\n        const headerName = this._applicationHeaderMap.get(this.processName);\n\n        this.sendSpaEnvServer(headerName)\n                .subscribe(response => {\n                    this.spaEnvRes =  response;\n                    console.log(this.spaEnvRes);\n                    if (this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage =  this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_MESSAGE;\n                    }\n                    if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_START) {\n                        this.cutOffDate.emit(this.spaEnvRes);\n                    }\n\n            }, (error: Response | any) => {\n                console.log('Error when calling the MSP Maintenance: ' + error);\n                this.logService.log({\n                  event: 'ACL - SPA Env System Error',\n                  success: false,\n                  errMsg: 'ACL - SPA Env Rapid Response Error' + error\n                });\n        }\n\n      );\n  }\n\n  registerOnChange(fn: any): void {\n    this.accept.emit(fn) ;\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n\n    //\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MaskModel.html":{"url":"classes/MaskModel.html","title":"class - MaskModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MaskModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/mask.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onUpdate\n                            \n                            \n                                upperCasePipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/mask.model.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/mask.model.ts:34\n                \n            \n\n\n            \n                \n                    Updates the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/mask.model.ts:27\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import {EventEmitter, Input, Output} from '@angular/core';\nimport { Base } from './base';\n\nexport const LETTER = /[A-Z]/i; // Ignore case here, then upperCase it via pipe.\nexport const NUMBER = /\\d/;\nexport const SPACE = ' ';\n\nexport class MaskModel extends Base {\n\n  @Input() value: string;\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = true;\n\n  public mask: any;\n  public placeholder: string;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  /**\n   * Updates the value\n   */\n  onUpdate( value: string ) {\n\n    // Emit value without spaces\n    this.valueChange.emit( value );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameComponent.html":{"url":"components/NameComponent.html","title":"component - NameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/name/name.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-name\n            \n\n            \n                styleUrls\n                ./name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                nameStr\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrors\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayErrors\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:32\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:87\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-name',\n  templateUrl: './name.component.html',\n  styleUrls: ['./name.component.scss']\n})\nexport class NameComponent extends Base implements ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Name';\n  @Input() maxlen: string = '255';\n  @Input() labelforId: string = 'name_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.nameStr = val;\n    }\n  }\n  get value() {\n    return this.nameStr;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  public nameStr: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.nameStr = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  displayErrors(): boolean {\n    const displayErr = this.controlDir && !this.controlDir.disabled &&\n    ( this.controlDir.dirty || this.controlDir.touched );\n    return displayErr;\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlen, 10 );\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{label}} is required.\n  \n  \n     1; else initInvalid;\">\n        {{label}} must begin with a letter and cannot include special characters except hyphens,\n        periods, apostrophes and blank characters.\n    \n  \n\n\n\n  {{label}} must be with a letter.\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{label}} is required.         1; else initInvalid;\">        {{label}} must begin with a letter and cannot include special characters except hyphens,        periods, apostrophes and blank characters.        {{label}} must be with a letter.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFrameworkComponent.html":{"url":"components/PageFrameworkComponent.html","title":"component - PageFrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-framework/page-framework.component.ts\n\n\n    \n        Description\n    \n    \n        The \"Page Framework\" is a template to be used on FPCare pages to ensure\nconsistent layout.  It should be used on every page unless there is a good\nexception.\nNote: CommonFormActionBar (and SubmitBar) must come AFTER this element, not\ninside in version 2.0.0 and above.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \nThis will go in the middle column\nSo will this\n This will go in the side column, or tips.\n\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-framework\n            \n\n            \n                styleUrls\n                ./page-framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"single\" | \"double\" | \"blank\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The \"Page Framework\" is a template to be used on FPCare pages to ensure\n * consistent layout.  It should be used on every page unless there is a good\n * exception.\n *\n * Note: CommonFormActionBar (and SubmitBar) must come *AFTER* this element, not\n * inside in version 2.0.0 and above.\n *\n * @example\n * \n *        This will go in the middle column\n *        So will this\n *         This will go in the side column, or tips.\n * \n * \n *\n * @export\n */\n@Component({\n  selector: 'common-page-framework',\n  templateUrl: './page-framework.component.html',\n  styleUrls: ['./page-framework.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageFrameworkComponent implements OnInit {\n\n  @Input() layout: 'single' | 'double' | 'blank' | 'default' = 'default';\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageListInterface.html":{"url":"interfaces/PageListInterface.html","title":"interface - PageListInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageListInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for used when checking completeness of item\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isComplete\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:10\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageSectionComponent.html":{"url":"components/PageSectionComponent.html","title":"component - PageSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-section/page-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-section\n            \n\n            \n                styleUrls\n                ./page-section.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/page-section/page-section.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"double\" | \"tips\" | \"noTips\"\n\n                    \n                \n                \n                    \n                        Default value : 'tips'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-section/page-section.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-section/page-section.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'common-page-section',\n  templateUrl: './page-section.component.html',\n  styleUrls: ['./page-section.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PageSectionComponent implements OnInit {\n\n  @Input() layout: 'double' | 'tips' | 'noTips' = 'tips';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n      \n      \n    \n  \n\n\n\n\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/password/password.component.ts\n\n\n    \n        Description\n    \n    \n        PasswordComponent is a text input for a user's password. It includes:\n\nA password strength bar\nMinimum length validations\n\nNote - if your application has requirements to check things like username is not\npresent in password, we recommend doing this in the (passwordChange) callback.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                criteriaMsg\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                    Public\n                                hideValue\n                            \n                            \n                                    Private\n                                minLenMsgSeg1\n                            \n                            \n                                    Private\n                                minLenMsgSeg2\n                            \n                            \n                                    Public\n                                pswdStrength\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                strengthPercentage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPasswordStrength\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputBlur\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                label\n                            \n                            \n                                maxLen\n                            \n                            \n                                minLen\n                            \n                            \n                                objectID\n                            \n                            \n                                password\n                            \n                            \n                                pwdCriteria\n                            \n                            \n                                showPasswordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                passwordChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         PasswordErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '32'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pwdCriteria\n                    \n                \n                \n                    \n                        Type :     string | RegExp\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPasswordStrength\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:71\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:paste(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:142\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPasswordStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordStrength(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:157\n                \n            \n\n\n            \n                \n                    Get the strength of the password\n0 = too guessable: risky password. (guesses = 10^10)  https://github.com/dropbox/zxcvbn\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonInputBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:131\n                \n            \n\n\n            \n                \n                    Passes the value entered back to the calling component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value the was entered by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteriaMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' contains invalid characters.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PasswordErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' must be at least '\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' characters in length.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pswdStrength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' is required.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            strengthPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n\n  \n    = 4? 'bg-success' : (pswdStrength >= 3? 'bg-warning' : 'bg-danger')}}\"\n        role=\"progressbar\"\n        [style.width]='strengthPercentage + \"%\"'\n        [attr.aria-valuenow]=\"strengthPercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\">\n    \n  \n  = 4? 'text-success' : (pswdStrength >= 3? 'text-warning' : 'text-danger')}}\">\n\n\n\n  \n    {{errMsg.required}}\n  \n  \n      {{errMsg.minLength}}\n  \n  \n      {{errMsg.criteria}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      = 4? \\'bg-success\\' : (pswdStrength >= 3? \\'bg-warning\\' : \\'bg-danger\\')}}\"        role=\"progressbar\"        [style.width]=\\'strengthPercentage + \"%\"\\'        [attr.aria-valuenow]=\"strengthPercentage\"        aria-valuemin=\"0\"        aria-valuemax=\"100\">        = 4? \\'text-success\\' : (pswdStrength >= 3? \\'text-warning\\' : \\'text-danger\\')}}\">      {{errMsg.required}}          {{errMsg.minLength}}          {{errMsg.criteria}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordErrorMsg.html":{"url":"interfaces/PasswordErrorMsg.html","title":"interface - PasswordErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/password/password.component.ts\n        \n\n            \n                Description\n            \n            \n                TODO:  Convert to custom form control - remove ngForm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        minLength\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                    \n                                \n                                \n                                    \n                                        minLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/person.model.ts\n        \n\n            \n                Description\n            \n            \n                Person, each project can extend this person class\nNPM package dependencies:\n  a) moment\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateOfBirth\n                            \n                            \n                                    Public\n                                dobFormat\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                getAge\n                            \n                            \n                                isDobEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dateOfBirthShort\n                                \n                                \n                                    formatDateOfBirth\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SimpleDate\n\n                        \n                    \n                    \n                        \n                            Default value : { year: null, month: null, day: null }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YYYY/MM/DD'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:19\n                            \n                        \n\n                \n                    \n                        Format to display birthdate \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Person)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAge\n                        \n                        \n                    \n                \n            \n            \n                \ngetAge()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:85\n                \n            \n\n\n            \n                \n                    Calculates the age from date of birth \n\n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDobEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisDobEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:45\n                \n            \n\n\n            \n                \n                    Indicates whether or not the date of birth is empty \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dateOfBirthShort\n                    \n                \n\n                \n                    \n                        getdateOfBirthShort()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:25\n                                \n                            \n                    \n                        \n                                Returns DoB in YYYYMMDD format, used by API. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formatDateOfBirth\n                    \n                \n\n                \n                    \n                        getformatDateOfBirth()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:35\n                                \n                            \n                    \n                        \n                                Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:53\n                                \n                            \n                    \n                        \n                                Concatenates the first and last name together \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(fullName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:71\n                                \n                            \n                    \n                        \n                                Sets the full name for the person (first, middle and last names)\nNOTE: Just for development with dummy data and unit tests\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fullName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import * as moment_ from 'moment';\nimport { Base } from './base';\nimport { SimpleDate } from './simple-date.interface';\nconst moment = moment_;\n\n/**\n * Person, each project can extend this person class\n * NPM package dependencies:\n *  a) moment\n */\nexport class Person extends Base {\n\n  // Parts of a person's name\n  public firstName: string;\n  public middleName: string;\n  public lastName: string;\n\n  /** Format to display birthdate */\n  public dobFormat = 'YYYY/MM/DD';\n\n  // Initialize dob to nulls\n  public dateOfBirth: SimpleDate = { year: null, month: null, day: null };\n\n  /** Returns DoB in YYYYMMDD format, used by API. */\n  get dateOfBirthShort(): string {\n    return this.isDobEmpty() ? null :\n        moment( {\n          year: this.dateOfBirth.year,\n          month: this.dateOfBirth.month - 1,\n          day: this.dateOfBirth.day\n        }).format( 'YYYYMMDD' );\n  }\n\n  /** Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes */\n  get formatDateOfBirth(): string {\n    return this.isDobEmpty() ? null :\n        moment( {\n          year: this.dateOfBirth.year,\n          month: this.dateOfBirth.month - 1,\n          day: this.dateOfBirth.day\n        }).format( this.dobFormat );\n  }\n\n  /** Indicates whether or not the date of birth is empty */\n  isDobEmpty(): boolean {\n    return Object.keys( this.dateOfBirth )\n        .map( key => this.dateOfBirth[key] )\n        .filter( x => x ) // Filter out null/undefined\n        .length !== 3;\n  }\n\n  /** Concatenates the first and last name together */\n  get name(): string {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /**\n   * Sets the full name for the person (first, middle and last names)\n   * NOTE: Just for development with dummy data and unit tests\n   */\n  set name( fullName: string ) {\n\n    const names = fullName.split( ' ') ;\n    this.firstName = names[0];\n\n    if ( names.length === 2 ) {\n      this.lastName = names[1];\n    } else if ( names.length === 3 ) {\n      this.middleName = names[1];\n      this.lastName = names[2];\n    }\n  }\n\n  /** Calculates the age from date of birth */\n  getAge(): Number {\n    const dobDt = new Date( this.dateOfBirth.year, this.dateOfBirth.month, this.dateOfBirth.day );\n    return Math.ceil( moment( ).diff( dobDt, 'year', true ) );\n  }\n\n  /* Copy function */\n  copy( object: Person ) {\n    this.firstName = object.firstName;\n    this.middleName = object.middleName;\n    this.lastName = object.lastName;\n    this.dateOfBirth.month = object.dateOfBirth.month;\n    this.dateOfBirth.day = object.dateOfBirth.day;\n    this.dateOfBirth.year = object.dateOfBirth.year;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhnComponent.html":{"url":"components/PhnComponent.html","title":"component - PhnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phn/phn.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phn\n            \n\n            \n                styleUrls\n                ./phn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                phn\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                validatePHN\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isBCPhn\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                phnList\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phn/phn.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCPhn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Personal Health Number (PHN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phn_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        phnList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:31\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validatePHN\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePHN(phn: string, isBCPhn: boolean, allowEmptyValue: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    phn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isBCPhn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                                \n                                    allowEmptyValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:27\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { NUMBER, SPACE } from '../../models/mask.model';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'common-phn',\n  templateUrl: './phn.component.html',\n  styleUrls: ['./phn.component.scss']\n})\nexport class PhnComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Personal Health Number (PHN)';\n  @Input() maxlen: string = '15';\n  @Input() placeholder: string = '1111 111 111';\n  @Input() labelforId: string = 'phn_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() phnList: string[] = [];\n  @Input() isBCPhn: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val) {\n      this.phn = val;\n    }\n  }\n  get value() {\n    return this.phn;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  phn: string = '';\n  mask: any;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  onValueChange( value: any ) {\n    console.log( 'onValueChange: ', value, this.phn );\n\n    if ( value !== this.phn ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.phn = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    console.log( 'onblur: ', event );\n\n    if ( event.target.value ) {\n      const phnValid = this.validatePHN( event.target.value , this.isBCPhn );\n      console.log( 'phnValid: ', phnValid, event.target.value );\n\n      if ( this.controlDir ) {\n        this.controlDir.control.setErrors(( phnValid ? null : { 'pattern': true } ));\n      }\n\n      // Duplicate PHN check\n      if ( phnValid && this.phnList && this.phnList.length ) {\n\n        const duplicate = this.phnList.find( x => x === event.target.value );\n        console.log( 'duplicate phn: ', duplicate );\n        if ( this.controlDir ) {\n          this.controlDir.control.setErrors(( duplicate ? { 'duplicate': true } : null ));\n        }\n      }\n    }\n\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    console.log( 'writeValue: ', value, this.phn );\n    if ( value ) {\n      this.phn = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Empty value (null, undefined, empty string) are treated as invalid.\n  private validatePHN( phn: string, isBCPhn: boolean = true, allowEmptyValue: boolean = false ): boolean {\n    // pre req checks\n    if (phn === null || phn === undefined || phn.trim().length  0) {\n        // multiply the value against the weight\n        result = num * weights[i];\n\n        // divide by 11 and save the remainder\n        result = result % 11;\n\n        // add it to our sum\n        sumOfRemainders += result;\n      }\n    }\n\n    // mod by 11\n    const checkDigit = 11 - (sumOfRemainders % 11);\n\n    // if the result is 10 or 11, it is an invalid PHN\n    if (checkDigit === 10 || checkDigit === 11) {\n      return false;\n    }\n\n    // Compare against 10th digit\n    const finalDigit = Number(phn.substring(9, 10));\n    if (checkDigit !== finalDigit) {\n      return false;\n    }\n\n    // All done!\n    return true;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      {{label}} is invalid.\n    \n    \n      {{label}} was already used for another family member.\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{label}} is required.              {{label}} is invalid.              {{label}} was already used for another family member.      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneNumberComponent.html":{"url":"components/PhoneNumberComponent.html","title":"component - PhoneNumberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhoneNumberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phone-number/phone-number.component.ts\n\n\n    \n        Description\n    \n    \n        PhoneNumberComponent is a used to show the Phone number.\n\n    \n\n    \n        Extends\n    \n    \n                MaskModel\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => PhoneNumberComponent) }\n                \n            \n\n\n            \n                selector\n                common-phone-number\n            \n\n            \n                styleUrls\n                ./phone-number.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-number.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Static\n                                PhoneNumberRegEx\n                            \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setPhoneNumber\n                            \n                            \n                                writeValue\n                            \n                            \n                                onUpdate\n                            \n                            \n                                upperCasePipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayMask\n                            \n                            \n                                label\n                            \n                            \n                                objectID\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                required\n                            \n                            \n                                disabled\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phone-number/phone-number.component.ts:47\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mobile'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phone_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        phoneNumber\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:14\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:11\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:12\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPhoneNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetPhoneNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MaskModel\n\n                \n            \n            \n                \n                        Defined in         MaskModel:34\n\n                \n            \n\n\n            \n                \n                    Updates the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MaskModel\n\n                \n            \n            \n                \n                        Defined in         MaskModel:27\n\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PhoneNumberRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { MaskModel, NUMBER, SPACE } from '../../models/mask.model';\n\nimport {  ControlValueAccessor,  NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * PhoneNumberComponent is a used to show the Phone number.\n *\n * @example\n *       \t\n*         \n\n * @export\n */\n\n\n@Component({\n  selector: 'common-phone-number',\n  templateUrl: './phone-number.component.html',\n  styleUrls: ['./phone-number.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => PhoneNumberComponent )}\n  ]\n})\n\nexport class PhoneNumberComponent extends MaskModel implements ControlValueAccessor {\n  \n  static PhoneNumberRegEx = '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$';\n  @Input() displayMask: boolean = true;\n  @Input() required: boolean = false;\n  @Input() label: string = 'Mobile';\n  @Input() objectID: string = 'phone_' + this.objectId;\n  @Input() phoneNumber: string;\n  @Output() onChange = new EventEmitter();\n // public mask = ['+','1',SPACE,'(',NUMBER,NUMBER,NUMBER,')',SPACE,NUMBER,NUMBER,NUMBER,'-',NUMBER,NUMBER,NUMBER,NUMBER];\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n\n  constructor() {\n    super();\n    this.placeholder = '+1 (555) 555-5555';\n    this.mask = ['+', '1', SPACE, '(', NUMBER, NUMBER, NUMBER, ')', SPACE, NUMBER, NUMBER, NUMBER, '-', NUMBER, NUMBER, NUMBER, NUMBER];\n  }\n\n\n  setPhoneNumber(value: string) {\n    this.phoneNumber = value;\n    this.onChange.emit(this.phoneNumber);\n    this._onChange(value);\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n  \n  \n  \n    \n      {{label}} is required.\n    \n  \n\n\n\n  \n          \n  \n    \n      {{label}} is required.\n     \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} is required.                              {{label}} is required.       '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhoneNumberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostalCodeComponent.html":{"url":"components/PostalCodeComponent.html","title":"component - PostalCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostalCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/postal-code/postal-code.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-postal-code\n            \n\n            \n                styleUrls\n                ./postal-code.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./postal-code.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                pcFormat\n                            \n                            \n                                postalCode\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                upperCasePipe\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                displayMask\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/postal-code/postal-code.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Postal Code'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postalCode_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'A1A 1A1'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:104\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pcFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:28\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { LETTER, NUMBER, SPACE } from '../../models/mask.model';\nimport { Base } from '../../models/base';\n\n\n@Component({\n  selector: 'common-postal-code',\n  templateUrl: './postal-code.component.html',\n  styleUrls: ['./postal-code.component.scss']\n})\nexport class PostalCodeComponent extends Base implements ControlValueAccessor  {\n\n  @Input() label: string = 'Postal Code';\n  @Input() displayMask: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() placeholder: string = 'A1A 1A1';\n  @Input() labelforId: string = 'postalCode_' + this.objectId;\n  @Input() disabled: boolean = false;\n\n  @Input()\n  set value( val: string ) {\n    // console.log( 'set value: ', val );\n    if (val) {\n      this.postalCode = val;\n    }\n  }\n  get value() {\n    // console.log( 'get value: ', this.postalCode );\n    return this.postalCode;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  postalCode: string = '';\n  mask: any;\n  pcFormat: RegExp = /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];\n  }\n\n  onValueChange( value: any ) {\n    // console.log( 'onValueChange: ', value, this.postalCode );\n\n    if ( value !== this.postalCode ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.postalCode = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n\n    // console.log( 'onblur: ', event );\n\n    if ( this.displayMask && event.target.value ) {\n      // Check for valid characters\n\n      const passTest = this.pcFormat.test( event.target.value );\n      if ( this.controlDir ) {\n        this.controlDir.control.setErrors( (passTest ? null : { 'pattern': true } ) );\n      }\n     // console.log( 'passTest: ', passTest, event.target.value );\n    }\n\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    // console.log( 'writeValue: ', value, this.postalCode );\n    if ( value ) {\n      this.postalCode = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      Must be in the format {{placeholder}}.\n    \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} is required.              Must be in the format {{placeholder}}.        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostalCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProvinceComponent.html":{"url":"components/ProvinceComponent.html","title":"component - ProvinceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProvinceComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/province/province.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-province\n            \n\n            \n                styleUrls\n                ./province.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./province.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                province\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                provinceList\n                            \n                            \n                                required\n                            \n                            \n                                useDropDownList\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/province/province.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'province_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please select a province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        provinceList\n                    \n                \n                \n                    \n                        Type :         ProvinceList[]\n\n                    \n                \n                \n                    \n                        Default value : PROVINCE_LIST\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropDownList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:55\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:51\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlen: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.province = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n\n\n\n  \n    {{label}} is required.\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{label}} is required.    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProvinceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProvinceList.html":{"url":"interfaces/ProvinceList.html","title":"interface - ProvinceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProvinceList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/province/province.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        description\n                                \n                                \n                                        provinceCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provinceCode\n                                    \n                                \n                                \n                                    \n                                        provinceCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlen: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.province = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioComponent.html":{"url":"components/RadioComponent.html","title":"component - RadioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/radio/radio.component.ts\n\n\n    \n        Description\n    \n    \n        RadioComponent is a single radio which can be used to have multiple radios\nbased on the radio label values.\nTo display radio in a vertical style use display=\"table-row-group\" by default\nit shows in horizontal or inline display, display='inline-block' You can\nhave many radio's and the number is based on the Radio label Value. For 3\nradio buttons, radioLabels value should be passed in the below format\n  [\n         {\n           \"label\": \"Myself only\",\n           \"value\": \"MyselfOnly\"\n         },\n         {\n           \"label\": \"All members on my MSP account\",\n           \"value\": \"AllMembers\"\n         },\n         {\n           \"label\": \"One specific member on my MSP account\",\n           \"value\": \"SpecificMember\"\n         }\n  ];\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-radio\n            \n\n            \n                styleUrls\n                ./radio.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radio.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setStatus\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                disabled\n                            \n                            \n                                display\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                radioLabels\n                            \n                            \n                                showError\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                statusChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/radio/radio.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :     \"table-row-group\" | \"inline-block\"\n\n                    \n                \n                \n                    \n                        Default value : 'inline-block'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.label + ' is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radioLabels\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:53\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        statusChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:58\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetStatus(evt: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self} from '@angular/core';\nimport {Base} from '../../models/base';\nimport {ControlValueAccessor, NgControl} from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value should be passed in the below format\n *\n *\n *      [\n *             {\n *               \"label\": \"Myself only\",\n *               \"value\": \"MyselfOnly\"\n *             },\n *             {\n *               \"label\": \"All members on my MSP account\",\n *               \"value\": \"AllMembers\"\n *             },\n *             {\n *               \"label\": \"One specific member on my MSP account\",\n *               \"value\": \"SpecificMember\"\n *             }\n *      ];\n *\n * @example\n *        \n *        \n *\n * @export\n *\n */\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends Base implements ControlValueAccessor {\n\n\n  @Input() radioLabels: Array ;\n  @Input() checked: boolean = false; // TODO: Remove after confirm not used\n  @Input() disabled: boolean = false;\n  @Input() label: string ;\n  @Input() value: string ;\n  @Input() showError: boolean;\n  @Input() errorMessageRequired: string = this.label + ' is required.';\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n\n  @Output() statusChange: EventEmitter = new EventEmitter();\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  setStatus(evt: string) {\n    // this.value = evt;\n    this._onChange(evt);\n    this.statusChange.emit(evt);\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      \n      {{val.label}}\n      \n    \n  \n\n\n  \n      {{errorMessageRequired}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{val.label}}                    {{errorMessageRequired}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RouteGuardService.html":{"url":"guards/RouteGuardService.html","title":"guard - RouteGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RouteGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/route-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Use this service to implement Route Guards in your application. This is for a\ntypical form flow, where the user must proceed sequentially from one page to\nthe next.\nTo setup, you must:\n\nCreate a service implementing the abstract methods in AbstractPgService (\"RegistrationService\")\nSetup AbstractPgCheckService in NgModule providers, to useExisting the service from previous step.\nAdd this RouteGuardService to same providers from previous step.\nConfigure routes to use RouteGuardService - canActivate or canActivateChild\nHave each \"page\" in the form call setPageIncomplete() or setPageComplete() (from the \"RegistrationService\")\n\nYou must make sure to setup AbstractPgCheckService in NgModules correctly.\n\n                \n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [RouteGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.setPageIncomplete(); }\ncontinue() { this.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPgCheckService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/route-guard.service.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPgCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:73\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\n\n/**\n * Use this service to implement Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPgService` (\"RegistrationService\")\n * 2. Setup AbstractPgCheckService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this RouteGuardService to same providers from previous step.\n * 4. Configure routes to use RouteGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"RegistrationService\")\n *\n *\n * You must make sure to setup AbstractPgCheckService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [RouteGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.setPageIncomplete(); }\n *                continue() { this.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router,\n    private service: AbstractPgCheckService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Pre-requisite has not be completed\n     */\n    if (false === this.service.isPrerequisiteComplete()) {\n      this.router.navigate([this.service.getStartUrl()]);\n      return false;\n    }\n\n    if (false === this.service.isPageComplete(pageUrl)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerPayload.html":{"url":"injectables/ServerPayload.html","title":"injectable - ServerPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                expiry\n                            \n                            \n                                nonce\n                            \n                            \n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nonce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedCoreModule.html":{"url":"modules/SharedCoreModule.html","title":"module - SharedCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDayValidationDirective\n\nDayValidationDirective\n\nSharedCoreModule -->\n\nDayValidationDirective->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nYearValidateDirective\n\nYearValidateDirective\n\nSharedCoreModule -->\n\nYearValidateDirective->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDayValidationDirective \n\nDayValidationDirective \n\nDayValidationDirective  -->\n\nSharedCoreModule->DayValidationDirective \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\nYearValidateDirective \n\nYearValidateDirective \n\nYearValidateDirective  -->\n\nSharedCoreModule->YearValidateDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/lib/shared-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DayValidationDirective\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                        \n                            YearValidateDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DayValidationDirective\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                        \n                            YearValidateDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreBreadcrumbComponent } from './components/core-breadcrumb/core-breadcrumb.component';\nimport { FormActionBarComponent } from './components/form-action-bar/form-action-bar.component';\nimport { PageFrameworkComponent } from './components/page-framework/page-framework.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { WizardProgressBarComponent } from './components/wizard-progress-bar/wizard-progress-bar.component';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { ProgressbarModule, ModalModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { DateComponent } from './components/date/date.component';\nimport { DayValidationDirective } from './components/date/day-validation.directive';\nimport { DateFieldFormatDirective } from './components/date/date-field-format.directive';\nimport { YearValidateDirective } from './components/date/year-validate.directive';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { FormSubmitBarComponent } from './components/form-submit-bar/form-submit-bar.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { PostalCodeComponent } from './components/postal-code/postal-code.component';\nimport { PageSectionComponent } from './components/page-section/page-section.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { AddressComponent } from './components/address/address.component';\nimport { CountryComponent } from './components/country/country.component';\nimport { ProvinceComponent } from './components/province/province.component';\nimport { CityComponent } from './components/city/city.component';\nimport { StreetComponent } from './components/street/street.component';\nimport { ButtonGroupComponent } from './components/button-group/button-group.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ConsentModalComponent } from './components/consent-modal/consent-modal.component';\nimport { NameComponent } from './components/name/name.component';\nimport { PhoneNumberComponent } from './components/phone-number/phone-number.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AccordionCommonComponent } from './components/accordion/accordion.component';\nimport { ValidateNameDirective } from './components/name/validate-name.directive';\nimport { SinComponent } from './components/sin/sin.component';\nimport { PhnComponent } from './components/phn/phn.component';\nimport { FullNameComponent } from './components/full-name/full-name.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ValidateBcPostalDirective } from './components/postal-code/validate-bc-postal.directive';\nimport { XiconButtonComponent } from './components/xicon-button/xicon-button.component';\n\nconst componentList = [\n  CoreBreadcrumbComponent,\n  FormActionBarComponent,\n  PageFrameworkComponent,\n  PasswordComponent,\n  WizardProgressBarComponent,\n  DateComponent,\n  DayValidationDirective,\n  DateFieldFormatDirective,\n  YearValidateDirective,\n  DatepickerComponent,\n  FileUploaderComponent,\n  ThumbnailComponent,\n  FormSubmitBarComponent,\n  PostalCodeComponent,\n  PageSectionComponent,\n  DropdownComponent,\n  ToggleComponent,\n  AddressComponent,\n  CountryComponent,\n  ProvinceComponent,\n  CityComponent,\n  StreetComponent,\n  ButtonGroupComponent,\n  ButtonComponent,\n  CheckboxComponent,\n  ConsentModalComponent,\n  NameComponent,\n  FullNameComponent,\n  PhoneNumberComponent,\n  RadioComponent,\n  AccordionCommonComponent,\n  ValidateNameDirective,\n  SinComponent,\n  PhnComponent,\n  HeaderComponent,\n  ValidateBcPostalDirective,\n  XiconButtonComponent\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule,\n    NgxMyDatePickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgSelectModule,\n    TypeaheadModule.forRoot(),\n    AccordionModule.forRoot()\n  ],\n  declarations: [\n    componentList\n  ],\n  exports: [\n    componentList\n  ],\n  providers: [\n    NgForm\n  ]\n})\nexport class SharedCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDate.html":{"url":"interfaces/SimpleDate.html","title":"interface - SimpleDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/simple-date.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface used in the following components/models:\n  a) person.model.ts\n  b) date.component.ts\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDate {\n  day: number;\n  month: number;\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SinComponent.html":{"url":"components/SinComponent.html","title":"component - SinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sin/sin.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sin\n            \n\n            \n                styleUrls\n                ./sin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                sin\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                validateSIN\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                sinList\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sin/sin.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Social Insurance Number (SIN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sin_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sinList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSIN\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSIN(sin: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sin\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:29\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { NUMBER, SPACE } from '../../models/mask.model';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'common-sin',\n  templateUrl: './sin.component.html',\n  styleUrls: ['./sin.component.scss']\n})\nexport class SinComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Social Insurance Number (SIN)';\n  @Input() maxlen: string = '15';\n  @Input() placeholder: string = '111 111 111';\n  @Input() labelforId: string = 'sin_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() sinList: string[] = [];\n\n  @Input()\n  set value( val: string ) {\n    console.log( 'set value: ', val );\n    if ( val ) {\n      this.sin = val;\n\n      console.log( 'value: ', this.sin );\n    }\n  }\n  get value() {\n    console.log( 'get value: ', this.sin );\n    return this.sin;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  sin: string = '';\n  mask: any;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  onValueChange( value: any ) {\n    console.log( 'onValueChange: ', value, this.sin );\n\n    if ( value !== this.sin ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.sin = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    console.log( 'onblur: ', event );\n\n    if ( event.target.value ) {\n      const sinValid = this.validateSIN( event.target.value );\n      console.log( 'sinValid: ', sinValid, event.target.value );\n\n      if ( this.controlDir ) {\n        this.controlDir.control.setErrors(( sinValid ? null : { 'pattern': true } ));\n      }\n\n      // Duplicate Sin check\n      if ( sinValid && this.sinList && this.sinList.length ) {\n\n        const duplicate = this.sinList.find( x => x === event.target.value );\n        console.log( 'duplicate sin: ', duplicate );\n        if ( this.controlDir ) {\n          this.controlDir.control.setErrors(( duplicate ? { 'duplicate': true } : null ));\n        }\n      }\n    }\n\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    console.log( 'writeValue: ', value, this.sin );\n    if ( value ) {\n      this.sin = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private validateSIN( sin: string ): boolean {\n\n    // pre req checks\n    if (sin === null || sin === undefined || sin.length  9) {\n        result = result - 9;\n      }\n\n      // add it to our sum\n      sum += result;\n    }\n\n    // The sum must be divisible by 10\n    if (sum % 10 !== 0) {\n      return false;\n    }\n\n    // All done!\n    return true;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      {{label}} is invalid.\n    \n    \n      {{label}} was already used for another family member.\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{label}} is required.              {{label}} is invalid.              {{label}} was already used for another family member.      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StreetComponent.html":{"url":"components/StreetComponent.html","title":"component - StreetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StreetComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/street/street.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-street\n            \n\n            \n                styleUrls\n                ./street.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./street.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                street\n                            \n                            \n                                typeaheadList$\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onError\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                onSelect\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                useGeoCoder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                selectEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl, geocoderService: GeocoderService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/street/street.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geocoderService\n                                                  \n                                                        \n                                                                        GeocoderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Full street address or rural route'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'street_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Street Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useGeoCoder\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(err: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyUp(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: TypeaheadMatch)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TypeaheadMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:48\n                            \n                        \n\n                \n                    \n                        Search string to store result from GeoCoder request \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:50\n                            \n                        \n\n                \n                    \n                        The subject that triggers on user text input and gets typeaheadList$ to update.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeaheadList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:45\n                            \n                        \n\n                \n                    \n                        The list of results, from API, that is passed to the typeahead list\nResult from GeoCoderService address lookup\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/street/street.component.ts:31\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/street/street.component.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Observable, Subject, of } from 'rxjs';\nimport { GeoAddressResult, GeocoderService } from '../../services/geocoder.service';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'common-street',\n  templateUrl: './street.component.html',\n  styleUrls: ['./street.component.scss']\n})\nexport class StreetComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'Full street address or rural route';\n  @Input() maxlen: string = '250';\n  // TODO - Replace maxlen with maxlength across this and all other components\n  // @Input() maxlength: string = '250';\n  @Input() labelforId: string = 'street_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() useGeoCoder: boolean = false;\n  @Input() placeholder: string = 'Street Name';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.street = val;\n    }\n  }\n  get value() {\n    return this.street;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n  @Output() selectEvent: EventEmitter = new EventEmitter();\n\n  street: string = '';\n\n  /**\n   * The list of results, from API, that is passed to the typeahead list\n   * Result from GeoCoderService address lookup\n   */\n  typeaheadList$: Observable;\n\n  /** Search string to store result from GeoCoder request */\n  private search: string;\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl,\n               private geocoderService: GeocoderService ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n\n    // Set up for using GeoCoder\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => {\n        return this.geocoderService.lookup(searchPhrase);\n      }),\n      // tap(log => console.log('taplog', log)),\n      catchError(err => this.onError(err))\n    );\n  }\n\n  onValueChange( value: any ) {\n    if ( this.useGeoCoder ) {\n      // set the search string\n      this.search = value;\n    }\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n        this.street = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n\n  onKeyUp(event: KeyboardEvent): void {\n    /**\n     * Filter out 'enter' and other similar keyboard events that can trigger\n     * when user is selecting a typeahead option instead of entering new text.\n     * Without this filter, we do another HTTP request + force disiplay the UI\n     * for now reason\n     */\n    if (event.keyCode === 13 || event.keyCode === 9) {\n      // enter & tab\n      return;\n    }\n\n    this.searchText$.next(this.search);\n  }\n\n  onError(err: any): Observable {\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  onSelect(event: TypeaheadMatch): void {\n    console.log( 'onSelect: ', event.item );\n    this.street = event.item.street;\n    this.selectEvent.emit( event.item );\n  }\n}\n\n    \n\n    \n        {{label}}\n\n    \n\n\n\n\n  \n    {{label}} is required.\n  \n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}          {{label}} is required.    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'StreetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailComponent.html":{"url":"components/ThumbnailComponent.html","title":"component - ThumbnailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/thumbnail/thumbnail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-thumbnail\n            \n\n            \n                styleUrls\n                ./thumbnail.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullSizeViewModal\n                            \n                            \n                                scaledWidth\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                hideFullSizeView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showFullSizeView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageObject\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageObject\n                    \n                \n                \n                    \n                        Type :         CommonImage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nhideFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nshowFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullSizeViewModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fullSizeViewModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaledWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, ViewChild, OnInit, Input, Output, EventEmitter, ViewContainerRef } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { CommonImage } from '../../models/images.model';\n\n@Component({\n  selector: 'common-thumbnail',\n  templateUrl: './thumbnail.html',\n  styleUrls: ['./thumbnail.scss']\n})\nexport class ThumbnailComponent implements OnInit {\n  @Input() imageObject: CommonImage;\n  @Input() reviewMode: boolean = false;\n  @Output() deleteImage: EventEmitter = new EventEmitter();\n  @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n\n  private viewContainerRef: ViewContainerRef;\n  constructor(viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  scaledWidth: number = 300;\n  ngOnInit() {\n\n    const scaledWidthString: string = (180 * this.imageObject.naturalWidth / this.imageObject.naturalHeight).toFixed(0);\n    // console.log('scaled width: ' + scaledWidthString);\n    this.scaledWidth = parseInt(scaledWidthString, 10);\n\n    if (this.scaledWidth > 250) {\n      // console.log('Scaled width > 250, drop it down to 250');\n      this.scaledWidth = 250;\n    } else if (this.scaledWidth \n    \n\n    \n        \n   300}\"\n    (click)=\"showFullSizeView()\">\n  \n    Remove\n  \n\n\n\n  \n    \n      \n        {{imageObject.name}}\n        \n          &times;\n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   300}\"    (click)=\"showFullSizeView()\">      Remove                      {{imageObject.name}}                  ×                                                                                '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/toggle/toggle.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-toggle\n            \n\n            \n                styleUrls\n                ./toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/toggle/toggle.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent extends Base implements OnInit {\n\n  @Input() data: boolean;\n  @Input() label: string;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateBcPostalDirective.html":{"url":"directives/ValidateBcPostalDirective.html","title":"directive - ValidateBcPostalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateBcPostalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateBcPostal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-bc-postal.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\nexport const commonValidateBcPostal: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for BC postal code\n  */\n const criteria: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$');\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidBCPostal': true };\n  }\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateBcPostal]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true}\n  ]\n})\nexport class ValidateBcPostalDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateBcPostal( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateNameDirective.html":{"url":"directives/ValidateNameDirective.html","title":"directive - ValidateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/name/validate-name.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/validate-name.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\nexport const commonValidateName: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n   /**\n   * Valid characters for name\n   */\n  const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidChar': true };\n  }\n  return null;\n};\n\n\n@Directive({\n  selector: '[commonValidateName]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true}\n  ]\n})\nexport class ValidateNameDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateName( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardProgressBarComponent.html":{"url":"components/WizardProgressBarComponent.html","title":"component - WizardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n\n\n    \n        Description\n    \n    \n        NPM Dependencies:\n  a) rxjs\n  b) ngx-bootstrap\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-wizard-progress-bar\n            \n\n            \n                styleUrls\n                ./wizard-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeIndex\n                            \n                            \n                                    Private\n                                routerEvents$\n                            \n                            \n                                stepContainer\n                            \n                            \n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateProgressPercentage\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollStepIntoView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressSteps\n                    \n                \n                \n                    \n                        Type :         WizardProgressItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateProgressPercentage\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateProgressPercentage()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActiveIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetActiveIndex(url)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollStepIntoView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollStepIntoView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Primarily for mobile, this horizontally scrolls the step into view.\nNote - be very careful with any changes to this function because it steps\noutside of Angular to call native browser functions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('steps')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef,\n         ViewChildren, QueryList, ChangeDetectionStrategy,\n         ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { WizardProgressItem } from '../../models/container';\n\n/**\n * NPM Dependencies:\n *  a) rxjs\n *  b) ngx-bootstrap\n */\n\n@Component({\n  selector: 'common-wizard-progress-bar',\n  templateUrl: './wizard-progress-bar.component.html',\n  styleUrls: ['./wizard-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardProgressBarComponent implements OnInit, OnDestroy {\n  @Input() progressSteps: WizardProgressItem[] = [];\n  @ViewChild('stepContainer') stepContainer: ElementRef;\n  @ViewChildren('steps') steps: QueryList>;\n\n  public activeIndex: number;\n\n  private routerEvents$: Subscription;\n\n  constructor(private router: Router, private cd: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n\n    // Update the progress bar view on route change and _only_ route chaange.\n    // Skip most of Angular's ChangeDetection in favour of manually optimizing.\n    this.routerEvents$ = this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n      map((ev: NavigationEnd) => ev.url)\n    ).subscribe(url => {\n      this.activeIndex = this.getActiveIndex(url);\n      this.cd.detectChanges();\n      this.scrollStepIntoView();\n    });\n\n    // Must schedule first run manually, or bar won't be set.\n    this.activeIndex = this.getActiveIndex(this.router.url);\n  }\n\n  ngOnDestroy() {\n    this.cd.detach();\n    this.routerEvents$.unsubscribe();\n  }\n\n  calculateProgressPercentage(): Number {\n    const denominator = this.progressSteps.length;\n    const numerator = this.activeIndex + 1;\n\n    if (denominator === 0 || numerator > denominator) {\n      return 100;\n    }\n\n    // Because we've switched from space-evenly to space-around (for IE), we\n    // have to handle the half-space that space-around adds to the start/end of\n    // the container\n    const halfSpace = 1 / (denominator * 2);\n    return Math.round(((numerator / denominator) - halfSpace) * 100);\n  }\n\n  getActiveIndex(url): number {\n    return this.progressSteps.findIndex(x => url.includes(x.route));\n  }\n\n   /**\n   * Primarily for mobile, this horizontally scrolls the step into view.\n   *\n   * Note - be very careful with any changes to this function because it steps\n   * outside of Angular to call native browser functions.\n   */\n  private scrollStepIntoView() {\n    const target = this.steps.toArray()[this.activeIndex];\n    const container = document.getElementsByClassName('horizontal-scroll');\n    if (container.length === 1) {\n      // Since we're already breaking out of Angular, we try and be safe by using a try/catch.\n      // Otherwise an error here could halt execution,\n      try {\n        container[0].scrollLeft = Math.abs(target.nativeElement.offsetLeft - (window.outerWidth / 2));\n      } catch (error) {}\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n      {{step.title}}\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{step.title}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'WizardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardProgressItem.html":{"url":"interfaces/WizardProgressItem.html","title":"interface - WizardProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        route\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XiconButtonComponent.html":{"url":"components/XiconButtonComponent.html","title":"component - XiconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  XiconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/xicon-button/xicon-button.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-xicon-button\n            \n\n            \n                styleUrls\n                ./xicon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xicon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBtnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBtnClick\n                        \n                        \n                    \n                \n            \n            \n                \nonBtnClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'common-xicon-button',\n  templateUrl: './xicon-button.component.html',\n  styleUrls: ['./xicon-button.component.scss']\n})\nexport class XiconButtonComponent {\n\n  @Input() label: string;\n  /**\n   * @deprecated - Remove at breaking change and go to (click)\n   */\n  @Output() clickEvent: EventEmitter = new EventEmitter();\n  @Output() click: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  onBtnClick() {\n    this.clickEvent.emit();\n    this.click.emit();\n  }\n}\n\n    \n\n    \n        \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'XiconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/YearValidateDirective.html":{"url":"directives/YearValidateDirective.html","title":"directive - YearValidateDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  YearValidateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/year-validate.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => YearValidateDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonYearValidate][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonYearValidate\n                            \n                            \n                                selectedDay\n                            \n                            \n                                selectedMonth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonYearValidate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedDay\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedMonth\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/year-validate.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n// TODO:  Create a message structure to pass in error messages similar to password module.\n\n@Directive({\n  selector: '[commonYearValidate][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => YearValidateDirective), multi: true}\n  ]\n})\nexport class YearValidateDirective implements Validator  {\n\n  @Input() commonYearValidate: string;\n  @Input() selectedDay: string;\n  @Input() selectedMonth: string;\n\n  validate( control: FormControl ): {[key: string]: any} | null {\n    const day: number = parseInt( this.selectedDay, 10 );\n    const month: number = parseInt( this.selectedMonth, 10 );\n\n    // console.log( 'validate year: ', control.value );\n\n    if ( !control.value ) {\n      return null; // empty value\n    }\n\n    const year: number = parseInt( control.value, 10 );\n\n    // Only process if value is numeric\n    if ( !isNaN(  year ) ) {\n      const currentYear = moment().get( 'y' );\n\n      if ( currentYear - year > 150 ) {\n        return { 'yearDistantPast': true };\n      }\n\n      if ( year - currentYear > 150 ) {\n        return { 'yearDistantFuture': true} ;\n      }\n\n      // Check whether dates can be present or past\n      if ( this.commonYearValidate && this.commonYearValidate !== 'any' &&\n           !isNaN( day )  && !isNaN( month ) ) {\n\n        const diff = moment( { year: year, month: month, day: day } )\n          .diff( moment(), 'days', true );\n\n         /**\n          * Validate current date as if it's a future date, and reject it when only\n          * accepting past dates.  We accomplish this by comparing diff against 1.\n          */\n          if ( diff = -1 && this.commonYearValidate === 'past' ) {\n            return { 'noFutureDatesAllowed': true };\n          }\n      }\n\n      return null;\n    }\n\n    return { 'invalidValue': true };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nUnreleased \"moh-common-lib\" (2019-06-28)\n2.0.0 \"moh-common-lib\" (2019-06-28)\nBug Fixes\n\nDate: Remove console logs. (a9aaf59)\nPHN: Remove console logs when setting values. (d4f0e3b)\nStepper/WizardProgress: Add vertical padding (b555787)\n\nFeatures\n\nFormActionBar: Change to full-width,  remove widthOptions (6254d29)\nName, Postal: Update validators to be compatible with reactive forms (e35f16b)\n\nStyles\n\nPageFramework:  Full height page framework, pushes form bar down (6b8cedd)\n\nBREAKING CHANGES\n\nPageFramework: Shows an error when a FormActionBar is embedded\nFormActionBar: Width changes may break designs, @Input removed\n\n1.8.0 \"moh-common-lib\" (2019-06-25)\nBug Fixes\n\nDropdown: Add visible form label to input (2a511e7)\nProvince: Add placeholder when not using dropdown (8e823c5)\nProvince: Init val = undefined (was empty string); fix placeholder. (09ae712)\n\nFeatures\n\nCity: Add placeholder @Input with default (f103e7c)\nDropdown: Add 'clearable' property from ng-select (8f24e2e)\nProvince: Field is clearable when not required (47d614a)\nStreet: Add placeholder @Input with default (ae493e7)\n\n1.7.0 \"moh-common-lib\" (2019-06-24)\nBug Fixes\n\nCheckbox: Checkbox component now defaults to unchecked. (6775a4d)\n\nDocumentation\n\nAdditionalDocumentation:  preserveSymlinks in for npm link (e458627)\nRouteGuard: Document RouteGuardService and related classes. (fc7fe65)\nRouteGuard: Fix instruction examples for RouteGuard. (3a06f99)\n\nFeatures\n\nXIconButton: Add XIconButtonComponent. Include fixes to RadioComponent. (0ba1d1e)\n\n1.6.2 \"moh-common-lib\" (2019-06-20)\nBug Fixes\n\nCheckbox: Fix labels for checkbox to properly associate (af516d0)\n\n1.6.1 \"moh-common-lib\" (2019-06-19)\nBug Fixes\n\naddress and component - defaults now displaying (6c09982)\n\nFeatures\n\nroute guard implemented (befc319)\n\n1.6.0 \"moh-common-lib\" (2019-06-19)\nDocumentation\n\nContributing: Update contributing to show WIP option (3f42b31)\n\nFeatures\n\nPageFramework: Add 15px left/right padding, to counter taking padding from .container-fluid (7febf6d)\n\n1.5.0 \"moh-common-lib\" (2019-06-18)\nBug Fixes\n\nSIN, Address, RouteGuard: SIN all 0s fix, add RouteGuard service, and default address data. (4295b03)\nToggle: Switch order of Yes/No, so that 'No' comes first. (e485f67)\n\n1.4.0 \"moh-common-lib\" (2019-06-13)\nFeatures\n\ne2e: Add new methods in abstract-test-page (#19) (a702d6d), closes #19\n\n1.3.0 \"moh-common-lib\" (2019-06-13)\nDocumentation\n\nConsentModal: Add example typescript code to open modal. (7ff8510)\nConsentModal: Document consent modal with example (fbc012d)\n\nFeatures\n\nFormActionBar: Add 'extra-width' option to widthOption for all bps (5b88093)\n\n1.2.0 \"moh-common-lib\" (2019-06-10)\nFeatures\n\nFormActionBar: Add \"widthOption\" to for custom CSS width override (36476f8)\n\n1.1.1 \"moh-common-lib\" (2019-06-07)\nFeatures\n\nHeader: Logo image path can be overwritten (03c1243)\n\n1.1.0 \"moh-common-lib\" (2019-06-07)\nBug Fixes\n\nSIN string all zeros - invalid (96a58b1)\nSIN, PHN: SIN string all zeros is invalid, added isBCPHn to PHN. (51bfe3b)\n\nBuild\n\nnpm-scripts: Update what is committed after auto-buiding (c8fb31b)\n\nDocumentation\n\nReadme: Update to readme and docs homepage (f334faf)\n\nFeatures\n\nHeader: Create HeaderComponent with built-in \"Skip To Content\" (3868c50)\n\n1.0.2 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nToggle: Properly emit value changes. Had a typo. (e2271b7)\n\n1.0.1 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nRadio: Removed the default status label and changed the name of radio (#17) (acbbdc1), closes #17\n\nCode Refactoring\n\nSecurity: up to date in 10.256s (ac7406b)\nToggle: ToggleComponent now uses RadioComponent under the hood (e81927b)\n\n1.0.0 \"moh-common-lib\" (2019-06-05)\nBug Fixes\n\nImports: Merge /services, /models, /images entry points into main (151f173)\n\nFeatures\n\nFullName: Create FullNameComponent for first/middle/last (41f5609)\n\n0.0.34 \"moh-common-lib\" (2019-06-05)\nFeatures\n\nPHN, SIN components from FPC. Name majorly refactored. (c04b81d)\n\n0.0.33 \"moh-common-lib\" (2019-06-04)\nBug Fixes\n\nConsentModal:  ConsentModal passes TSLint rules (66f9608)\nConsentModal: Fixed multiple compile time issues with import paths (09ce95a)\nRadioComponent: Changed onStatusChange to statusChange (185148b)\n\nDocumentation\n\nButtonComponent: Updated documentation for ButtonComponent. (4d5992a)\nButtonGroupComponent: ButtonGroupComponent is DEPRECATED (c580225)\nRadioComponent: Re-organize docs for radio component (b80520f)\n\nFeatures\n\nCreate Button, Checkbox, Consent Modal, Radio, Name, Phone Number components (dd29a60)\nCreate Button, Checkbox, Consent Modal, radio, Name, Phone Number Components  (53a109b), closes PR#13\n\n0.0.32 \"moh-common-lib\" (2019-05-15)\nBug Fixes\n\nautocomplete turned off, fixed bug in postal to work with fpcare (1c8242e)\nDatepicker: Remove the IE provided 'X' to clear input (2ddfc23)\n\nDocumentation\n\nBasic styling to use BC Gov colours and fonts (7226b37)\nCreate design guidelines markdown file for each component (9f5a04e)\n\nFeatures\n\nButtonGroupComponent: Create ButtonGroupComponent with ControlValueAccessor (22710b7)\nDocumentation: Customize tabs in docs, adding \"Design Guidelines\" (df678e6)\n\n0.0.31 \"moh-common-lib\" (2019-05-07)\nBug Fixes\n\nAddressComponent: Include Typeahead module necessary to compile. (7d2e7cd)\nCaptchaComponent: Add autocomplete=\"false\" to CAPTCHA (18d69c6)\n\nFeatures\n\nAddressComponent: Create AddressComponent copied from prime-web. (238c01d)\nAddressComponent: Implement NG_VALUE_ACCESSOR for reactive forms. (8d79d30)\nAddressComponent: Split AddressComponent into City/Country/Province Components (3a98fb0)\nE2E: Create AbstractTestPage in moh-common-lib/e2e (c347c39)\n\n0.0.30 \"moh-common-lib\" (2019-04-25)\nBug Fixes\n\nDatepicker: Name attr is always unique thanks to UUID (1ea543d)\n\n0.0.29 \"moh-common-lib\" (2019-04-17)\nBug Fixes\n\nPostalCodeComponent: Placeholder default fixed, changed to @Input) (67c4797)\n\n0.0.28 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nPostalCode: Add 'maxlen' attribute when not using mask (532a3ec)\n\n0.0.27 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: Implement NG_VALUE_ACCESSOR handlers and remove logs (cb65dc6)\n\n0.0.26 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: experimental Add NG_VALUE_ACCESSOR into DatePicker (f603e99)\n\n0.0.25 \"moh-common-lib\" (2019-04-12)\nBug Fixes\n\nFileUploaderComponent: Fix runtime issue with missing reference (a9cafca)\n\n0.0.24 \"moh-common-lib\" (2019-04-10)\nBug Fixes\n\nCommonLogger: Commmon Logger now can be used with application-defined interfaces. (4766a2b)\n\n0.0.23 \"moh-common-lib\" (2019-04-10)\nFeatures\n\nCommonLogger: CommonLogger is exported from moh-common-lib/services (85eab15)\n\n0.0.22 \"moh-common-lib\" (2019-04-08)\nBug Fixes\n\npostal-code-component: Postal Code Component Validation made to match FPC. (3d0a6bc)\n\n0.0.21 \"moh-common-lib\" (2019-04-02)\nBuild\n\nUpdate build scripts and commit hooks. (ca8bd7c)\nchangelog: Improve changelog generation, adding new categories (d5bf00b)\npackage.json: npm scripts for version should now build and package docs. (3ac6d4d)\n\nDocumentation\n\ncontributing: CONTRIBUTING.MD includes instructions on git hooks (c6befdf)\n\nFeatures\n\nToggleComponent: Import ToggleComponent from FPC (df26aa1)\n\n0.0.20 \"moh-common-lib\" (2019-04-01)\nBug Fixes\n\nMove WizardProgressItem to moh-common-lib/models and export (7fd6537)\nbuild: Refactor SimpleDate location but keep same public export API (7eaf326)\nbuild: Refactor SimpleDate location but keep same public export API (d5f44c4)\n\nFeatures\n\nbuild: Add npm run clean command to rimraf dist folders (65b8144)\nbuild: Auto-add githooks after running npm install. (3b90e60)\n\n0.0.19 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\nfile-uploader: Images array will be initialized if not provided (4e8eb9b)\n\nFeatures\n\ncomponent: Create DropdownComponent (7f968a4)\ncomponents: PasswordComponent emits on blur; page-section imported. (dbb94e1)\n\n0.0.18 \"moh-common-lib\" (2019-03-28)\nFeatures\n\ncaptcha: CaptchaModule successfully configured. (e762fc1)\n\n0.0.17 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\ncaptcha: Fix compile time bug in CAPTCHA (6caf36c)\nchangelog: Truncate duplicate sections in CHANGELOG.md (c054ca5)\ncomponent: FileUploader required properly flags on return (6242bea)\ndocs: Rename documentation/ to docs/ (650025e)\nschematics: moh-start schematic sets skipLibCheck=false in tsconfig (48dfa9d)\nsecurity: Fixed issues from npm audit. (479804f)\n\nBuild\n\npackaging: Release tagging, auto-version increment, and changelog. (8a22405)\npackaging: Update build scripts for changelog and commit hooks (aee4761)\nChange changelog generation and commit (48966c0)\n\nDocumentation\n\nlib: Generate first docs, update pageframework jsdocs (bf3cf23)\nAdd Getting Started and update main readme (2c5c994)\nCreate local-development subfolder of markdown files (2625608)\nRe-generate docs after updating PasswordComponent (017bd5f)\nUpdate link to issues instead of PR (4b884a6)\nUpdate readme to absolute paths to GitHub pages (8004583)\n\nFeatures\n\nbuild: Create \"setup:git-hooks\" npm script (1a288cd)\ncaptcha: CaptchaModule properly configured so docs are now correct. (35d0bba)\ncomponent: Create common-dropdown component (01d17d3)\ncomponents: Add 'form-bar' CSS class to both form bars (6d5649d)\ndocs: Create docs config file, .compodoccrc.json (c8cd6f4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            CaptchaDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            ServerPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha.component.ts\n            \n            component\n            CaptchaComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/e2e/src/abstract-test-page.ts\n            \n            class\n            AbstractTestPage\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/accordion/accordion.component.ts\n            \n            component\n            AccordionCommonComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                24 %\n                (8/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button-group/button-group.component.ts\n            \n            component\n            ButtonGroupComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/city.component.ts\n            \n            component\n            CityComponent\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            component\n            ConsentModalComponent\n            \n                16 %\n                (6/36)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            interface\n            ISpaEnvResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n            \n            component\n            CoreBreadcrumbComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            component\n            CountryComponent\n            \n                4 %\n                (1/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            interface\n            CountryList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            CANADA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            COUNTRY_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            UNITED_STATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date-field-format.directive.ts\n            \n            directive\n            DateFieldFormatDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                28 %\n                (7/25)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            interface\n            DateErrorMsg\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/day-validation.directive.ts\n            \n            directive\n            DayValidationDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/day-validation.directive.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/year-validate.directive.ts\n            \n            directive\n            YearValidateDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/year-validate.directive.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            component\n            DatepickerComponent\n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            component\n            FileUploaderComponent\n            \n                24 %\n                (9/37)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            interface\n            FileUploaderMsg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            loadImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            PDFJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            sha1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n            \n            component\n            FormActionBarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n            \n            component\n            FormSubmitBarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            component\n            FullNameComponent\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            interface\n            FullNameErrorMsg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/name.component.ts\n            \n            component\n            NameComponent\n            \n                9 %\n                (2/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            directive\n            ValidateNameDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            variable\n            commonValidateName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-framework/page-framework.component.ts\n            \n            component\n            PageFrameworkComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-section/page-section.component.ts\n            \n            component\n            PageSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            interface\n            PasswordErrorMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            variable\n            zxcvbn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/phn.component.ts\n            \n            component\n            PhnComponent\n            \n                4 %\n                (1/25)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/phone-number.component.ts\n            \n            component\n            PhoneNumberComponent\n            \n                16 %\n                (4/24)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/postal-code.component.ts\n            \n            component\n            PostalCodeComponent\n            \n                8 %\n                (2/25)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            directive\n            ValidateBcPostalDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            variable\n            commonValidateBcPostal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            component\n            ProvinceComponent\n            \n                4 %\n                (1/24)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            interface\n            ProvinceList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            BRITISH_COLUMBIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            PROVINCE_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            component\n            RadioComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/sin.component.ts\n            \n            component\n            SinComponent\n            \n                4 %\n                (1/24)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/street.component.ts\n            \n            component\n            StreetComponent\n            \n                13 %\n                (4/30)\n            \n        \n        \n            \n                \n                projects/common/lib/components/thumbnail/thumbnail.component.ts\n            \n            component\n            ThumbnailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n            \n            component\n            WizardProgressBarComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/xicon-button/xicon-button.component.ts\n            \n            component\n            XiconButtonComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form.ts\n            \n            class\n            AbstractForm\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/common/lib/models/address.model.ts\n            \n            class\n            Address\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                projects/common/lib/models/base.ts\n            \n            class\n            Base\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            class\n            Container\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            interface\n            WizardProgressItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImage\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageProcessingError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageScaleFactorsImpl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonImageScaleFactors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            class\n            MaskModel\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            LETTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            class\n            Person\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/simple-date.interface.ts\n            \n            interface\n            SimpleDate\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-api-service.ts\n            \n            class\n            AbstractHttpService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-pg-check.service.ts\n            \n            injectable\n            AbstractPgCheckService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            injectable\n            CheckCompleteBaseService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            interface\n            PageListInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            injectable\n            GeocoderService\n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            interface\n            GeoAddressResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            injectable\n            CommonLogger\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            interface\n            CommonLogMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/route-guard.service.ts\n            \n            guard\n            RouteGuardService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/common/lib/shared-core.module.ts\n            \n            variable\n            componentList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            function\n            copyLicense\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            LICENSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            year\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            modifyJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/MyriadWebPro_ttf_base64.ts\n            \n            variable\n            MyriadWebProTTF_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/favicon_ico.ts\n            \n            variable\n            favicon_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/gov3_bc_logo_png_base64.ts\n            \n            variable\n            BCLogoBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/overrides_scss.ts\n            \n            variable\n            overridesScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/styles.ts\n            \n            variable\n            stylesSCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/variables_scss.ts\n            \n            variable\n            variableScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            createIfMissing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            installPackageJsonDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            mohStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            overwriteFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateAngularJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            addPackageToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            getPackageVersionFromPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            buildTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            gitCommit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            message\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            projectVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            addPackageJsonScript\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            copyVersionFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updateAppComponentTs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updatePackageJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            versionJS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-select/ng-select : ^2.16.2\n        \n            @types/pdfjs-dist : ^0.1.2\n        \n            angular2-text-mask : ^9.0.0\n        \n            blueimp-load-image : ^2.20.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            moment : ^2.24.0\n        \n            ngx-bootstrap : ^3.2.0\n        \n            pdfjs-dist : ^2.0.550\n        \n            rxjs : 6.4.0\n        \n            sha1 : ^1.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CAPTCHA_STATE   (projects/.../captcha.component.ts)\n                        \n                        \n                            CommonImageError   (projects/.../images.model.ts)\n                        \n                        \n                            DatepickerSizes   (projects/.../datepicker.component.ts)\n                        \n                        \n                            SeverityLevels   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/captcha/src/captcha.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CAPTCHA_STATE\n                    \n                \n                    \n                        \n                            7 mutually exclusive states, the program can only be in one of these state\nat any given point..\n\n                        \n                    \n                        \n                            \n                                 FETCHING_CAPTCHA_IMG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUCCESS_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VERIFYING_ANSWER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 SUCCESS_VERIFY_ANSWER_CORRECT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 ERROR_VERIFY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/common/lib/models/images.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonImageError\n                    \n                \n                        \n                            \n                                 WrongType\n                            \n                        \n                        \n                            \n                                 TooSmall\n                            \n                        \n                        \n                            \n                                 TooBig\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                 CannotOpen\n                            \n                        \n                        \n                            \n                                 PDFnotSupported\n                            \n                        \n                        \n                            \n                                 CannotOpenPDF\n                            \n                        \n            \n        \n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n    \n        \n            \n                \n                    \n                        \n                        DatepickerSizes\n                    \n                \n                        \n                            \n                                 MINI\n                            \n                        \n                        \n                            \n                                Value : mini\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n            \n        \n\n    projects/common/lib/services/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        SeverityLevels\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addPackageJsonScript   (projects/.../index.ts)\n                        \n                        \n                            addPackageToPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            copyLicense   (projects/.../index.ts)\n                        \n                        \n                            copyVersionFile   (projects/.../index.ts)\n                        \n                        \n                            createIfMissing   (projects/.../index.ts)\n                        \n                        \n                            getPackageVersionFromPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            installPackageJsonDependencies   (projects/.../index.ts)\n                        \n                        \n                            modifyJSON   (projects/.../json.ts)\n                        \n                        \n                            mohStart   (projects/.../index.ts)\n                        \n                        \n                            overwriteFile   (projects/.../index.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../json.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../package-config.ts)\n                        \n                        \n                            updateAngularJson   (projects/.../index.ts)\n                        \n                        \n                            updateAppComponentTs   (projects/.../index.ts)\n                        \n                        \n                            updatePackageJson   (projects/.../index.ts)\n                        \n                        \n                            updateTsConfig   (projects/.../index.ts)\n                        \n                        \n                            versionJS   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/schematics/src/version-js/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageJsonScript\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageJsonScript(tree, scriptName, script)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scriptName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    script\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyVersionFile\n                        \n                        \n                    \n                \n            \n            \n                \ncopyVersionFile(options: any, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAppComponentTs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAppComponentTs(tree, _context)\n                \n            \n\n\n\n\n            \n                \n                    Updates app.component.ts to console.log out the generated version file \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePackageJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePackageJson(tree, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            versionJS\n                        \n                        \n                    \n                \n            \n            \n                \nversionJS(options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copy over version.js to src/version.js, and update the package.json.\nMust be called with repo, e.g. --repo=https://github.com/bcgov/prime-web/\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/package-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageToPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageToPackageJson(host, pkg, version, forceOverwrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Adds a package to the package.json in the given host tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pkg\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forceOverwrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPackageVersionFromPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \ngetPackageVersionFromPackageJson(tree, name)\n                \n            \n\n\n\n\n            \n                \n                    Gets the version of the specified package by looking at the package.json in the given tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/copy-license/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            copyLicense\n                        \n                        \n                    \n                \n            \n            \n                \ncopyLicense(_options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copies over an APACHE-2 License to the top level of a project.  This rule\nwill overwrite any pre-existing LICENSE file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createIfMissing\n                        \n                        \n                    \n                \n            \n            \n                \ncreateIfMissing(host, targetPath, content: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            installPackageJsonDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ninstallPackageJsonDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mohStart\n                        \n                        \n                    \n                \n            \n            \n                \nmohStart(_options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            overwriteFile\n                        \n                        \n                    \n                \n            \n            \n                \noverwriteFile(host, targetPath, content)\n                \n            \n\n\n\n\n            \n                \n                    Use a string to overwrite a file. Checks to make sure file does not have content. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAngularJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAngularJson(host)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTsConfig\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTsConfig(host, _context)\n                \n            \n\n\n\n\n            \n                \n                    Configures settings in tsconfig.json that are required to properly import\nfrom moh-common-lib\nSpecifically, skibLibCheck\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/helpers/json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            modifyJSON\n                        \n                        \n                    \n                \n            \n            \n                \nmodifyJSON(host, fileName, transformFn)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transformFn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoH Common Styles\nDocumentation\nDocumentation - https://bcgov.github.io/moh-common-styles/\nRequirements\n\nnode (using 8.9.4, but older versions may be compatible)\nnpm (6.4.1, but older versions may be compatible)\n\nInstallation\nnpm install --save moh-common-libSetup (Shared Components)\nTo setup the shared components:\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})You can read more at the Getting Started Guide\nFeedback, Mistakes, and Pull Requests\nThis library and the documentation are still very young and there are bound to be growing pains.\nIf you find any mistakes with either this documentation or the underlying library please submit an Issue on GitHub. Or if you're able you can ask me in person.  Thanks\n- Adam Coard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright © 2017, Province of British Columbia, Canada.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDayValidationDirective\n\nDayValidationDirective\n\nSharedCoreModule -->\n\nDayValidationDirective->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nYearValidateDirective\n\nYearValidateDirective\n\nSharedCoreModule -->\n\nYearValidateDirective->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDayValidationDirective \n\nDayValidationDirective \n\nDayValidationDirective  -->\n\nSharedCoreModule->DayValidationDirective \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\nYearValidateDirective \n\nYearValidateDirective \n\nYearValidateDirective  -->\n\nSharedCoreModule->YearValidateDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    33 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nAssumption: you've already installed moh-common-lib.\nImporting the Library (moh-common-lib)\nImport components via the SharedCoreModule.\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})By adding this module you will automatically get access to core components, each starting with  \"common-*\". View all components\nThis does not import Services, Models, and some specific components like FileUploader and Captcha. Those will be detailed below.\nImporting Dos and Don'ts\nAll imports from moh-common-lib should go to one of the secondary entry points listed above (e.g. /models or /captcha). You should never import from a deeper level. When auto-importing make sure to double-check the import paths because VS Code often likes to setup incorrect imports.\n// GOOD\nimport { GeocoderService } from 'moh-common-lib/services';\n\n// BAD\nimport { GeoAddressResult } from 'moh-common-lib/services/geocoder.service';If you need access to an export and can only get it this way, let us know and we can export it properly.\nImporting a Service (moh-common-lib/services)\nIf a service is usable as-is, you can find them in the Injectables section of the documentation in the menu.\nimport { GeocoderService } from 'moh-common-lib/services';Setting up an API Service (moh-common-lib/services)\nIn some cases, we provide abstract classes that provide the foundation of services you will create.   \nFor example, the AbstractHTTPService:\nimport { AbstractHttpService } from 'moh-common-lib/services';\n\n@Injectable()\nexport class APIService extends AbstractHTTPService {}\n// You will have to setup _headers, and handleError(), \n// and create your own methods for each API Request using this.get() and this.post()These Abstract classes are not injectables and as such are found under Classes.  The Classes folder section also includes other non-service classes, like models.\nImporting a Model (moh-common-lib/models)\nModels are all found under Classes.\nimport { Address } from 'moh-common-lib/models';\nconst addr = new Address();The address, and others like it, is a pure TypeScript model with no specific Angular integration. However, other components may expect an Address as an @Input.\nFile Uploader classes, interfaces, etc. (moh-common-lib/images)\nAll classes, interfaces, and enums related to the FileUploader are all in moh-common-lib/images\nimport { CommonImage, CommonImageError, CommonImageScaleFactorsImpl } from 'moh-common-lib/images';This does NOT include the actual FileUploader, which is currently in the SharedCoreModule.\nCAPTCHA\nNote: This is still in development and may not be working\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development.html":{"url":"additional-documentation/local-development.html","title":"additional-page - Local Development","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocal Development\n\ncomponents\nschematics\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/schematics.html":{"url":"additional-documentation/local-development/schematics.html","title":"additional-page - Schematics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchematics\nThis file will help you get setup with building and running schematics. This is not necessary for publishing NPM builds of components, but is relevant if you wish to use these schematics for code-generation.\nWriting code & compiling changes\nMake sure to write all changes to .ts files, e.g. index.ts.   The schematics folder, and all schemtaics, must be in projects/common/schematics\n    npm run build # compiles one time - must be run in schematics folder\n    npm run build -- -w # watches for changes and re-compiles - in schematics folder\n    npm run build:schematics # helper command - can be run anywhere in project, even top levelThen use the above to compile to .d.ts, .js, and .map.js files. It's important to compile the files before running any schematics either locally or before publishing to npm, etc. \nUnsure: Potentially you may need to run npm install prior to your first build.\nLinking Schematics\nLinking schematics only has to be done once. You'll only have to do it again if you move this folder.\nWe have to link from the projects/common/schematics folder. You can tell it's the correct folder because it has package.json in it.\n    cd moh-common-styles/projects/common/schematics\n    npm link # creates moh-common-schematics link, name from package.jsonCreating a new project and running schematics\n    ng new example --style=scss --routing=true // both params required\n    npm link moh-common-schematics # creates a symlink to the schematics folder above\n    ng g moh-common-schematics:moh-start # runs the schematicCreating a new schematic\nFirst, you must make sure the schematics-cli is installed on your machine.\n    npm install -g @angular-devkit/schematics-cliTo create a new schematic, make sure to run the command from the right folder.  It should be in the same folder as the moh-common-schematics package.json. projects/common/schematics\n    cd projects/common/schematics\n    schematics blank  --name=schematic-name-exampleTODO\n\n ~~*High Priority Fix compilation errors when lodaing moh-common-lib (WizardProgressBar) in moh-start by adding to tsconfig:*~~ [2019-03-06]\n  \"typeRoots\": [ \"../node_modules/@types\" ],\n  \"skipLibCheck\": true\n Making changes to schematic + re-compiling (npm run build + watch command)\n\n Include integration with upcoming moh-common-styles library\n\n resolve issue with component viewProviders, ControlContainer + ngForms for \"nested\" components\n\n uncomment pollyfills.ts\n\n Package.json scripts from fpc (e.g. version, preversion)\n\n Document need for openshift/ folder to still be manually setup\n\n Configurable project name, e.g. change page title.\n\n Split moh-start schematic into multiple schematics, de-compose them. Will make path to future 'update' calls simpler (update-scss, update-assets, update-dependencies). Moh-start should just call each of them.\n\n Convert moh-start to use templates instead of base64 encoding (like version-js does)\n\n Add momentjs as dependency to package.json\n\n Add NgForm and other modules to appropriate angular modules\n\n angular.json - add preserveSymlinks to new projects\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/components.html":{"url":"additional-documentation/local-development/components.html","title":"additional-page - Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComponents\nThis file will help you get setup with local development for components, modules, and other importable objects. This includes local builds, but it is also a required step in order to create builds for NPM.\nThis does not include schematics which are not imported by projects but rather ran on them or used to generate code. \nNew Project Setup + Schematics\nThis project has 2 main parts to it, and this readme is broken in 2 to reflect that.\n\nThe Library - moh-common-lib - relates to this project as a component library for an Angular application, to appear in the node_modules/ folder of an Angular application\nThe Schematics - moh-common-schematics - relates to this project as a collection of Angular schematics and scripts to setup a whole project or files within a project. These schematics live in this project, but operate on an Angular application.\n\nThere are two different npm links for each of these facets.  Each one corresponds to a different package.json:\n\nmoh-common-lib (library) > projects/common/package.json\nmoh-common-schematics (schematics) > projects/common/schematics/package.json\n\nFor more information on schematics, look at the Schematics documentation.\nThe Library\nBuilding the Library\nFirst make sure to run npm install prior to building, to install necessary dependencies.  You must build the library prior to using and linking in local development.\n> ng build moh-commmon-libIf it runs well, the end of the output should show the following:\nBuilt moh-common-lib\nBuilt Angular Package!\n- from: /space/workspace/moh-common-styles/projects/common\n- to:   /space/workspace/moh-common-styles/dist/commonWe can see build artifacts are created in the \"to\" folder. For local development, we will npm link directly to that folder; when publishing to npm we will publish tohse artifacts.\nSetting up npm link for library\nOh the command line navigate to the \"to\" folder from above, the dist folder for the common project: moh-common-styles/dist/common. Then run the following command:\n> npm linkNote - the dist/common folder MUST have a package.json in it. The name in the package.json will be used as a reference when linking to this folder from other folders (e.g. when configuring PRIME to use this common library). In our case the name is moh-common-lib. Assuming all goes well you should see output at the end like this (paths may differ):\n.../example/path.../node/v8.9.4/lib/node_modules/moh-common-lib -> /space/workspace/moh-common-styles/projects/common\nIf the folder does not exist, or is empty, make sure to build the library.\nSetting up npm link for library\nYou must make sure to set \"preserveSymlinks\": true in angular.json under the project>architect>build>options.\nThen navigate to the application which will consume the library, make sure you're in the same folder as that application's package.json (this should be the top level, e.g. prime-web/).  From there, run npm link moh-common-lib.  That's it, the build artifacts from the library will now appear in node_modules/ and can be imported like any other library.  Now in the application you can write...\nTypeScript\nimport { example } from 'moh-common-lib'\nIf you've made any chanfges to the library make sure to re-build with ng build moh-commmon-lib from the library folder.\nAs for what specifically you can import from 'moh-common-lib', that is all defined in projects/common/src/public_api.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
