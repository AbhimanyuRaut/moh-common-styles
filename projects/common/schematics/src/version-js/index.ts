import { Rule, SchematicContext, Tree, move, apply, url, template, branchAndMerge,
  mergeWith, SchematicsException } from '@angular-devkit/schematics';
import fs = require('fs');
import { strings } from '@angular-devkit/core';
import { modifyJSON, sortObjectByKeys } from '../helpers/json';

/**
 * Copy over version.js to src/version.js, and update the package.json.
 *
 * Must be called with repo, e.g. --repo=https://github.com/bcgov/prime-web/
 */
export function versionJS(options: any): Rule {
  return (tree: Tree, _context: SchematicContext) => {
    addPackageJsonScript(tree, _context);
    updateAppComponentTs(tree, _context);
    return copyVersionFile(options, _context);
  };
}

function copyVersionFile(options: any, _context: SchematicContext) {

  if (!options.repo || (options.repo[options.repo.length - 1] !== '/' )) {
    throw new SchematicsException(`You must specify a repo option with a trailing slash pointing to the GitHub repo.
    e.g. --repo=https://github.com/bcgov/prime-web/`);
  }

  const templateSource = apply(url('./files'), [
    template({
      ...strings,
      ...options,
    }),
    move('src/')
  ]);
  _context.logger.info('✓ copied over version.js!');
  return branchAndMerge(mergeWith(templateSource));
}

function addPackageJsonScript(tree: Tree, _context: SchematicContext) {
  modifyJSON(tree, 'package.json', (packageJson) => {
    if (packageJson['scripts']['prebuild']) {
      throw new SchematicsException('Unable to setup pre-build script in package.json as one already exists.');
    }
    packageJson['scripts']['prebuild'] = 'node src/version.js';
    sortObjectByKeys(packageJson['scripts']);

    return packageJson;
  });
  _context.logger.info('✓ added pre-build script in package.json for version.js!');
}



/** Updates app.component.ts to console.log out the generated version file */
function updateAppComponentTs(tree: Tree, _context: SchematicContext) {
  const IMPORT_LINE = 'import * as version from \'../version.GENERATED\';';
  // tslint:disable-next-line:max-line-length
  const CONSOLE_LINES = `
    // This line was AUTO-GENERATED by moh-common-schematics:version-js. Feel free to move this line and/or delete the comment.
    version.success ? console.log('%c' + version.message, 'color: #036; font-size: 20px;') : console.error(version.message);`;

  const APP_COMP_PATH = 'src/app/app.component.ts';


  const content = tree.read(APP_COMP_PATH);
  let strContent = '';
  if (content) {
    strContent = content.toString();

    // Add import to first line
    const split = strContent.split('\n');
    split.splice(0, 0, IMPORT_LINE);
    // Add console logs to inside body of ngOnInit()
    const ngOnInitLine = split.findIndex(x => x.includes('ngOnInit')) + 1; // +1 is the body
    split.splice(ngOnInitLine, 0, CONSOLE_LINES);

    strContent = split.join('\n');
    tree.overwrite(APP_COMP_PATH, strContent);

  _context.logger.info('✓ modified app.component.ts adding imports and console.log version in ngOnInit()');

  }
}
